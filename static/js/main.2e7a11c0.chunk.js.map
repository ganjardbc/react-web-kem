{"version":3,"sources":["redux/AuthRedux.js","modules/custom/customTable.js","components/login/login.js","cards/Percentage.js","cards/Piechart.js","cards/Linechart.js","cards/Barchart.js","cards/Statistic.js","components/dashboard/home.js","modules/popup/Profile.js","components/texts/formTexts.js","services/Api.js","components/texts/formQa.js","components/texts/texts.js","components/students/formStudents.js","components/students/formKem.js","components/students/students.js","pages/PopUpAlert.js","components/training/formTraining.js","components/training/reads.js","components/training/training.js","modules/popup/Calendar.js","components/kem/formKem.js","components/kem/kem.js","components/qa/formQa.js","components/qa/qa.js","App.js","serviceWorker.js","redux/eventtrackmiddleware.js","sagas/AuthSagas.js","sagas/index.js","services/ImmutablePersistenceTransform.js","config/reduxpersist.js","redux/index.js","redux/createstore.js","index.js"],"names":["createActions","authRequest","authSuccess","authFailure","authLogout","authUserUpdate","authLoginCheck","Types","Creators","AuthTypes","INITIAL_STATE","Immutable","fetching","error","user","AuthSelectors","getData","state","data","request","merge","success","action","payload","failure","logout","userUpdate","reducer","createReducer","AUTH_REQUEST","AUTH_SUCCESS","AUTH_FAILURE","AUTH_LOGOUT","AUTH_USER_UPDATE","AUTH_LOGIN_CHECK","exports","customTable","typography","useNextVariants","overrides","MUIDataTable","paper","position","width","boxShadow","border","borderRadius","overflow","responsiveScroll","MuiToolbar","root","MUIDataTableToolbar","backgroundColor","titleText","color","icon","iconActive","left","flex","actions","MUIDataTableSearch","main","right","zIndex","textAlign","display","searchIcon","verticalAlign","searchText","marginRight","clearIcon","MUIDataTableHead","MUIDataTableHeadRow","MUIDataTableHeadCell","fontSize","fontWeight","fixedHeader","borderBottom","padding","height","toolButton","sortActive","sortAction","MuiButtonBase","MUIDataTableBodyCell","MUIDataTableSelectCell","headerCell","checkboxRoot","MuiInput","top","underline","MuiSelect","customTable2","customOptions","selectableRows","filterType","responsive","rowsPerPage","rowsPerPageOptions","print","download","elevation","filter","viewColumns","customOptions2","customOptions3","sort","Login","props","startFetch","LoadingBar","continousStart","onFinishFetch","complete","nisn","password","redirect","auth","handleChangenisn","bind","handleChangePassword","handleSubmit","event","this","setState","target","value","preventDefault","login","newProps","console","info","push","to","history","Router","browserHistory","className","onRef","ref","onSubmit","type","placeholder","onChange","required","Component","connect","dispatch","obj","AuthAction","Percentage","style","margin","name","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","index","x","cos","y","sin","fill","textAnchor","dominantBaseline","toFixed","CardPieChart","activeIndex","onPieEnter","PieInfo","dt","val","length","key","aspect","labelLine","label","dataKey","map","entry","uv","pv","amt","TITLE","CardLineChart","LineInfo","bottom","strokeDasharray","stackId","stroke","CardBartChart","BarInfo","Statistic","Home","cardPercentage","cardLinechart","cardBarchart","cardPie","cardStatistic","opActivePopup","clActivePopup","opContentPopup","clContentPopup","Profile","opProfile","profileClass","smallProfileClass","onClick","float","payloadDefault","FormRoom","onClickClose","e","onClickSave","readOnly","judul","isi","marginLeft","create","api","localStorage","getItem","apisauce","baseURL","timeout","getAllPagingLatihan","body","post","getFullBacaan","getAllPagingBacaan","createBacaan","updateBacaan","deleteBacaan","getListSoalByBacaanId","createSoal","updateSoal","deleteSoal","getAllPagingSiswa","get","createSiswa","updateSiswa","deleteSiswa","getAllPagingKem","getChartsKem","userAuth","getUserDetail","headers","ct","require","defaulPayload","PageQA","linearProgress","openJawaban","dataTableJawaban","soal","rawData","jawaban","id","visibleJawaban","getMuiTheme","createMuiTheme","options","id_bacaan","idBacaan","param","response","status","dataTable","id_jawaban_benar","log","columns","customBodyRender","tableMeta","rowIndex","alert","rowData","theme","title","buttonCreate","onCreate","renderMain","renderJawaban","Texts","opEditAble","editAble","clEditAble","openFormQa","formQaVisible","selectedIndex","openCreateForm","createVisible","openEditForm","editVisible","a","ok","message","handleUpdate","window","confirm","handleDelete","table_limit","table_page","table_query","textsCount","jumlah_kata","id_user","tableOptions","serverSide","count","onTableChange","tableState","page","defaultPayload","FormEmployee","nama","kelas","sekolah","email","renderForm","PageKem","nilai","Students","limit","number","openFormKem","formKemVisible","openDeletePopup","deletePopUpVisible","rawDataPosition","dataTablePosition","getAllPagingStudents","positionCount","params","username","id_avatar","PopUp","class","marginTop","alignContent","onClickDelete","file","htmlFor","removeChange","FormPosition","positionName","PageReads","value2","index2","Training","openReadsForm","readsPopUpVisible","openSavePopUp","savePopUpVisible","handlePopUp","postTraining","messagae","deleteTraining","trainingCount","done","Pages","clPlaceDate","dateContent","opPlaceDate","calendarVisible","handleClickOutside","handleChange","moment","handleSave","datePicker","handleSelectDate","clearDateField","dateField","date","format","element","document","querySelector","addEventListener","closest","contains","outsideclickListener","prevProps","undefined","disabled","openChoosePosition","onClickVisiblePosition","visiblePopupPosition","dataDetail","tablePosition","loading","imageUrl","getImageBlob","employeePhotoURL","fileName","downloadFotoEmployee","res","config","url","acceptedFiles","formData","FormData","append","uploadFotoEmployee","justifyContent","src","alt","align","onDrop","getRootProps","getInputProps","marginBottom","onSave","firstName","lastName","birthPlace","Calendar","birthDate","role","address","contactNumber","nik","renderPosition","Kem","M","postKem","putKem","deleteKem","waktu","jumlah_benar","bacaan","angle","opSubMenu","opMenu","App","createSubMenu","link","appClass","appButtonClass","travelClass","travelSubmenu","travelMoreIcon","timeClass","timeSubmenu","timeMoreIcon","leaveClass","leaveSubmenu","leaveMoreIcon","overtimeClass","overtimeSubmenu","overtimeMoreIcon","employeeClass","employeeSubmenu","employeeMoreIcon","nextProps","setTimeout","onLogoOut","exact","path","component","Qa","Boolean","location","hostname","match","eventTrackMiddleware","store","next","getAuth","call","atob","isEmpty","token","setItem","userInfo","isLoggedIn","usname","JSON","stringify","put","AuthActions","empApi","API","all","takeLatest","isImmutable","R","fromImmutable","asMutable","deep","out","raw","in","REDUX_PERSIST","active","reducerVersion","storeConfig","storage","storageSession","whitelist","transforms","immutablePersistenceTransform","reducers","combineReducers","finalReducers","ReduxPersist","persistConfig","persistReducer","rootReducer","rootSaga","middleware","enhancers","EventTrackMiddleware","sagaMiddleware","createSagaMiddleware","sagaMonitor","applyMiddleware","createStore","compose","sagasManager","run","configureStore","persistor","persistStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2sBAK4BA,wBAAc,CACzCC,YAAa,CAAC,QACdC,YAAa,CAAC,WACdC,YAAa,CAAC,SACdC,WAAY,GACZC,eAAgB,CAAC,QACjBC,eAAgB,OANTC,E,EAAAA,MAAOC,E,EAAAA,SASFC,EAAYF,EACVC,YAIR,IAAME,EAAgBC,IAAU,CACtCC,SAAU,KACVC,MAAO,KACPC,KAAM,OAKMC,EAAgB,CAC5BC,QAAS,SAAAC,GAAK,OAAIA,EAAMC,OAMZC,EAAU,SAACF,EAAD,KAAUC,KAAV,OAAqBD,EAAMG,MAAM,CAAER,UAAU,EAAMC,MAAO,KAAMC,KAAM,QAGhFO,EAAU,SAACJ,EAAOK,GAAY,IAClCC,EAAYD,EAAZC,QACR,OAAON,EAAMG,MAAM,CAAER,UAAU,EAAOC,MAAO,KAAMC,KAAMS,KAI7CC,EAAU,SAACP,EAAD,OAAUJ,EAAV,EAAUA,MAAV,OAAsBI,EAAMG,MAAM,CAAER,UAAU,EAAOC,WAE/DY,EAAS,SAAAR,GAAK,OAAIA,EAAMG,MAAM,CAAER,UAAU,EAAOC,MAAO,KAAMC,KAAM,QAEpEY,EAAa,SAACT,EAAD,KAAUC,KAAV,OAAqBD,EAAMG,MAAM,CAAER,UAAU,EAAMC,MAAO,QAEvEP,EAAiB,SAAAW,GAAK,OAAIA,EAAMG,MAAM,CAAER,UAAU,KAIlDe,EAAUC,wBAAclB,GAAD,mBAClCH,EAAMsB,aAAeV,GADa,cAElCZ,EAAMuB,aAAeT,GAFa,cAGlCd,EAAMwB,aAAeP,GAHa,cAIlCjB,EAAMyB,YAAcP,GAJc,cAKlClB,EAAM0B,iBAAmBP,GALS,cAMlCnB,EAAM2B,iBAAmB5B,GANS,K,uCClDpC6B,EAAQC,YAAc,WACpB,MAAO,CACHC,WAAY,CACVC,iBAAiB,GAEnBC,UAAW,CACTC,aAAc,CACZC,MAAO,CACLC,SAAU,WACVC,MAAO,kBACPC,UAAW,gCACXC,OAAQ,4BACRC,aAAc,MACdC,SAAU,UAEZC,iBAAkB,CAChBN,SAAU,WACVC,MAAO,oBAKXM,WAAY,CACVC,KAAM,CACJR,SAAU,aAGdS,oBAAqB,CACnBD,KAAM,CACJR,SAAU,WACVU,gBAjCI,QAmCNC,UAAW,CACTC,MAAO,QAETC,KAAM,CACJD,MAAO,mBAETE,WAAY,CACVF,MAAO,mBAETG,KAAM,CACJC,KAAM,uBAERC,QAAS,CACPD,KAAM,wBAGVE,mBAAoB,CAClBC,KAAM,CACJnB,SAAU,WAEVoB,MAAO,QACPnB,MAAO,kBACPS,gBAzDI,OA0DJW,OAAQ,KACRC,UAAW,QACXC,QAAS,SAEXC,WAAY,CACVvB,MAAO,kBACPW,MAAO,kBACPW,QAAS,eACTD,UAAW,SACXG,cAAe,OAEjBC,WAAY,CACVzB,MAAO,gCACP0B,YAAa,OACbf,MAAO,kBACPW,QAAS,eACTE,cAAe,OAEjBG,UAAW,CACT3B,MAAO,kBACPW,MAAO,kBACPW,QAAS,eACTE,cAAe,QAGnBI,iBAAkB,CAChBV,KAAM,CACJnB,SAAU,WACVU,gBAtFI,OAuFJE,MAAO,SAGXkB,oBAAqB,CACnBtB,KAAM,CACJR,SAAU,WACVU,gBA7FI,SAgGRqB,qBAAsB,CACpBvB,KAAM,CACJwB,SAAU,OACVC,WAAY,MACZrB,MAAO,QAETsB,YAAa,CACXlC,SAAU,WACVmC,aAAc,4BAEdvB,MAAO,OACPwB,QAAS,OACTC,OAAQ,QAEVC,WAAY,CACVf,QAAS,OACTc,OAAQ,QAEV7D,KAAM,CACJ+C,QAAS,eACTE,cAAe,OAEjBc,WAAY,CACV3B,MAAO,QAET4B,WAAY,CACV5B,MAAO,OACPW,QAAS,eACTE,cAAe,MACfgB,cAAe,CACb7B,MAAO,OACPJ,KAAM,CACJI,MAAO,WAKf8B,qBAAsB,CACpBlC,KAAM,CACJR,SAAU,WACVgC,SAAU,MACVI,QAAS,SAGbO,uBAAwB,CACtBC,WAAY,CACVlC,gBA7IM,UA8INmC,aAAc,CACZjC,MAAO,SAGXiC,aAAc,CACZjC,MAAO,SAGXkC,SAAU,CACRtC,KAAM,CACJuC,IAAK,MACLnC,MAAO,mBAEToC,UAAW,CACTb,aAAc,8BAGlBc,UAAW,CACTzC,KAAM,CACJuC,IAAK,IACLnC,MAAO,uBAYnBnB,EAAQyD,aAAe,WACrB,MAAO,CACHvD,WAAY,CACVC,iBAAiB,GAEnBC,UAAW,CACTC,aAAc,CACZU,KAAM,CACJE,gBAtLM,WAwLRX,MAAO,CACLG,UAAW,mCACXC,OAAQ,4BACRC,aAAc,MACdC,SAAU,WAGdE,WAAY,CACVC,KAAM,CACJO,KAAM,CACJC,KAAM,uBAERC,QAAS,CACPD,KAAM,yBAIZP,oBAAqB,CACnBD,KAAM,CACJE,gBA3MM,WA6MRC,UAAW,CACTC,MAAO,QAETC,KAAM,CACJD,MAAO,SAGXM,mBAAoB,CAClBM,WAAY,CACVZ,MAAO,QAETc,WAAY,CACVd,MAAO,QAETgB,UAAW,CACThB,MAAO,SAGXiB,iBAAkB,CAChBV,KAAM,CACJT,gBAlOI,OAmOJE,MAAO,SAGXkB,oBAAqB,CACnBtB,KAAM,CACJE,gBAxOI,SA2ORqB,qBAAsB,CACpBvB,KAAM,CACJwB,SAAU,OACVC,WAAY,MACZrB,MA/OI,QAiPNsB,YAAa,CACXlC,SAAU,WACVU,gBAlPM,UAmPNE,MAAO,OACPwB,QAAS,OACTC,OAAQ,QAEVC,WAAY,CACVf,QAAS,OACTc,OAAQ,QAEV7D,KAAM,CACJ+C,QAAS,eACTE,cAAe,OAEjBc,WAAY,CACV3B,MAAO,QAET4B,WAAY,CACV5B,MAAO,OACPW,QAAS,eACTE,cAAe,MACfgB,cAAe,CACb7B,MAAO,OACPJ,KAAM,CACJI,MAAO,WAKf8B,qBAAsB,CACpBlC,KAAM,CACJwB,SAAU,OACVI,QAAS,SAGbO,uBAAwB,CACtBC,WAAY,CACVlC,gBAtRM,UAuRNmC,aAAc,CACZjC,MAAO,SAGXiC,aAAc,CACZjC,MAAO,YAOnBnB,EAAQ0D,cAAgB,WACtB,MAAO,CAELC,eAAgB,OAChBC,WAAY,cACZC,WAAY,SACZC,YAAa,EACbC,mBAAoB,CAAC,EAAG,GAAI,GAAI,IAChCC,OAAO,EACPC,UAAU,EACVC,UAAW,EACXC,QAAQ,EACRC,aAAa,IAIjBpE,EAAQqE,eAAiB,WACvB,MAAO,CACLV,gBAAgB,EAChBC,WAAY,WACZC,WAAY,SACZC,YAAa,EACbC,mBAAoB,CAAC,EAAG,GAAI,GAAI,IAChCC,OAAO,EACPC,UAAU,EACVC,UAAW,IAIflE,EAAQsE,eAAiB,WACvB,MAAO,CACLX,gBAAgB,EAChBC,WAAY,WACZC,WAAY,SACZC,YAAa,EACbC,mBAAoB,CAAC,EAAG,GAAI,GAAI,IAChCC,OAAO,EACPC,UAAU,EACVM,MAAM,EACNL,UAAW,K,gOCnUTM,E,YAEF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KA6CVC,WAAa,WACT,EAAKC,WAAWC,kBA/CD,EAkDnBC,cAAgB,WACmB,kBAApB,EAAKF,YAAyB,EAAKA,WAAWG,YAjDzD,EAAKhG,MAAQ,CACTiG,KAAM,GACNC,SAAU,GACVC,WAAUR,EAAMS,KAAKvG,MAEzB,EAAKwG,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,gBAC5B,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBATL,E,8EAYFG,GACbC,KAAKC,SAAS,CAAEV,KAAMQ,EAAMG,OAAOC,U,2CAGlBJ,GACjBC,KAAKC,SAAS,CAAET,SAAUO,EAAMG,OAAOC,U,mCAG9BJ,GACTA,EAAMK,iBACNJ,KAAKK,U,gDAGiBC,GACjBA,EAASZ,KAAKzG,WACXqH,EAASZ,OAASY,EAASZ,KAAKxG,OAChC8G,KAAKC,SAAS,CAAER,UAAU,IAC1BO,KAAKX,iBAELW,KAAKX,mB,8BAMbW,KAAKd,aADD,MAEuBc,KAAK1G,MAC5BM,EAAU,CACV2F,KAJA,EAEIA,KAGJC,SALA,EAEUA,UAKdQ,KAAKf,MAAM3G,YAAYsB,K,+BAWjB,IAAD,OAGL,OADA2G,QAAQC,KAAKR,KAAK1G,MAAMmG,UACpBO,KAAK1G,MAAMmG,SACJ,kBAAC,IAAD,CAAUgB,MAAI,EAACC,GAAG,UAIzB,kBAAC,IAAD,CAAYC,QAASC,IAAOC,gBACxB,yBAAKC,UAAU,gBACX,kBAAC,UAAD,CAAYC,MAAO,SAAAC,GAAG,OAAK,EAAK7B,WAAa6B,KAC7C,yBAAKF,UAAU,6BACX,yBAAKA,UAAU,eASX,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,qCAAf,aAMR,0BAAMG,SAAUjB,KAAKF,cACjB,yBAAKgB,UAAU,eACX,yBAAKA,UAAU,uDAAf,QAGA,2BACII,KAAK,OACLJ,UAAU,yBACVK,YAAY,WACZhB,MAAOH,KAAK1G,MAAMiG,KAClB6B,SAAUpB,KAAKL,iBACf0B,UAAQ,KAEhB,yBAAKP,UAAU,eACX,yBAAKA,UAAU,uDAAf,YAGA,2BACII,KAAK,WACLC,YAAY,WACZL,UAAU,yBACVX,MAAOH,KAAK1G,MAAMkG,SAClB4B,SAAUpB,KAAKH,qBACfwB,UAAQ,KAEhB,yBAAKP,UAAU,eACX,2BACII,KAAK,SACLf,MAAM,UACNW,UAAU,4C,GAlH9BQ,aA2ILC,eAZS,SAAAjI,GACpB,MAAO,CACHoG,KAAMpG,EAAMoG,SAIO,SAAA8B,GACvB,MAAO,CACHlJ,YAAa,SAAAmJ,GAAG,OAAID,EAASE,UAAWpJ,YAAYmJ,QAI7CF,CAA6CvC,GC7G7C2C,E,iLAlCX,OACE,yBAAKb,UAAU,gBAEb,yBAAKA,UAAU,+CACb,yBAAKA,UAAU,sCAAf,eAGF,yBAAKA,UAAU,YACb,yBAAKA,UAAU,sCACb,uCAGA,yBAAKA,UAAU,QAAQc,MAAO,CAACC,OAAQ,SACnC,yBAAKf,UAAU,QACf,yBAAKA,UAAU,iB,GAhBNQ,a,QCGnB/H,EAAO,CACX,CAAEuI,KAAM,cAAe3B,MAAO,KAC9B,CAAE2B,KAAM,cAAe3B,MAAO,KAC9B,CAAE2B,KAAM,cAAe3B,MAAO,KAC9B,CAAE2B,KAAM,cAAe3B,MAAO,MAG1B4B,EAAS,CAAC,UAAW,UAAW,UAAW,WAE3CC,EAASC,KAAKC,GAAK,IACnBC,EAAwB,SAAC,GAExB,IADLC,EACI,EADJA,GAAIC,EACA,EADAA,GAAIC,EACJ,EADIA,SAAUC,EACd,EADcA,YAAaC,EAC3B,EAD2BA,YAAaC,EACxC,EADwCA,QAErCC,GADH,EADiDC,MAErCJ,EAA4C,IAA7BC,EAAcD,IACvCK,EAAIR,EAAKM,EAAST,KAAKY,KAAKP,EAAWN,GACvCc,EAAIT,EAAKK,EAAST,KAAKc,KAAKT,EAAWN,GAE7C,OACE,0BAAMY,EAAGA,EAAGE,EAAGA,EAAGE,KAAK,QAAQC,WAAYL,EAAIR,EAAK,QAAU,MAAOc,iBAAiB,WAAtF,WACiB,IAAVT,GAAeU,QAAQ,GAD9B,OAiFWC,E,2MAzEd9J,MAAQ,CACL+J,YAAa,G,EAGfC,WAAa,SAAC/J,EAAMoJ,GAClB,EAAK1C,SAAS,CACZoD,YAAaV,K,EAiDjBY,QAAU,WAIR,IAHA,IAAIC,EAAK,GACLC,EAAMlK,EAAKmK,OAENf,EAAQ,EAAGA,EAAQc,EAAKd,IAC/Ba,EAAG/C,KACD,yBAAKK,UAAU,aAAa6C,IAAKhB,GAC/B,0BAAM7B,UAAU,qBAAqBc,MAAO,CAACjG,MAAOoG,EAAOY,GAAQjG,YAAa,WAChF,0BAAMoE,UAAU,qCAAsCvH,EAAKoJ,GAAOb,QAKxE,OAAO0B,G,wEAzDP,OACE,yBAAK1C,UAAU,QAEb,yBAAKA,UAAU,+CACb,yBAAKA,UAAU,sCAAf,eAGF,yBAAKA,UAAU,uCACb,kBAAC,IAAD,CACE9F,MAAM,OACN4I,OAAQ,EAAI,KACd,kBAAC,IAAD,CAAUhC,MAAO,CAChBC,OAAQ,SAER,kBAAC,IAAD,CACEtI,KAAMA,EACNsK,WAAW,EACXC,MAAO3B,EACPK,YAAa,GACbQ,KAAK,UACLe,QAAQ,SAGNxK,EAAKyK,KACJ,SAACC,EAAOtB,GAAR,OAAkB,kBAAC,IAAD,CACjBgB,IAAG,eAAUhB,GACbK,KAAMjB,EAAOY,EAAQZ,EAAO2B,gBAOnC,yBAAK5C,UAAU,gBACb,6BACId,KAAKuD,kB,GAhDMjC,aCxBrB/H,EAAO,CACX,CACEuI,KAAM,SAAUoC,GAAI,IAAMC,GAAI,KAAMC,IAAK,MAE3C,CACEtC,KAAM,SAAUoC,GAAI,IAAMC,GAAI,KAAMC,IAAK,MAE3C,CACEtC,KAAM,SAAUoC,GAAI,IAAMC,GAAI,KAAMC,IAAK,MAE3C,CACEtC,KAAM,SAAUoC,GAAI,KAAMC,GAAI,KAAMC,IAAK,KAE3C,CACEtC,KAAM,SAAUoC,GAAI,KAAMC,GAAI,KAAMC,IAAK,MAE3C,CACEtC,KAAM,SAAUoC,GAAI,KAAMC,GAAI,KAAMC,IAAK,MAE3C,CACEtC,KAAM,SAAUoC,GAAI,KAAMC,GAAI,KAAMC,IAAK,OAIvCC,EAAQ,CAAC,KAAM,KAAM,OACrBtC,EAAS,CAAC,UAAW,UAAW,WAoFvBuC,E,2MAhFdhL,MAAQ,CACL+J,YAAa,G,EAGfC,WAAa,SAAC/J,EAAMoJ,GAClB,EAAK1C,SAAS,CACZoD,YAAaV,K,EAyDjB4B,SAAW,WAIT,IAHA,IAAIf,EAAK,GACLC,EAAMY,EAAMX,OAEPf,EAAQ,EAAGA,EAAQc,EAAKd,IAC/Ba,EAAG/C,KACD,yBAAKK,UAAU,cAAc6C,IAAKhB,GAChC,0BAAM7B,UAAU,qBAAqBc,MAAO,CAACjG,MAAOoG,EAAOY,MAD7D,IAC2E0B,EAAM1B,KAKrF,OAAOa,G,wEAhEP,OACE,yBAAK1C,UAAU,QACb,yBAAKA,UAAU,+CACb,yBAAKA,UAAU,sCAAf,eAEF,6BACE,yBAAKA,UAAU,+BACf,kBAAC,IAAD,CACE9F,MAAM,OACN4I,OAAQ,EAAI,KACZ,kBAAC,IAAD,CACErK,KAAMA,EACNsI,OAAQ,CACN/D,IAAK,EAAG3B,MAAO,EAAGL,KAAM,EAAG0I,OAAQ,IAErC,kBAAC,IAAD,CAAeC,gBAAgB,QAC/B,kBAAC,IAAD,CAAOV,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CACE7C,KAAK,WACL6C,QAAQ,KACRW,QAAQ,IACRC,OAAO,UACP3B,KAAK,YACP,kBAAC,IAAD,CACE9B,KAAK,WACL6C,QAAQ,KACRW,QAAQ,IACRC,OAAO,UACP3B,KAAK,YACP,kBAAC,IAAD,CACE9B,KAAK,WACL6C,QAAQ,MACRW,QAAQ,IACRC,OAAO,UACP3B,KAAK,cAIT,yBAAKlC,UAAU,gBACb,yBAAKA,UAAU,0CAA0Cc,MAAO,CAACC,OAAQ,SACrE7B,KAAKuE,oB,GAvDKjD,aC3BtB/H,EAAO,CACX,CACEuI,KAAM,SAAUoC,GAAI,IAAMC,GAAI,KAAMC,IAAK,MAE3C,CACEtC,KAAM,SAAUoC,GAAI,IAAMC,GAAI,KAAMC,IAAK,MAE3C,CACEtC,KAAM,SAAUoC,GAAI,IAAMC,GAAI,EAAGC,IAAK,MAExC,CACEtC,KAAM,SAAUoC,GAAI,KAAMC,GAAI,KAAMC,IAAK,KAE3C,CACEtC,KAAM,SAAUoC,GAAI,GAAIC,GAAI,KAAMC,IAAK,MAEzC,CACEtC,KAAM,SAAUoC,GAAI,KAAMC,GAAI,KAAMC,IAAK,MAE3C,CACEtC,KAAM,SAAUoC,GAAI,KAAMC,GAAI,KAAMC,IAAK,OAIvCC,EAAQ,CAAC,KAAM,KAAM,OAErBtC,EAAS,CAAC,UAAW,UAAW,WAsEvB6C,E,2MAlEdtL,MAAQ,CACL+J,YAAa,G,EAGfC,WAAa,SAAC/J,EAAMoJ,GAClB,EAAK1C,SAAS,CACZoD,YAAaV,K,EA2CjBkC,QAAU,WAIR,IAHA,IAAIrB,EAAK,GACLC,EAAMY,EAAMX,OAEPf,EAAQ,EAAGA,EAAQc,EAAKd,IAC/Ba,EAAG/C,KACD,yBAAKK,UAAU,cAAc6C,IAAKhB,GAChC,0BAAM7B,UAAU,qBAAqBc,MAAO,CAACjG,MAAOoG,EAAOY,MAD7D,IAC2E0B,EAAM1B,KAKrF,OAAOa,G,wEAlDP,OACE,yBAAK1C,UAAU,QACb,yBAAKA,UAAU,+CACb,yBAAKA,UAAU,sCAAf,cAEF,6BACE,yBAAKA,UAAU,+BACb,kBAAC,IAAD,CACE9F,MAAM,OACN4I,OAAQ,EAAI,KACZ,kBAAC,IAAD,CACErK,KAAMA,EACNsI,OAAQ,CACN/D,IAAK,EAAG3B,MAAO,EAAGL,KAAM,EAAG0I,OAAQ,IAGrC,kBAAC,IAAD,CAAeC,gBAAgB,QAC/B,kBAAC,IAAD,CAAOV,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,MAEA,kBAAC,IAAD,CAAKA,QAAQ,KAAKW,QAAQ,IAAI1B,KAAK,YACnC,kBAAC,IAAD,CAAKe,QAAQ,KAAKW,QAAQ,IAAI1B,KAAK,cAIvC,yBAAKlC,UAAU,gBACb,yBAAKA,UAAU,0CAA0Cc,MAAO,CAACC,OAAQ,SACrE7B,KAAK6E,mB,GAzCKvD,aCJbwD,E,iLAzBX,OACE,yBAAKhE,UAAU,QACb,yBAAKA,UAAU,+CACb,yBAAKA,UAAU,sCAAf,cAEF,yBAAKA,UAAU,oCACb,yBAAKA,UAAU,2CAAf,aAGA,yBAAKA,UAAU,iDAAf,UAGA,yBAAKA,UAAU,6CACX,uBAAGA,UAAU,yBADjB,SAIA,yBAAKA,UAAU,kDAAf,0B,GAlBcQ,aCgGTyD,E,YAxFX,aAAe,IAAD,8BACV,+CAIJC,eAAiB,SAACvB,GAGd,IAFA,IAAID,EAAK,GAEAb,EAAQ,EAAGA,EAAQc,EAAKd,IAC7Ba,EAAG/C,KACC,kBAAC,EAAD,CAAgBkD,IAAKhB,KAI7B,OAAOa,GAdG,EAiBdyB,cAAgB,SAACxB,GAGb,IAFA,IAAID,EAAK,GAEAb,EAAQ,EAAGA,EAAQc,EAAKd,IAC7Ba,EAAG/C,KACC,kBAAC,EAAD,CAAekD,IAAKhB,KAI5B,OAAOa,GA1BG,EA6Bd0B,aAAe,SAACzB,GAGZ,IAFA,IAAID,EAAK,GAEAb,EAAQ,EAAGA,EAAQc,EAAKd,IAC7Ba,EAAG/C,KACC,kBAAC,EAAD,CAAckD,IAAKhB,KAI3B,OAAOa,GAtCG,EAyCd2B,QAAU,SAAC1B,GAGP,IAFA,IAAID,EAAK,GAEAb,EAAQ,EAAGA,EAAQc,EAAKd,IAC7Ba,EAAG/C,KACC,kBAAC,EAAD,CAAckD,IAAKhB,KAI3B,OAAOa,GAlDG,EAqDd4B,cAAgB,SAAC3B,GAGb,IAFA,IAAID,EAAK,GAEAb,EAAQ,EAAGA,EAAQc,EAAKd,IAC7Ba,EAAG/C,KACC,kBAAC,EAAD,CAAekD,IAAKhB,KAI5B,OAAOa,GA5DP,EAAKlK,MAAQ,GAFH,E,sEAkEV,OAEI,yBAAKwH,UAAU,gBACX,yBAAKA,UAAU,uBACVd,KAAKoF,cAAc,GACnBpF,KAAKgF,eAAe,IAEzB,yBAAKlE,UAAU,uBACVd,KAAKmF,QAAQ,IAElB,yBAAKrE,UAAU,uBACVd,KAAKkF,aAAa,GAClBlF,KAAKiF,cAAc,S,GAhFrB3D,aCHf+D,EAAgB,2BAChBC,EAAgB,oBAEhBC,EAAiB,iBACjBC,EAAiB,qCAEfC,E,YAEJ,WAAYxG,GAAQ,IAAD,8BACjB,4CAAMA,KAORyG,UAAY,WACN,EAAKpM,MAAMqM,eAAiBH,GAC9B,EAAKvF,SAAS,CAAE0F,aAAcJ,IAC9B,EAAKtF,SAAS,CAAE2F,kBAAmBP,MAEnC,EAAKpF,SAAS,CAAE0F,aAAcH,IAC9B,EAAKvF,SAAS,CAAE2F,kBAAmBN,MAZrC,EAAKhM,MAAQ,CACXqM,aAAcH,EACdI,kBAAmBN,GAJJ,E,sEAmBjBtF,KAAKf,MAAMxG,e,+BAIX,OACE,6BACE,yBACEoN,QAAS7F,KAAK0F,UACd5E,UAAWd,KAAK1G,MAAMsM,kBACtBhE,MAAO,CAAEkE,MAAO,UAChB,yBAAKhF,UAAU,aACb,yBAAKA,UAAU,qCACb,yBAAK9F,MAAM,OAAOoC,OAAO,WAG7B,yBAAK0D,UAAU,aACb,yBAAKA,UAAU,OACb,uBAAGA,UAAU,0DAUnB,yBACEc,MAAO,CAAE9D,IAAK,OAAQ9C,MAAO,SAC7B8F,UAAWd,KAAK1G,MAAMqM,cACtB,4BACE,kBAAC,IAAD,CAASjF,GAAG,KACV,wBAAImF,QAAS7F,KAAKlG,OAAO8F,KAAKI,OAC5B,uBAAGc,UAAU,yBADf,YAKF,kBAAC,IAAD,CAASJ,GAAG,KACV,wBAAImF,QAAS7F,KAAKlG,OAAO8F,KAAKI,OAC5B,uBAAGc,UAAU,8BADf,kB,GA3DQQ,aAoFPC,eAZS,SAAAjI,GACtB,MAAO,CACLoG,KAAMpG,EAAMoG,SAIW,SAAA8B,GACzB,MAAO,CACL/I,WAAY,kBAAM+I,EAASE,UAAWjJ,kBAI3B8I,CAA6CkE,G,qpBC7F5D,IAAMM,EAAiB,CACnB,QAAW,EACX,MAAS,GACZ,IAAO,IA4IOC,G,YAxIX,WAAY/G,GAAQ,IAAD,8BACf,4CAAMA,KACD3F,MAAQ,CACTC,KAAM0F,EAAM1F,KAAO0F,EAAM1F,KAAnB,KAECwM,IALI,E,sEAcT,IAAD,OACL,OACI,yBAAKjF,UAAW,4BACZ,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,gDACX,yBAAKA,UAAU,2CACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,wCACU,WAApBd,KAAKf,MAAMiC,KACN,kBACoB,WAApBlB,KAAKf,MAAMiC,KACP,gBACA,kBAGlB,yBAAKJ,UAAU,uBACX,4BACIA,UAAU,0BACV+E,QAAS7F,KAAKf,MAAMgH,cAEpB,uBAAGnF,UAAU,yBAIzB,0BAAMnH,OAAO,IACTsH,SAAU,SAACiF,GACPA,EAAE9F,iBACF,EAAKnB,MAAMkH,YAAY,EAAK7M,MAAMC,QAGtC,yBAAKuH,UAAU,wDACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,qCAAhB,UAIJ,2BACIsF,SAA8B,SAApBpG,KAAKf,MAAMiC,KACrBU,MACwB,SAApB5B,KAAKf,MAAMiC,KACL,CAAEzF,gBAAiB,WACnB,KAEVyF,KAAK,OACLJ,UAAU,yBACVK,YAAY,QACZE,UAAQ,EACRlB,MAAOH,KAAK1G,MAAMC,KAAK8M,MACvBjF,SAAU,SAAC8E,GACP,EAAKjG,SAAS,CACV1G,KAAK,EAAD,GACG,EAAKD,MAAMC,KADd,CAEA8M,MAAOH,EAAEhG,OAAOC,cAOpC,yBAAKW,UAAU,sBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,qCAAhB,QAIJ,8BACIsF,SAA8B,SAApBpG,KAAKf,MAAMiC,KACrBU,MACwB,SAApB5B,KAAKf,MAAMiC,KACL,CAAEzF,gBAAiB,WACnB,KAEVyF,KAAK,OACLJ,UAAU,mCACVK,YAAY,MACZE,UAAQ,EACRlB,MAAOH,KAAK1G,MAAMC,KAAK+M,IACvBlF,SAAU,SAAC8E,GACP,EAAKjG,SAAS,CACV1G,KAAK,EAAD,GACG,EAAKD,MAAMC,KADd,CAEA+M,IAAKJ,EAAEhG,OAAOC,eAOtC,yBAAKW,UAAU,gBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,uBACU,SAApBd,KAAKf,MAAMiC,KACR,4BACIU,MAAO,CAAE2E,WAAY,QACrBzF,UAAU,kBACVI,KAAK,UAET,uCAEA,KACJ,4BACIU,MAAO,CAAE2E,WAAY,QACrBzF,UAAU,kBACVI,KAAK,SACL2E,QAAS7F,KAAKf,MAAMgH,cAEpB,6CAOxB,yBAAKnF,UAAU,6B,GAlIRQ,a,qBCsFR,IAAEkF,OA5FF,WAAgB,IAEvBC,EAFQvF,EAAc,uDAAP,GAGEwF,aAAaC,QAAQ,gBAE1C,OAAOzF,GAEH,IAAK,WAOL,IAAK,OACDuF,EAAMG,KAASJ,OAAO,CAClBK,QAAS,uEACTC,QAAS,MAOrB,IAAMC,EAAsB,SAAAC,GAAI,OAAIP,EAAIQ,KAAK,cAAeD,IACtDE,EAAgB,SAAAF,GAAI,OAAIP,EAAIQ,KAAK,aAAcD,IAG/CG,EAAqB,SAAAH,GAAI,OAAIP,EAAIQ,KAAK,cAAeD,IACrDI,EAAe,SAAAJ,GAAI,OAAIP,EAAIQ,KAAK,gBAAiBD,IACjDK,EAAe,SAAAL,GAAI,OAAIP,EAAIQ,KAAK,gBAAiBD,IACjDM,EAAe,SAAAN,GAAI,OAAIP,EAAIQ,KAAK,gBAAiBD,IAGjDO,EAAwB,SAAAP,GAAI,OAAIP,EAAIQ,KAAK,yBAA0BD,IACnEQ,EAAa,SAAAR,GAAI,OAAIP,EAAIQ,KAAK,cAAeD,IAC7CS,EAAa,SAAAT,GAAI,OAAIP,EAAIQ,KAAK,cAAeD,IAC7CU,EAAa,SAAAV,GAAI,OAAIP,EAAIQ,KAAK,cAAeD,IAG7CW,EAAoB,SAAAX,GAAI,OAAIP,EAAImB,IAAI,YAAaZ,IACjDa,EAAc,SAAAb,GAAI,OAAIP,EAAIQ,KAAK,eAAgBD,IAC/Cc,EAAc,SAAAd,GAAI,OAAIP,EAAIQ,KAAK,eAAgBD,IAC/Ce,EAAc,SAAAf,GAAI,OAAIP,EAAIQ,KAAK,eAAgBD,IAG/CgB,EAAkB,SAAAhB,GAAI,OAAIP,EAAImB,IAAI,aAAcZ,IAChDiB,EAAe,SAAAjB,GAAI,OAAIP,EAAIQ,KAAK,gBAAiBD,IAGjDkB,EAAW,SAAAlB,GAAI,OAAIP,EAAIQ,KAAK,SAAUD,IAEtCmB,EAAgB,SAAAnB,GAAI,OAAIP,EAAImB,IAAI,oBAAqB,GAAI,CAC3DQ,QAAS,CACL,cAAiB,UAAYpB,MAIrC,MAAO,CAEHG,qBACAC,eACAC,eACAC,eAGAC,wBACAC,aACAC,aACAC,aAGAO,eACAD,kBAEAjB,sBACAG,gBAGAS,oBACAE,cACAC,cACAC,cAEAI,gBACAD,c,6kBClFR,IAAIG,GAAKC,EAAQ,IAGbC,GAAgB,CACnB,QAAW,IACX,WAAc,EACd,KAAQ,CACP,CACC,KAAQ,aACR,kBAAqB,EACrB,QAAW,CACV,YACA,aACA,eACA,2BA4QWC,G,YArQX,WAAYvJ,GAAQ,IAAD,8BACf,4CAAMA,KA8CVwJ,eAAiB,WACb,EAAKxI,SAAS,CAAEwI,gBAAiB,EAAKnP,MAAMmP,kBAhD7B,EAmDnBC,YAAc,WAAmB,IAAlB/F,EAAiB,uDAAT,KACfgG,EAAmB,GACvB,GAAc,OAAVhG,EAAgB,CAChB,IAAIiG,EAAO,EAAKtP,MAAMuP,QAAQlG,GAC1BmG,EAAUF,EAAKE,QACnBH,EAAmBG,EAAQ9E,KAAI,SAAC7D,EAAOwC,GAEnC,MAAO,CACHA,GAAS,EAFSxC,EAAf4I,GAAe5I,EAAX2I,YAQnB,EAAK7I,SAAS,CAAE+I,gBAAiB,EAAK1P,MAAM0P,eAAgBL,sBAjE7C,EAoEnBM,YAAc,kBAAMC,YAAeb,GAAG5N,gBApEnB,EAqEnB0O,QAAUd,GAAGnK,gBAnET,EAAK5E,MAAQ,CACT8P,UAAWnK,EAAMoK,SACjBZ,gBAAgB,EAChBO,gBAAgB,EAChBzP,KAAK,MACEgP,GADH,CAEA,WAActJ,EAAMmK,aARb,E,iFAcfpJ,KAAK3G,Y,2JAIL2G,KAAKyI,iBAEDa,EAAQ,CACR,QAAW,EACX,UAAatJ,KAAKf,MAAMmK,W,SAGP3C,GAAID,OAAO,QAAQe,sBAAsB+B,G,OACvC,OADnBC,E,QACQC,QAA2C,MAAzBD,EAAShQ,KAAKiQ,QACpCC,EAAYF,EAAShQ,KAAKA,KAAKyK,KAAI,SAAC7D,EAAOwC,GAE3C,MAAO,CACHA,GAAS,EAF0BxC,EAA/B4I,GAA+B5I,EAA3ByI,KAA2BzI,EAArBuJ,qBAQtB1J,KAAKC,SAAS,CACV4I,QAASU,EAAShQ,KAAKA,KACvBkQ,cAEJzJ,KAAKyI,kBAELzI,KAAKyI,iBAETlI,QAAQoJ,IAAIJ,G,yIA2BF,IAAD,OACLK,EAAU,CACV,KACA,KACA,OACA,gBACA,CACI9H,KAAM,SACNqH,QAAS,CACLU,iBAAkB,SAACpG,EAAKqG,GACpB,OACI,yBAAKlI,MAAO,CAAC5G,MAAO,SAAU8F,UAAU,uBACpC,4BACIA,UAAU,uCACVc,MAAO,CAAElF,YAAa,GACtBmJ,QAAS,kBAAM,EAAK6C,YAAYoB,EAAUC,YAH9C,iBAOA,4BACIjJ,UAAU,mCACVc,MAAO,CAAElF,YAAa,GACtBmJ,QAAS,kBAAMmE,MAAMF,EAAUC,YAE/B,uBAAGjJ,UAAU,4BAEjB,4BACIA,UAAU,mCACV+E,QAAS,kBAAMmE,MAAMF,EAAUG,QAAQ,MACvC,uBAAGnJ,UAAU,gCAQzC,OACI,yBAAKA,UAAW,4BACZ,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,gDACX,yBAAKA,UAAU,2CACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,iDAAf,gBAIJ,yBAAKA,UAAU,uBACX,4BACIA,UAAU,0BACV+E,QAAS7F,KAAKf,MAAMgH,cAEpB,uBAAGnF,UAAU,yBAKzB,yBAAKA,UAAU,8BACX,kBAAC,IAAD,CAAkBoJ,MAAOlK,KAAKiJ,eAC1B,kBAAC,IAAD,CACIkB,MAAO,cACP5Q,KAAMyG,KAAK1G,MAAMmQ,UACjBG,QAASA,EACTT,QAASnJ,KAAKmJ,QACdiB,cAAc,EACd3B,eAAgBzI,KAAK1G,MAAMmP,eAC3B4B,SAAU,WAAOL,MAAM,aAKnC,yBAAKlJ,UAAU,gBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,uBACX,4BACIc,MAAO,CAAE2E,WAAY,QACrBzF,UAAU,kBACVI,KAAK,SACL2E,QAAS7F,KAAKf,MAAMgH,cAEpB,4CAMpB,yBAAKnF,UAAU,2B,sCAKV,IAAD,OACR8I,EAAU,CACV,KACA,KACA,UACA,CACI9H,KAAM,SACNqH,QAAS,CACLU,iBAAkB,SAACpG,EAAKqG,GACpB,OACI,yBAAKhJ,UAAU,uBACX,4BACIA,UAAU,mCACVc,MAAO,CAAElF,YAAa,GACtBmJ,QAAS,kBAAMmE,MAAMF,EAAUC,YAE/B,uBAAGjJ,UAAU,4BAEjB,4BACIA,UAAU,mCACV+E,QAAS,kBAAMmE,MAAMF,EAAUG,QAAQ,MACvC,uBAAGnJ,UAAU,gCAQzC,OACI,yBAAKA,UAAW,4BACZ,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,gDACX,yBAAKA,UAAU,2CACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,iDAAf,mBAIJ,yBAAKA,UAAU,uBACX,4BACIA,UAAU,0BACV+E,QAAS,kBAAM,EAAK6C,gBAEpB,uBAAG5H,UAAU,yBAKzB,yBAAKA,UAAU,8BACX,kBAAC,IAAD,CAAkBoJ,MAAOlK,KAAKiJ,eAC1B,kBAAC,IAAD,CACIkB,MAAO,iBACP5Q,KAAMyG,KAAK1G,MAAMqP,iBACjBiB,QAASA,EACTT,QAASnJ,KAAKmJ,QACdiB,cAAc,EACd3B,eAAgBzI,KAAK1G,MAAMmP,eAC3B4B,SAAU,WAAOL,MAAM,aAKnC,yBAAKlJ,UAAU,gBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,uBACX,4BACIc,MAAO,CAAE2E,WAAY,QACrBzF,UAAU,kBACVI,KAAK,SACL2E,QAAS,kBAAM,EAAK6C,gBAEpB,4CAMpB,yBAAK5H,UAAU,2B,+BAMvB,OACI,6BACMd,KAAKsK,aAELtK,KAAK1G,MAAM0P,gBACThJ,KAAKuK,qB,GA9PJjJ,a,+NClBrB,IAAI+G,GAAKC,EAAQ,IACXa,GAAUd,GAAGnK,gBAoRJsM,G,YAjRX,aAAe,IAAD,8BACV,+CAkBJC,WAAa,YACmB,IAAxB,EAAKnR,MAAMoR,SACX,EAAKzK,SAAS,CACV0K,WAAY,YACZD,UAAU,IAGd,EAAKzK,SAAS,CACV0K,WAAY,GACZD,UAAU,KA5BR,EAiCdE,WAAa,WAAmB,IAAlBjI,EAAiB,uDAAT,KAClB,EAAK1C,SAAS,CAAE4K,eAAgB,EAAKvR,MAAMuR,cAAeC,cAAenI,KAlC/D,EAqCdoI,eAAiB,WACb,EAAK9K,SAAS,CAAE+K,eAAgB,EAAK1R,MAAM0R,iBAtCjC,EAyCdC,aAAe,WAAmB,IAAlBtI,EAAiB,uDAAT,KACpB,EAAK1C,SAAS,CAAEiL,aAAc,EAAK5R,MAAM4R,YAAaJ,cAAenI,KA1C3D,EAiDd8F,eAAiB,WACb,EAAKxI,SAAS,CAAEwI,gBAAiB,EAAKnP,MAAMmP,kBAlDlC,EAqDd3I,aArDc,uCAqDC,WAAOvG,GAAP,iBAAA4R,EAAA,6DACPvR,EAAUL,EADH,SAEUkN,GAAID,OAAO,QAAQY,aAAaxN,GAF1C,QAEP2P,EAFO,QAGE6B,IAA0B,MAApB7B,EAASC,OACK,MAAzBD,EAAShQ,KAAKiQ,QACdQ,MAAMT,EAAShQ,KAAK8R,SACpB,EAAKN,iBACL,EAAK1R,WAEL2Q,MAAMT,EAAShQ,KAAK8R,SAGrB9B,EAAShQ,MAAQgQ,EAAShQ,KAAK8R,SAASrB,MAAMT,EAAShQ,KAAK8R,SAZxD,2CArDD,wDAqEdC,aArEc,uCAqEC,WAAO/R,GAAP,iBAAA4R,EAAA,0DACHI,OAAOC,QAAQ,kBADZ,uBAGH5R,EAAU,CACV,QAAW,EACX,UAAaL,EAAKwP,GAClB,MAASxP,EAAK8M,MACd,IAAO9M,EAAK+M,KAEhB/F,QAAQC,KAAK,eAAgB5G,GATtB,SAUc6M,GAAID,OAAO,QAAQa,aAAazN,GAV9C,QAUH2P,EAVG,QAWM6B,IAA0B,MAApB7B,EAASC,OACK,MAAzBD,EAAShQ,KAAKiQ,QACdQ,MAAMT,EAAShQ,KAAK8R,SACpB,EAAKJ,eACL,EAAK5R,WAEL2Q,MAAMT,EAAShQ,KAAK8R,SAGrB9B,EAAShQ,MAAQgQ,EAAShQ,KAAK8R,SAASrB,MAAMT,EAAShQ,KAAK8R,SApB5D,2CArED,wDA8FdI,aA9Fc,uCA8FC,WAAO1C,GAAP,iBAAAoC,EAAA,0DACHI,OAAOC,QAAQ,mBADZ,uBAGH5R,EAAU,CACV,QAAW,EACX,UAAamP,GALV,SAOctC,GAAID,OAAO,QAAQc,aAAa1N,GAP9C,QAOH2P,EAPG,QAQM6B,IAA0B,MAApB7B,EAASC,OACK,MAAzBD,EAAShQ,KAAKiQ,QACdQ,MAAMT,EAAShQ,KAAK8R,SACpB,EAAKhS,WAEL2Q,MAAMT,EAAShQ,KAAK8R,SAGpB9B,EAAShQ,MAAQgQ,EAAShQ,KAAK8R,SAASrB,MAAMT,EAAShQ,KAAK8R,SAhB7D,2CA9FD,wDAmHdpC,YAAc,kBAAMC,YAAeb,GAAG5N,gBAnHxB,EAqHd0O,QAAUd,GAAGnK,gBArHC,EAkKd0L,QAAU,CACN,KACA,KACA,QACA,cACA,CACI9H,KAAM,SACNqH,QAAS,CACLU,iBAAkB,SAACpG,EAAKqG,GACpB,OACI,yBAAKlI,MAAO,CAAC5G,MAAO,SAAU8F,UAAU,uBACpC,4BACIA,UAAU,uCACVc,MAAO,CAAElF,YAAa,GACtBmJ,QAAS,WACL,EAAK+E,WAAWd,EAAUG,QAAQ,MAJ1C,wBASA,4BACInJ,UAAU,mCACVc,MAAO,CAAElF,YAAa,GACtBmJ,QAAS,kBAAM,EAAKoF,aAAanB,EAAUC,YAE3C,uBAAGjJ,UAAU,4BAEjB,4BACIA,UAAU,mCACV+E,QAAS,kBAAM,EAAK4F,aAAa3B,EAAUG,QAAQ,MACnD,uBAAGnJ,UAAU,gCA9LrC,EAAKxH,MAAQ,CACTqR,WAAY,GACZD,UAAU,EACV7B,QAAS,GACTY,UAAW,GACXuB,eAAe,EACfE,aAAa,EACbL,eAAe,EACfpC,gBAAgB,EAChBiD,YAAa,EACbC,WAAY,EACZC,YAAa,GACbC,WAAY,GAEhB,EAAKJ,aAAe,EAAKA,aAAa7L,KAAlB,gBAhBV,E,iFA8CVI,KAAK3G,Y,kKA0EL2G,KAAKyI,iBAEDa,EAAQ,CACR,QAAW,G,SAGM7C,GAAID,OAAO,QAAQW,mBAAmBmC,G,OACpC,OADnBC,E,QACQC,QAA2C,MAAzBD,EAAShQ,KAAKiQ,QACpCC,EAAYF,EAAShQ,KAAKA,KAAKyK,KAAI,SAAC7D,EAAOwC,GAAW,IAC9CoG,EAA2B5I,EAA3B4I,GAAI1C,EAAuBlG,EAAvBkG,MAAOyF,EAAgB3L,EAAhB2L,YACnB,MAAO,CACHnJ,GAAU,EAAK,EAAKrJ,MAAMqS,WAAa,EAAKrS,MAAMoS,YAClD3C,EACA1C,EACAyF,MAGR9L,KAAKC,SAAS,CACV4I,QAASU,EAAShQ,KAAKA,KACvBkQ,cAEJzJ,KAAKyI,kBAELzI,KAAKyI,iB,oQAOLa,EAAQ,CACRyC,QAAS,K,SAGQtF,GAAID,OAAO,WAAWO,oBAAoBuC,G,OACvC,OADpBC,E,QACSC,QACTxJ,KAAKC,SAAS,CACV4L,WAAYtC,EAAShQ,KAAKmK,S,qIA4C5B,IAAD,SAE6B1D,KAAK1G,MAAjCuS,EAFD,EAECA,WAAYD,EAFb,EAEaA,YACdI,E,2WAAY,IACT7C,GADS,CAEZ8C,YAAY,EACZC,MAAOL,EACPpP,WAAYmP,EACZO,cAAe,SAACxS,EAAQyS,GACpB,OAAQzS,GACJ,IAAK,aACD,EAAKsG,SAAS,CAAE0L,WAAYS,EAAWC,OACvC,EAAKhT,QAAQ+S,EAAW9N,YAAa8N,EAAWC,MAChD,MACJ,IAAK,oBACD,EAAKpM,SAAS,CAAEyL,YAAaU,EAAW9N,cACxC,EAAKjF,QAAQ+S,EAAW9N,YAAa8N,EAAWC,MAChD,MACJ,IAAK,SACD,IAAI5P,EAAa2P,EAAW3P,WAAa2P,EAAW3P,WAAY,GAChE,EAAKwD,SAAS,CAAE2L,YAAanP,IAAc,WACvC,EAAKpD,QAAQ+S,EAAW9N,YAAa8N,EAAWC,aAUpE,OACI,yBAAKvL,UAAU,gBACX,yBAAKA,UAAU,eACX,kBAAC,IAAD,CAAkBoJ,MAAOlK,KAAKiJ,eAC1B,kBAAC,IAAD,CACIkB,MAAO,gBACPxG,IAAKkI,EACLtS,KAAMyG,KAAK1G,MAAMmQ,UACjBG,QAAS5J,KAAK4J,QACdT,QAAS6C,EACT5B,cAAc,EACd3B,eAAgBzI,KAAK1G,MAAMmP,eAC3B4B,SAAUrK,KAAK+K,eAAenL,KAAKI,UAI9CA,KAAK1G,MAAM0R,eACR,kBAAC,GAAD,CACI9J,KAAM,SACN+E,aAAcjG,KAAK+K,eACnB5E,YAAanG,KAAKF,aAAaF,KAAKI,QAG3CA,KAAK1G,MAAM4R,aACR,kBAAC,GAAD,CACIhK,KAAM,SACN3H,KAAMyG,KAAK1G,MAAMuP,QAAQ7I,KAAK1G,MAAMwR,eACpC7E,aAAcjG,KAAKiL,aACnB9E,YAAanG,KAAKsL,aAAa1L,KAAKI,QAG3CA,KAAK1G,MAAMuR,eACR,kBAAC,GAAD,CACIzB,UAAWpJ,KAAK1G,MAAMwR,cACtB7E,aAAcjG,KAAK4K,kB,GA3QvBtJ,a,6kBCDXgH,EAAQ,IAAjB,IAEIgE,GAAiB,CACpB,KAAQ,EACR,SAAY,GACZ,KAAQ,GACR,MAAS,GACT,MAAS,GACT,QAAW,IAqQGC,G,YAjQX,WAAYtN,GAAQ,IAAD,8BACf,4CAAMA,KACD3F,MAAQ,CACTC,KAAM0F,EAAMrF,QAAN,MAEKqF,EAAMrF,SAEX0S,IAPK,E,0EAWL,IAAD,OACT,OACI,yBAAKxL,UAAW,4BACZ,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,sDACX,yBAAKA,UAAU,2CACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,wCACU,WAApBd,KAAKf,MAAMiC,KACN,iBACoB,WAApBlB,KAAKf,MAAMiC,KACP,eACA,iBAGlB,yBAAKJ,UAAU,uBACX,4BACIA,UAAU,0BACV+E,QAAS7F,KAAKf,MAAMgH,cAEpB,uBAAGnF,UAAU,yBAIzB,0BAAMnH,OAAO,IACTsH,SAAU,SAACiF,GACPA,EAAE9F,iBACF,EAAKnB,MAAMkH,YAAY,EAAK7M,MAAMC,QAGtC,yBAAKuH,UAAU,wDACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,qCAAhB,SAIJ,2BACIsF,SAA8B,SAApBpG,KAAKf,MAAMiC,KACrBU,MACwB,SAApB5B,KAAKf,MAAMiC,KACL,CAAEzF,gBAAiB,WACnB,KAEVyF,KAAK,OACLJ,UAAU,yBACVK,YAAY,OACZE,UAAQ,EACRlB,MAAOH,KAAK1G,MAAMC,KAAKgG,KACvB6B,SAAU,SAAC8E,GACP,EAAKjG,SAAS,CACV1G,KAAK,MACE,EAAKD,MAAMC,KADd,CAEAgG,KAAM2G,EAAEhG,OAAOC,cAOnC,yBAAKW,UAAU,sBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,qCAAhB,iBAIJ,2BACIsF,SAA8B,SAApBpG,KAAKf,MAAMiC,KACrBU,MACwB,SAApB5B,KAAKf,MAAMiC,KACL,CAAEzF,gBAAiB,WACnB,KAEVyF,KAAK,OACLJ,UAAU,yBACVK,YAAY,eACZE,UAAQ,EACRlB,MAAOH,KAAK1G,MAAMC,KAAKiT,KACvBpL,SAAU,SAAC8E,GACP,EAAKjG,SAAS,CACV1G,KAAK,MACE,EAAKD,MAAMC,KADd,CAEAiT,KAAMtG,EAAEhG,OAAOC,cAOnC,yBAAKW,UAAU,sBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,qCAAhB,UAIJ,2BACIsF,SAA8B,SAApBpG,KAAKf,MAAMiC,KACrBU,MACwB,SAApB5B,KAAKf,MAAMiC,KACL,CAAEzF,gBAAiB,WACnB,KAEVyF,KAAK,OACLJ,UAAU,yBACVK,YAAY,QACZE,UAAQ,EACRlB,MAAOH,KAAK1G,MAAMC,KAAKkT,MACvBrL,SAAU,SAAC8E,GACP,EAAKjG,SAAS,CACV1G,KAAK,MACE,EAAKD,MAAMC,KADd,CAEAkT,MAAOvG,EAAEhG,OAAOC,cAOpC,yBAAKW,UAAU,sBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,qCAAhB,YAIJ,2BACIsF,SAA8B,SAApBpG,KAAKf,MAAMiC,KACrBU,MACwB,SAApB5B,KAAKf,MAAMiC,KACL,CAAEzF,gBAAiB,WACnB,KAEVyF,KAAK,OACLJ,UAAU,yBACVK,YAAY,UACZE,UAAQ,EACRlB,MAAOH,KAAK1G,MAAMC,KAAKmT,QACvBtL,SAAU,SAAC8E,GACP,EAAKjG,SAAS,CACV1G,KAAK,MACE,EAAKD,MAAMC,KADd,CAEAmT,QAASxG,EAAEhG,OAAOC,cAOtC,yBAAKW,UAAU,sBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,qCAAhB,UAIJ,2BACIsF,SAA8B,SAApBpG,KAAKf,MAAMiC,KACrBU,MACwB,SAApB5B,KAAKf,MAAMiC,KACL,CAAEzF,gBAAiB,WACnB,KAEVyF,KAAK,QACLJ,UAAU,yBACVK,YAAY,QACZE,UAAQ,EACRlB,MAAOH,KAAK1G,MAAMC,KAAKoT,MACvBvL,SAAU,SAAC8E,GACP,EAAKjG,SAAS,CACV1G,KAAK,MACE,EAAKD,MAAMC,KADd,CAEAoT,MAAOzG,EAAEhG,OAAOC,cAOpC,yBAAKW,UAAU,sBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,qCAAhB,aAIJ,2BACIsF,SAA8B,SAApBpG,KAAKf,MAAMiC,KACrBU,MACwB,SAApB5B,KAAKf,MAAMiC,KACL,CAAEzF,gBAAiB,WACnB,KAEVyF,KAAK,WACLJ,UAAU,yBACVK,YAAY,WACZE,UAAQ,EACRlB,MAAOH,KAAK1G,MAAMC,KAAKiG,SACvB4B,SAAU,SAAC8E,GACP,EAAKjG,SAAS,CACV1G,KAAK,MACE,EAAKD,MAAMC,KADd,CAEAiG,SAAU0G,EAAEhG,OAAOC,eAQ3C,yBAAKW,UAAU,gBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,uBACU,SAApBd,KAAKf,MAAMiC,KACR,4BACIU,MAAO,CAAE2E,WAAY,QACrBzF,UAAU,kBACVI,KAAK,UAET,uCAEA,KACJ,4BACIU,MAAO,CAAE2E,WAAY,QACrBzF,UAAU,kBACVI,KAAK,SACL2E,QAAS7F,KAAKf,MAAMgH,cAEpB,6CAOxB,yBAAKnF,UAAU,2B,+BAMvB,OACI,6BACMd,KAAK4M,kB,GA5PItL,aCfvB+G,GAAKC,EAAQ,IAqHFuE,G,YAjHX,WAAY5N,GAAQ,IAAD,8BACf,4CAAMA,KAwCVwJ,eAAiB,WACb,EAAKxI,SAAS,CAAEwI,gBAAiB,EAAKnP,MAAMmP,kBA1C7B,EA6CnBQ,YAAc,kBAAMC,YAAeb,GAAG5N,gBA7CnB,EA+CnB0O,QAAUd,GAAGnK,gBA/CM,EAiDnB0L,QAAU,CACN,KACA,QACA,SAlDA,EAAKtQ,MAAQ,CACT8P,UAAWnK,EAAMoK,SACjBZ,gBAAgB,GAJL,E,iFASfzI,KAAK3G,Y,2JAIL2G,KAAKyI,iBAEDa,E,aACA,QAAW,G,UACAtJ,KAAKf,MAAM8M,S,SAGLtF,GAAID,OAAO,QAAQyB,aAAaqB,G,OAC9B,OADnBC,E,QACQC,QAA2C,MAAzBD,EAAShQ,KAAKiQ,QACpCC,EAAYF,EAAShQ,KAAKA,KAAKyK,KAAI,SAAC7D,EAAOwC,GAE3C,MAAO,CACHA,GAAS,EAFYxC,EAAjB2M,MAAiB3M,EAAVkG,UAOnBrG,KAAKC,SAAS,CACV4I,QAASU,EAAShQ,KAAKA,KACvBkQ,cAEJzJ,KAAKyI,kBAELzI,KAAKyI,iBAETlI,QAAQoJ,IAAIJ,G,qIAkBZ,OACI,yBAAKzI,UAAW,4BACZ,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,gDACX,yBAAKA,UAAU,2CACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,iDAAf,wBAIJ,yBAAKA,UAAU,uBACX,4BACIA,UAAU,0BACV+E,QAAS7F,KAAKf,MAAMgH,cAEpB,uBAAGnF,UAAU,yBAKzB,yBAAKA,UAAU,8BACX,kBAAC,IAAD,CAAkBoJ,MAAOlK,KAAKiJ,eAC1B,kBAAC,IAAD,CACIkB,MAAO,YACP5Q,KAAMyG,KAAK1G,MAAMmQ,UACjBG,QAAS5J,KAAK4J,QACdT,QAASnJ,KAAKmJ,QACdV,eAAgBzI,KAAK1G,MAAMmP,mBAOvC,yBAAK3H,UAAU,gBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,uBACX,4BACIc,MAAO,CAAE2E,WAAY,QACrBzF,UAAU,kBACVI,KAAK,SACL2E,QAAS7F,KAAKf,MAAMgH,cAEpB,4CAMpB,yBAAKnF,UAAU,6B,GA3GTQ,a,6kBCCtB,IAAI+G,GAAKC,EAAQ,IA8QFyE,G,YA3QX,aAAe,IAAD,gCACV,+CAwBJtE,eAAiB,WACb,EAAKxI,SAAS,CAAEwI,gBAAiB,EAAKnP,MAAMmP,kBA1BlC,EA+Ed3I,aA/Ec,uCA+EC,WAAOvG,GAAP,iBAAA4R,EAAA,6DACPvR,EADO,MAEJL,GAFI,SAIUkN,GAAID,OAAO,QAAQqB,YAAYjO,GAJzC,QAIP2P,EAJO,QAKE6B,IAA0B,MAApB7B,EAASC,QACxB,EAAKuB,iBACL,EAAK1R,QAAQ,EAAKC,MAAM0T,MAAO,EAAK1T,MAAM2T,SAEtC1D,EAAShQ,MAAQgQ,EAAShQ,KAAK8R,SAASrB,MAAMT,EAAShQ,KAAK8R,SAEpE9K,QAAQoJ,IAAIJ,GAXD,2CA/ED,wDA6Fd+B,aA7Fc,uCA6FC,WAAO/R,GAAP,iBAAA4R,EAAA,0DACHI,OAAOC,QAAQ,kBADZ,uBAGH5R,EAHG,MAIAL,EAJA,CAKH,QAAW,EACX,SAAY,EAAKD,MAAMuP,QAAQ,EAAKvP,MAAMwR,eAAe/B,KANtD,SAQctC,GAAID,OAAO,QAAQsB,YAAYlO,GAR7C,QAQH2P,EARG,QASM6B,IAA0B,MAApB7B,EAASC,QACxB,EAAKyB,eACL,EAAK5R,QAAQ,EAAKC,MAAM0T,MAAO,EAAK1T,MAAM2T,SAEtC1D,EAAShQ,MAAQgQ,EAAShQ,KAAK8R,SAASrB,MAAMT,EAAShQ,KAAK8R,SAEpE9K,QAAQoJ,IAAIJ,GAfL,2CA7FD,wDAgHdkC,aAhHc,uCAgHC,WAAO9I,GAAP,iBAAAwI,EAAA,0DACHI,OAAOC,QAAQ,mBADZ,uBAGH5R,EAAU,CACV,QAAW,EACX,KAAQ+I,GALL,SAOc8D,GAAID,OAAO,QAAQuB,YAAYnO,GAP7C,QAOH2P,EAPG,QAQM6B,IAA0B,MAApB7B,EAASC,OACxB,EAAKnQ,QAAQ,EAAKC,MAAM0T,MAAO,EAAK1T,MAAM2T,QAEtC1D,EAAShQ,MAAQgQ,EAAShQ,KAAK8R,SAASrB,MAAMT,EAAShQ,KAAK8R,SAEpE9K,QAAQoJ,IAAIJ,GAbL,2CAhHD,wDAiId2D,YAAc,WAAmB,IAAlBvK,EAAiB,uDAAT,KACnB,EAAK1C,SAAS,CAAEkN,gBAAiB,EAAK7T,MAAM6T,eAAgBrC,cAAenI,KAlIjE,EAqIdoI,eAAiB,WACb,EAAK9K,SAAS,CAAE+K,eAAgB,EAAK1R,MAAM0R,iBAtIjC,EAyIdC,aAAe,WAAmB,IAAlBtI,EAAiB,uDAAT,KACpB,EAAK1C,SAAS,CAAEiL,aAAc,EAAK5R,MAAM4R,YAAaJ,cAAenI,IACrEpC,QAAQoJ,IAAI,EAAKrQ,MAAMuP,QAAQlG,KA3IrB,EA8IdyK,gBAAkB,SAACzK,GACf,EAAK1C,SAAS,CAAEoN,oBAAqB,EAAK/T,MAAM+T,mBAAoBvC,cAAenI,KA/IzE,EAkJdsG,YAAc,kBAAMC,YAAeb,GAAG5N,gBAlJxB,EAoJd0O,QAAUd,GAAGnK,gBApJC,EAsJd0L,QAAU,CACN,KACA,KACA,OACA,WACA,OACA,QACA,QACA,UACA,SACA,CACI9H,KAAM,SACNqH,QAAS,CACLU,iBAAkB,SAACpG,EAAKqG,GACpB,OACI,yBAAKlI,MAAO,CAAC5G,MAAO,SAAU8F,UAAU,uBACpC,4BACIA,UAAU,uCACVc,MAAO,CAAElF,YAAa,GACtBmJ,QAAS,WACL,EAAKqH,YAAYpD,EAAUG,QAAQ,MAJ3C,aASA,4BACInJ,UAAU,mCACVc,MAAO,CAAElF,YAAa,GACtBmJ,QAAS,kBAAM,EAAKoF,aAAanB,EAAUC,YAE3C,uBAAGjJ,UAAU,4BAEjB,4BACIA,UAAU,mCACV+E,QAAS,kBAAM,EAAK4F,aAAa3B,EAAUG,QAAQ,MACnD,uBAAGnJ,UAAU,gCAvLrC,EAAKxH,OAAL,GACIuP,QAAS,GACTY,UAAW,GACX6D,gBAAiB,GACjBC,kBAAmB,GACnBF,oBAAoB,EACpBrC,eAAe,EACfE,aAAa,GAPjB,oCAQwB,GARxB,gCASoB,GATpB,gCAUoB,GAVpB,8BAWmB,GAXnB,sBAYW,GAZX,uBAaY,GAbZ,4BAciB,IAdjB,8BAemB,GAfnB,GAFU,E,iFAsBVlL,KAAK3G,QAAQ2G,KAAK1G,MAAM0T,MAAOhN,KAAK1G,MAAM2T,U,8JAStC3D,EAAQ,CACR,QAAW,G,SAGM7C,GAAID,OAAO,QAAQgH,qBAAqBlE,G,OACrC,OADpBC,E,QACSC,QACTxJ,KAAKC,SAAS,CACVwN,cAAelE,EAAShQ,KAAKmK,SAIrCnD,QAAQoJ,IAAIJ,G,6KAGFyD,EAAOC,G,kFACjBjN,KAAKyI,iBAEDiF,EAAS,CACT,QAAW,G,SAGMjH,GAAID,OAAO,QAAQmB,kBAAkB+F,G,OAClC,OADpBnE,E,QACSC,QAA2C,MAAzBD,EAAShQ,KAAKiQ,QACrCC,EAAYF,EAAShQ,KAAKA,KAAKyK,KAAI,SAAC7D,EAAOwC,GAE3C,MAAO,CACHA,GAAS,EAFsDxC,EAA9D4I,GAA8D5I,EAA1DZ,KAA0DY,EAApDwN,SAAoDxN,EAA1CqM,KAA0CrM,EAApCsM,MAAoCtM,EAA7BwM,MAA6BxM,EAAtBuM,QAAsBvM,EAAbyN,cAa1D5N,KAAKC,SAAS,CACV4I,QAASU,EAAShQ,KAAKA,KACvBkQ,cAEJzJ,KAAKyI,mBAEDc,EAAShQ,MAAQgQ,EAAShQ,KAAK8R,SAASrB,MAAMT,EAAShQ,KAAK8R,SAChErL,KAAKyI,kB,wIAuHH,IAAD,SAC8BzI,KAAK1G,MAAnCmU,EADA,EACAA,cAAe7B,EADf,EACeA,YAChBI,EAAY,MACThM,KAAKmJ,QADI,CAEZ8C,YAAY,EACZC,MAAOuB,EACPhR,WAAYmP,EACZO,cAAe,SAACxS,EAAQyS,GACpB,OAAQzS,GACJ,IAAK,aACD,EAAKsG,SAAS,CAAE0L,WAAYS,EAAWC,OACvC,EAAKhT,QAAQ+S,EAAW9N,YAAa8N,EAAWC,MAChD,MACJ,IAAK,oBACD,EAAKpM,SAAS,CAAEyL,YAAaU,EAAW9N,cACxC,EAAKjF,QAAQ+S,EAAW9N,YAAa8N,EAAWC,MAChD,MACJ,IAAK,SACD,IAAI5P,EAAa2P,EAAW3P,WAAa2P,EAAW3P,WAAa,GACjE,EAAKwD,SAAS,CAAE2L,YAAanP,IAAc,WACvC,EAAKpD,QAAQ+S,EAAW9N,YAAa8N,EAAWC,aAQpE,OACI,yBAAKvL,UAAU,gBACX,yBAAKA,UAAU,eACX,kBAAC,IAAD,CAAkBoJ,MAAOlK,KAAKiJ,eAC1B,kBAAC,IAAD,CACIkB,MAAO,QACPxG,IAAK8J,EACLlU,KAAMyG,KAAK1G,MAAMmQ,UACjBG,QAAS5J,KAAK4J,QACdT,QAAS6C,EACT5B,cAAc,EACd3B,eAAgBzI,KAAK1G,MAAMmP,eAC3B4B,SAAUrK,KAAK+K,eAAenL,KAAKI,UAK9CA,KAAK1G,MAAM0R,eACR,kBAAC,GAAD,CACI9J,KAAM,SACN+E,aAAcjG,KAAK+K,eACnB5E,YAAanG,KAAKF,aAAaF,KAAKI,QAI3CA,KAAK1G,MAAM4R,aACR,kBAAC,GAAD,CACIhK,KAAM,OACNtH,QAASoG,KAAK1G,MAAMuP,QAAQ7I,KAAK1G,MAAMwR,eACvC7E,aAAcjG,KAAKiL,aACnB9E,YAAanG,KAAKsL,aAAa1L,KAAKI,QAI3CA,KAAK1G,MAAM6T,gBACR,kBAAC,GAAD,CACIpB,QAAS/L,KAAK1G,MAAMuP,QAAQ7I,KAAK1G,MAAMwR,eAAe/B,GACtD9C,aAAcjG,KAAKkN,mB,GApQpB5L,aC6JRuM,G,iLApKP,MACoB,SAApB7N,KAAKf,MAAMiC,KACX,yBAAKJ,UAAWd,KAAKf,MAAM6O,OACvB,yBAAKhN,UAAU,qBACf,yBAAKA,UAAU,+CAA+Cc,MAAO,CAAC5G,MAAO,QAC3E,yBAAK8F,UAAU,8CACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,wCAAf,gBAIF,yBAAKA,UAAU,uBACb,4BAAQA,UAAU,kCAAkC+E,QAAU7F,KAAKf,MAAM4G,SACvE,uBAAG/E,UAAU,yBAKnB,yBAAKc,MAAO,CAACvF,UAAW,SAAU0R,UAAU,GAAIpS,MAAM,QAASoB,SAAS,KACtE,uBAAG+D,UAAU,8BAEf,yBAAKA,UAAU,eAAec,MAAO,CAACvF,UAAW,SAAUW,WAAW,SAAtE,wBAGA,yBAAK8D,UAAU,eAAec,MAAO,CAACvF,UAAW,WAC/C,4BACIyE,UAAU,kBACVI,KAAK,SACLU,MAAO,CAAC5G,MAAM,MAAOS,gBAAgB,UAAWE,MAAM,SACtDkK,QAAU7F,KAAKf,MAAM4G,SACrB,gDAIR,yBAAK/E,UAAU,yBAGC,WAApBd,KAAKf,MAAMiC,KACX,yBAAKJ,UAAWd,KAAKf,MAAM6O,OACvB,yBAAKhN,UAAU,qBACX,yBAAKA,UAAU,8BAA8Bc,MAAO,CAAC5G,MAAO,MAAOS,gBAAgB,YACnF,yBAAKqF,UAAU,6BACX,yBAAKA,UAAU,QAAQc,MAAO,CAACvF,UAAW,SAAUZ,gBAAgB,UAAWE,MAAM,UACrF,yBAAKmF,UAAU,wCAAf,+BAIA,yBAAKA,UAAU,uBACf,4BAAQA,UAAU,iBAAiBc,MAAO,CAACnG,gBAAgB,UAAWE,MAAM,SAAUkK,QAAU7F,KAAKf,MAAM4G,SACvG,uBAAG/E,UAAU,yBAIrB,yBAAKc,MAAO,CAACvF,UAAW,SAAU0R,UAAU,GAAIpS,MAAM,QAASoB,SAAS,KACpE,uBAAG+D,UAAU,sBAEjB,yBAAKA,UAAU,eAAec,MAAO,CAACvF,UAAW,SAAUW,WAAW,OAAQrB,MAAM,UAApF,0CAGA,yBAAKmF,UAAU,4BAA4Bc,MAAO,CAACoM,aAAc,WAC7D,yBAAKlN,UAAU,SACf,4BACIA,UAAU,kBACVI,KAAK,SACL2E,QAAU7F,KAAKf,MAAMgP,eACrB,+CAGJ,yBAAKnN,UAAU,SACf,4BACIA,UAAU,kBACVI,KAAK,SACL2E,QAAU7F,KAAKf,MAAM4G,SACrB,2CAKZ,yBAAK/E,UAAU,yBAGnB,yBAAKA,UAAWd,KAAKf,MAAM6O,OACzB,yBAAKhN,UAAU,kEAEb,yBAAKA,UAAU,4DACb,yBAAKA,UAAU,SACX,yBAAKA,UAAU,wCACZd,KAAKf,MAAMkL,QAGlB,yBAAKrJ,UAAU,uBACX,4BACEA,UAAU,0BACV+E,QAAU7F,KAAKf,MAAM4G,SACnB,uBAAG/E,UAAU,yBAKvB,yBAAKA,UAAU,gCAEb,2BACEI,KAAK,OACL6H,GAAG,eACHnH,MAAO,CAAC,QAAW,QACnBR,SAAUpB,KAAKf,MAAMmC,WAEvB,2BACEF,KAAK,OACL6H,GAAG,eACHnH,MAAO,CAAC,QAAW,QACnBR,SAAUpB,KAAKf,MAAMmC,WAGrB,yBAAKN,UAAU,gBAEb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,YACb,uBAAGA,UAAU,wBAEf,yBAAKA,UAAU,aAAf,kBAKF,yBACEA,UAAU,4BACVc,MAAO,CAAC,gBAAmB,OAAO5B,KAAKf,MAAMiP,KAAK,MAEhD,yBAAKpN,UAAU,WACb,2BAAOqN,QAAQ,gBACb,yBAAKrN,UAAU,2CACb,uBAAGA,UAAU,uBAGjB,4BACE+E,QAAS7F,KAAKf,MAAMmP,aACpBlN,KAAK,SACLJ,UAAU,qCACV,uBAAGA,UAAU,8BAQzB,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,iBACb,4BAAQA,UAAU,sBAChB+E,QAAU7F,KAAKf,MAAM4G,SADvB,kB,GAvJEvE,aCCdyE,GAAiB,CACnB,aAAgB,IA0GLsI,G,YArGX,WAAYpP,GAAQ,IAAD,8BACf,4CAAMA,KACD3F,MAAQ,CACTC,KAAM0F,EAAM1F,KAAO0F,EAAM1F,KACzB,CACIwM,oBALO,E,sEAST,IAAD,OAEL,OADAxF,QAAQC,KAAKR,KAAK1G,MAAMC,MAEpB,yBAAKuH,UAAW,4BACZ,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,gDACX,yBAAKA,UAAU,2CACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,wCACU,WAApBd,KAAKf,MAAMiC,KACN,mBACoB,WAApBlB,KAAKf,MAAMiC,KACP,iBACA,mBAGlB,yBAAKJ,UAAU,uBACX,4BACIA,UAAU,0BACV+E,QAAS7F,KAAKf,MAAMgH,cAEpB,uBAAGnF,UAAU,yBAIzB,0BAAMnH,OAAO,IACTsH,SAAU,SAACiF,GAAQA,EAAE9F,iBACjB,EAAKnB,MAAMkH,YAAY,EAAK7M,MAAMC,KAAK+U,gBAG3C,yBAAKxN,UAAU,wDACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,qCAAhB,iBAIJ,2BACIsF,SAA8B,SAApBpG,KAAKf,MAAMiC,KACrBU,MACwB,SAApB5B,KAAKf,MAAMiC,KACL,CAAEzF,gBAAiB,WACnB,KAEVyF,KAAK,OACLJ,UAAU,yBACVK,YAAY,eACZE,UAAQ,EACRlB,MAAOH,KAAK1G,MAAMC,KAAK+U,aACvBlN,SAAU,SAAC8E,GACP,EAAKjG,SAAS,CACV1G,KAAM,CACF+U,aAAcpI,EAAEhG,OAAOC,cAO/C,yBAAKW,UAAU,gBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,uBACU,SAApBd,KAAKf,MAAMiC,KACR,4BACIU,MAAO,CAAE2E,WAAY,QACrBzF,UAAU,kBACVI,KAAK,UAET,uCAEA,KACJ,4BACIU,MAAO,CAAE2E,WAAY,QACrBzF,UAAU,kBACVI,KAAK,SACL2E,QAAS7F,KAAKf,MAAMgH,cAEpB,6CAOxB,yBAAKnF,UAAU,6B,GA/FJQ,aCoIZiN,IAvINjG,EAAQ,I,YAGb,WAAYrJ,GAAQ,IAAD,8BACf,4CAAMA,KAkCVwJ,eAAiB,WACb,EAAKxI,SAAS,CAAEwI,gBAAiB,EAAKnP,MAAMmP,kBAlC5C,EAAKnP,MAAQ,CACT8P,UAAWnK,EAAMoK,SACjBZ,gBAAgB,GAJL,E,iFASfzI,KAAK3G,Y,2JAIL2G,KAAKyI,iBAEDa,EAAQ,CACR,QAAW,EACX,UAAatJ,KAAKf,MAAMmK,W,SAGP3C,GAAID,OAAO,QAAQU,cAAcoC,G,OAC/B,OADnBC,E,QACQC,QAA2C,MAAzBD,EAAShQ,KAAKiQ,QACpCjQ,EAAOgQ,EAAShQ,KAAKA,KACzByG,KAAKC,SAAS,CACVoG,MAAO9M,EAAK8M,MACZC,IAAK/M,EAAK+M,IACVsC,KAAMrP,EAAKqP,OAEf5I,KAAKyI,kBAELzI,KAAKyI,iBAETlI,QAAQoJ,IAAIJ,G,qIAkBZ,OACI,yBAAKzI,UAAW,4BACZ,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,gDACX,yBAAKA,UAAU,2CACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,iDAAf,WAIJ,yBAAKA,UAAU,uBACX,4BACIA,UAAU,0BACV+E,QAAS7F,KAAKf,MAAMgH,cAEpB,uBAAGnF,UAAU,yBAKzB,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,sBACX,4BACKd,KAAK1G,MAAM+M,QAGpB,6BACI,2BACKrG,KAAK1G,MAAMgN,OAIxB,yBAAKxF,UAAU,gBACX,wBAAIA,UAAU,qBACTd,KAAK1G,MAAMsP,MAAQ5I,KAAK1G,MAAMsP,KAAK5E,KAAI,SAAC7D,EAAOwC,GAC5C,OACI,wBAAI7B,UAAU,sBACV,yBAAKA,UAAU,qCACVX,EAAMyI,MAEX,wBAAI1H,KAAK,IAAIJ,UAAU,qBAClBX,EAAM2I,SAAW3I,EAAM2I,QAAQ9E,KAAI,SAACwK,EAAQC,GACzC,OACI,4BACI,yBAAK3N,UAAU,qCACV0N,EAAO1F,qBAapD,yBAAKhI,UAAU,gBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,uBACX,4BACIc,MAAO,CAAE2E,WAAY,QACrBzF,UAAU,kBACVI,KAAK,SACL2E,QAAS7F,KAAKf,MAAMgH,cAEpB,4CAMpB,yBAAKnF,UAAU,6B,GA9HPQ,c,+NCCxB,IAAI+G,GAAKC,EAAQ,IACXa,GAAUd,GAAGnK,gBA2SJwQ,G,YAxSX,aAAe,IAAD,8BACV,+CAoBJjE,WAAa,YACmB,IAAxB,EAAKnR,MAAMoR,SACX,EAAKzK,SAAS,CACV0K,WAAY,YACZD,UAAU,IAGd,EAAKzK,SAAS,CACV0K,WAAY,GACZD,UAAU,KA9BR,EAmCdiE,cAAgB,WACZ,EAAK1O,SAAS,CAAE2O,mBAAoB,EAAKtV,MAAMsV,qBApCrC,EAuCd7D,eAAiB,WACb,EAAK9K,SAAS,CAAE+K,eAAgB,EAAK1R,MAAM0R,iBAxCjC,EA2CdC,aAAe,WAAmB,IAAlBtI,EAAiB,uDAAT,KACpB,EAAK1C,SAAS,CAAEiL,aAAc,EAAK5R,MAAM4R,YAAaJ,cAAenI,KA5C3D,EA+CdyK,gBAAkB,SAACzK,GACf,EAAK1C,SAAS,CAAEoN,oBAAqB,EAAK/T,MAAM+T,mBAAoBvC,cAAenI,KAhDzE,EAmDdkM,cAAgB,WACZ,EAAK5O,SAAS,CAAE6O,kBAAmB,EAAKxV,MAAMwV,oBApDpC,EAuDdrG,eAAiB,WACb,EAAKxI,SAAS,CAAEwI,gBAAiB,EAAKnP,MAAMmP,kBAxDlC,EA+DdsG,YAAc,WACV,EAAK1V,UACL,EAAK4G,SAAS,CACV6O,kBAAkB,EAClB9D,eAAe,EACfE,aAAa,KApEP,EAwEdpL,aAxEc,uCAwEC,WAAOvG,GAAP,iBAAA4R,EAAA,6DACPvR,EAAU,CACV,aAAgBL,GAEpBgH,QAAQC,KAAK,eAAgB5G,GAJlB,SAKU6M,GAAID,OAAO,YAAYwI,aAAapV,GAL9C,QAKP2P,EALO,QAME6B,IAA0B,MAApB7B,EAASC,QACxB,EAAKqF,gBACL,EAAKxV,QAAQ,EAAKC,MAAMoS,YAAa,EAAKpS,MAAMqS,aAE7CpC,EAAShQ,MAAQgQ,EAAShQ,KAAK8R,SAASrB,MAAMT,EAAShQ,KAAK8R,SAVxD,2CAxED,wDAsFdC,aAtFc,uCAsFC,WAAO/R,GAAP,iBAAA4R,EAAA,6DACPvR,EAAU,CACV,GAAM,EAAKN,MAAMuP,QAAQ,EAAKvP,MAAMwR,eAAe/B,GACnD,aAAgBxP,GAEpBgH,QAAQC,KAAK,eAAgB5G,GALlB,SAMU6M,GAAID,OAAO,YAAYwI,aAAapV,GAN9C,QAMP2P,EANO,QAOE6B,IAA0B,MAApB7B,EAASC,QACxB,EAAKqF,gBACL,EAAKxV,QAAQ,EAAKC,MAAMoS,YAAa,EAAKpS,MAAMqS,aAE5CpC,EAAShQ,MAAQgQ,EAAShQ,KAAK8R,SAASrB,MAAMT,EAAShQ,KAAK0V,UAXzD,2CAtFD,wDAqGdxD,aArGc,uCAqGC,WAAOlS,GAAP,iBAAA4R,EAAA,6DACPvR,EAAU,CACV,GAAM,EAAKN,MAAMuP,QAAQ,EAAKvP,MAAMwR,eAAe/B,GACnD,aAAgBxP,GAEpBgH,QAAQC,KAAK,eAAgB5G,GALlB,SAMU6M,GAAID,OAAO,YAAY0I,eAAetV,EAAQmP,IANxD,QAMPQ,EANO,QAOE6B,IAA0B,MAApB7B,EAASC,QACxB,EAAKvJ,SAAS,CAAEoN,oBAAoB,IACpC,EAAKhU,QAAQ,EAAKC,MAAMoS,YAAa,EAAKpS,MAAMqS,aAE5CpC,EAAShQ,MAAQgQ,EAAShQ,KAAK8R,SAASrB,MAAMT,EAAShQ,KAAK8R,SAXzD,2CArGD,wDAoHdpC,YAAc,kBAAMC,YAAeb,GAAG5N,gBApHxB,EAsHd0O,QAAUd,GAAGnK,gBAtHC,EAkKd0L,QAAU,CACN,KACA,KACA,QACA,cACA,SACA,CACI9H,KAAM,SACNqH,QAAS,CACLU,iBAAkB,SAACpG,EAAKqG,GACpB,OACI,yBAAKhJ,UAAU,uBACX,4BACIA,UAAU,uCACVc,MAAO,CAAElF,YAAa,GACtBmJ,QAAS,WACL,EAAK8I,gBACL,EAAK1O,SAAS,CACVmJ,UAAWU,EAAUG,QAAQ,KAEjC1J,QAAQoJ,IAAIG,EAAUG,QAAQ,MARtC,qBA5KpB,EAAK3Q,MAAQ,CACTqR,WAAY,GACZD,UAAU,EACV7B,QAAS,GACTY,UAAW,GACXuB,eAAe,EACfE,aAAa,EACb4D,kBAAkB,EAClBF,mBAAmB,EACnBnG,gBAAgB,EAChBiD,YAAa,EACbC,WAAY,EACZC,YAAa,GACbuD,cAAe,EACf/F,UAAW,GAEf,EAAKqC,aAAe,EAAKA,aAAa7L,KAAlB,gBAlBV,E,iFA4DVI,KAAK3G,QAAQ2G,KAAK1G,MAAMoS,YAAa1L,KAAK1G,MAAMqS,c,uEA4DtCqB,EAAOC,G,yFACjBjN,KAAKyI,iBAEDa,EAAQ,CACR,QAAW,G,SAGM7C,GAAID,OAAO,QAAQO,oBAAoBuC,G,OACrC,OADnBC,E,QACQC,QAA2C,MAAzBD,EAAShQ,KAAKiQ,QACpCC,EAAYF,EAAShQ,KAAKA,KAAKyK,KAAI,SAAC7D,EAAOwC,GAAW,IAC9CoG,EAAiC5I,EAAjC4I,GAAI1C,EAA6BlG,EAA7BkG,MAAOyF,EAAsB3L,EAAtB2L,YAAasD,EAASjP,EAATiP,KAChC,MAAO,CACHzM,GAAU,EAAK,EAAKrJ,MAAMqS,WAAa,EAAKrS,MAAMoS,YAClD3C,EACA1C,EACAyF,EACAsD,MAGRpP,KAAKC,SAAS,CACV4I,QAASU,EAAShQ,KAClBkQ,cAEJzJ,KAAKyI,kBAELzI,KAAKyI,iB,uQAKLa,EAAQ,CACRyC,QAAS,K,SAGQtF,GAAID,OAAO,QAAQO,oBAAoBuC,G,OACpC,OADpBC,E,QACSC,QACTxJ,KAAKC,SAAS,CACVkP,cAAe5F,EAAShQ,KAAKmK,S,qIAmD/B,IAAD,SAEgC1D,KAAK1G,MAApC6V,EAFD,EAECA,cAAevD,EAFhB,EAEgBA,YACjBI,E,2WAAY,IACT7C,GADS,CAEZ8C,YAAY,EACZC,MAAOiD,EACP1S,WAAYmP,EACZO,cAAe,SAACxS,EAAQyS,GACpB,OAAQzS,GACJ,IAAK,aACD,EAAKsG,SAAS,CAAE0L,WAAYS,EAAWC,OACvC,EAAKhT,QAAQ+S,EAAW9N,YAAa8N,EAAWC,MAChD,MACJ,IAAK,oBACD,EAAKpM,SAAS,CAAEyL,YAAaU,EAAW9N,cACxC,EAAKjF,QAAQ+S,EAAW9N,YAAa8N,EAAWC,MAChD,MACJ,IAAK,SACD,IAAI5P,EAAa2P,EAAW3P,WAAa2P,EAAW3P,WAAY,GAChE,EAAKwD,SAAS,CAAE2L,YAAanP,IAAc,WACvC,EAAKpD,QAAQ+S,EAAW9N,YAAa8N,EAAWC,aAUpE,OACI,yBAAKvL,UAAU,gBACX,yBAAKA,UAAU,eACX,kBAAC,IAAD,CAAkBoJ,MAAOlK,KAAKiJ,eAC1B,kBAAC,IAAD,CACIkB,MAAO,UACPxG,IAAKwL,EACL5V,KAAMyG,KAAK1G,MAAMmQ,UACjBG,QAAS5J,KAAK4J,QACdT,QAAS6C,EACT5B,cAAc,EACd3B,eAAgBzI,KAAK1G,MAAMmP,eAC3B4B,SAAUrK,KAAK+K,eAAenL,KAAKI,UAI9CA,KAAK1G,MAAMsV,mBACR,kBAAC,GAAD,CACIxF,UAAWpJ,KAAK1G,MAAM8P,UACtBnD,aAAcjG,KAAK2O,gBAG1B3O,KAAK1G,MAAM0R,eACR,kBAAC,GAAD,CACI9J,KAAM,SACN+E,aAAcjG,KAAK+K,eACnB5E,YAAanG,KAAKF,aAAaF,KAAKI,QAG3CA,KAAK1G,MAAM4R,aACR,kBAAC,GAAD,CACIhK,KAAM,SACN3H,KAAMyG,KAAK1G,MAAMuP,QAAQ7I,KAAK1G,MAAMwR,eACpC7E,aAAcjG,KAAKiL,aACnB9E,YAAanG,KAAKsL,aAAa1L,KAAKI,QAG3CA,KAAK1G,MAAMwV,kBACR,kBAAC,GAAD,CACI5N,KAAM,OACN4M,MAAO,2BACPjI,QAAS7F,KAAK+O,YAAYnP,KAAKI,QAGtCA,KAAK1G,MAAM+T,oBACR,kBAAC,GAAD,CACInM,KAAM,SACN4M,MAAO,2BACPG,cAAejO,KAAKyL,aACpB5F,QAAS7F,KAAKoN,uB,GAjSf9L,a,+BC+HR+N,G,YApIb,WAAYpQ,GAAQ,IAAD,8BACjB,4CAAMA,KAwCRqQ,YAAc,WAEZ,EAAKrP,SAAS,CAACsP,YAAa,aA3CX,EA8CnBC,YAAc,WAGZ,EAAKvP,SAAS,CAACwP,iBAAkB,EAAKnW,MAAMmW,kBAC5C,EAAKC,mBAAmB,sBAlDP,EAqDnBC,aAAe,SAAAC,GACbrP,QAAQoJ,IAAIiG,IAtDK,EAyDnBC,WAAa,WACXtP,QAAQoJ,IAAI,QAAS,EAAKrQ,MAAMwW,aA1Df,EA6DnBC,iBAAmB,SAAC7J,GAClB,EAAKjH,MAAMmC,SAAS8E,GACpB,EAAKjG,SAAS,CACZ6P,WAAY5J,KAhEG,EAoEnB8J,eAAiB,WACf,EAAK/P,SAAS,CAEZ6P,YAAY,EACZG,UAAW,gBAtEb,EAAK3W,MAAQ,CACXwW,WAAY,EAAK7Q,MAAMiR,KACvBD,UAAW,EAAKhR,MAAMiR,KAAON,KAAO,EAAK3Q,MAAMiR,MAAMC,OAAO,cAAgB,aAC5EZ,YAAa,UACbE,iBAAiB,GANF,E,gFAUAvP,GAAS,IAAD,OAiBrBkQ,EAAUC,SAASC,cAAcpQ,GAQrCmQ,SAASE,iBAAiB,SAAS,SAAUxQ,GACvCA,EAAMG,OAAOsQ,QAAQtQ,IAPE,SAACH,GACvBqQ,EAAQK,SAAS1Q,IACpB,EAAKE,SAAS,CAACwP,iBAAiB,IAMlCiB,Q,yCAuCeC,GACjB,GAAI3Q,KAAKf,MAAMiR,OAASS,EAAUT,KAAM,CAEtC,IAAM1M,OAAgCoN,IAA1B5Q,KAAK1G,MAAMwW,YAAsD,OAA1B9P,KAAK1G,MAAMwW,YAAiD,KAA1B9P,KAAK1G,MAAMwW,WAAqBF,KAAO5P,KAAK1G,MAAMwW,YAAYK,OAAO,cAAgB,aAC1KnQ,KAAKC,SAAS,CACZ6P,WAAY9P,KAAKf,MAAMiR,KACvBD,UAAWzM,O,+BAOf,OACE,yBAAKuF,GAAG,mBAAmBpF,IAAK3D,KAAKf,MAAM0E,KACzC,yBAAK7C,UAAU,oBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,SACb,2BACEI,KAAK,OACLJ,UAAU,KACVsF,UAAQ,EACRxE,MAAO,CAAEnG,gBAAiBuE,KAAKf,MAAM4R,SAAW,UAAY,MAC5D1Q,WAAkCyQ,IAA1B5Q,KAAK1G,MAAMwW,YAAsD,OAA1B9P,KAAK1G,MAAMwW,YAAiD,KAA1B9P,KAAK1G,MAAMwW,WAAqBF,KAAO5P,KAAK1G,MAAMwW,YAAYK,OAAO,cAAgB,gBAUxKnQ,KAAKf,MAAM4R,SAOT,KANA,4BACE3P,KAAK,SACLJ,UAAU,yCACV+E,QAAU7F,KAAKf,MAAM4R,SAA8B,KAAnB7Q,KAAKwP,aACrC,uBAAG1O,UAAU,+BAIpBd,KAAK1G,MAAMmW,iBACZ,yBAAK3O,UAAW,kBACZ,kBAAC,YAAD,CACEoP,KAAMlQ,KAAK1G,MAAMwW,WACjB1O,SAAUpB,KAAK+P,iBACfpU,MAAM,mB,GA7HF2F,a,4mBCMpB,IAAI+G,GAAKC,EAAQ,IAEbgE,GAAiB,CACjB,mBAAqB,EACrB,kBAAoB,EACpB,QAAW,GACX,UAAa,GACb,WAAc,GACd,cAAiB,GACjB,uBAAyB,EACzB,MAAS,GACT,iBAAoB,GACpB,SAAW,EACX,UAAa,GACb,GAAM,GACN,SAAY,GACZ,IAAO,GACP,SAAY,GACZ,SAAY,CACR,GAAM,GACN,aAAgB,IAEpB,KAAQ,YACR,SAAY,IAgoBDC,G,YA5nBX,WAAYtN,GAAQ,IAAD,8BACf,4CAAMA,KAeVgK,YAAc,kBAAMC,YAAeb,GAAG5N,gBAhBnB,EAiBnB0O,QAAUd,GAAGnK,gBAjBM,EAmBnB0L,QAAU,CACN,KACA,KACA,eACA,CACI9H,KAAM,SACNqH,QAAS,CACLU,iBAAkB,SAACpG,EAAKqG,GACpB,OACI,6BACI,4BACIhJ,UAAU,0BACVc,MAAO,CAAElF,YAAa,GACtBmJ,QAAS,kBACL,EAAKiL,mBAAmBhH,EAAUG,WAJ1C,cA7BL,EA8EnB8G,uBAAyB,WACrB,EAAK9Q,SAAS,CACV+Q,sBAAuB,EAAK1X,MAAM0X,wBAhFvB,EAoFnBF,mBAAqB,SAACrN,GAClB,IAAI7J,EAAU,CACV,GAAM6J,EAAI,GACV,aAAgBA,EAAI,IAExB,EAAKxD,SAAS,CACVgR,WAAW,MACJ,EAAK3X,MAAM2X,WADR,CAENlW,SAAUnB,MAGlB,EAAKmX,0BA7FL,EAAKzX,MAAQ,CACT2X,WAAYhS,EAAMrF,QAAN,MAEDqF,EAAMrF,SAGX0S,GACNiB,kBAAmBtO,EAAMiS,cAAgBjS,EAAMiS,cAAgB,GAC/DF,sBAAsB,EACtBG,SAAS,EACTC,SAAU,IAZC,E,iFA6Cf7Q,QAAQoJ,IAAI,QAAS3J,KAAK1G,MAAM2X,YAChCjR,KAAKqR,aAAarR,KAAK1G,MAAM2X,WAAWlI,GAAI/I,KAAK1G,MAAM2X,WAAWK,oB,4EAGnDvI,EAAIwI,G,gFACf3X,EAAUmP,EAAG,IAAIwI,E,SACL9K,GAAID,OAAO,YAAYgL,qBAAqB5X,G,YAAxD6X,E,SACsB,MAAfA,EAAIjI,O,yCACJxJ,KAAKC,SAAS,CACjBmR,SAAUK,EAAIC,OAAOC,O,OAG7BpR,QAAQoJ,IAAI8H,G,+KAGHG,G,gFACHC,EAAW,IAAIC,UACZC,OAAO,OAAQH,EAAc,IACtCC,EAASE,OAAO,KAAM/R,KAAK1G,MAAM2X,WAAWlI,I,SACvBtC,GAAID,OAAO,YAAYwL,mBAAmBH,G,QAA3DtI,E,SACgC,MAApBA,EAASC,QACrBxJ,KAAKC,SAAS,CACVgR,WAAW,MACJjR,KAAK1G,MAAM2X,WADR,CAENK,iBAAkB/H,EAAShQ,KAAKgY,aAGxCvR,KAAKqR,aAAarR,KAAK1G,MAAM2X,WAAWlI,GAAIQ,EAAShQ,KAAKgY,WAE1DvH,MAAMT,EAAShQ,KAAK8R,S,8IAyBxB,OACI,yBAAKvK,UAAW,4BACZ,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,sDACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,wCAAf,oBAIJ,yBAAKA,UAAU,uBACX,4BACIA,UAAU,kCACV+E,QAAS7F,KAAK+Q,uBAAuBnR,KAAKI,OAE1C,uBAAGc,UAAU,yBAKzB,yBAAKA,UAAU,eACX,kBAAC,IAAD,CAAkBoJ,MAAOlK,KAAKiJ,eAC1B,kBAAC,IAAD,CACIkB,MAAO,kBACP5Q,KAAMyG,KAAK1G,MAAMiU,kBACjB3D,QAAS5J,KAAK4J,QACdT,QAASnJ,KAAKmJ,YAK1B,yBAAKrI,UAAU,gBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,uBACX,4BACIc,MAAO,CAAE2E,WAAY,QACrBzF,UAAU,gBACVI,KAAK,SACL2E,QAAS7F,KAAK+Q,uBAAuBnR,KAAKI,OAE1C,4CAMpB,yBAAKc,UAAU,wB,mCAKb,IAAD,OACJmQ,EAAcjR,KAAK1G,MAAnB2X,WACL,OACI,yBAAKnQ,UAAW,4BACZ,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,gDACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,wCACU,WAApBd,KAAKf,MAAMiC,KACN,mBACoB,WAApBlB,KAAKf,MAAMiC,KACP,iBACA,mBAGlB,yBAAKJ,UAAU,uBACX,4BACIA,UAAU,kCACV+E,QAAS7F,KAAKf,MAAMgH,cAEpB,uBAAGnF,UAAU,yBAKJ,SAApBd,KAAKf,MAAMiC,KACR,yBAAKJ,UAAU,eACX,yBAAKA,UAAU,kCACX,yBACIA,UAAU,oDACVc,MAAO,CACHC,OAAQ,OACRpG,gBAAiB,YAEpBuE,KAAK1G,MAAM6X,SACR,kBAAC,KAAD,CACIjQ,KAAK,YACLU,MAAO,CAACtF,QAAQ,OAAQ2V,eAAe,SAASlE,UAAU,IAC1DpS,MAAO,aACPyB,OAAQ,GACRpC,MAAO,GACPmW,QAASnR,KAAK1G,MAAM6X,UAGF,KAAxBnR,KAAK1G,MAAM8X,UACgB,IAAvBpR,KAAK1G,MAAM6X,QAAmB,4BAC7B,uBAAGrQ,UAAU,0BACb,yBAAKoR,IAAKlS,KAAK1G,MAAM8X,SAAUe,IAAI,SAG9C,6BACyB,SAApBnS,KAAKf,MAAMiC,KAER,4BACAJ,UAAU,+BACVI,KAAK,SACLkR,MAAM,SACNxQ,MAAO,CACH7G,SAAU,WACVyJ,OAAQ,OACRrI,MAAO,MAGX,kBAAC,KAAD,CAAUkW,OAAQrS,KAAKqS,OAAOzS,KAAKI,QAC9B,gBAAGsS,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACD,wBAASD,IACL,0BAAWC,KACX,uBAAGzR,UAAU,gCAKnB,MAEV,yBAAKc,MAAO,CAAEvF,UAAW,WACrB,0BAAMuF,MAAO,CAAEjG,MAAO,MAAOoB,SAAU,GAAIyV,aAAc,IAAzD,qBAIZ,KAEJ,0BACI7Y,OAAO,IACPsH,SAAU,SAACiF,GACPA,EAAE9F,iBACF,EAAKnB,MAAMwT,OAAO,EAAKnZ,MAAM2X,cAGjC,yBAAKnQ,UAAU,qEACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,qCAAhB,eAIJ,2BACIsF,SAA8B,SAApBpG,KAAKf,MAAMiC,KACrBU,MACwB,SAApB5B,KAAKf,MAAMiC,KACL,CAAEzF,gBAAiB,WACnB,KAEVyF,KAAK,OACLJ,UAAU,yBACVK,YAAY,GACZE,UAAQ,EACRD,SAAU,SAAC8E,GACP,EAAKjG,SAAS,CACVgR,WAAW,MACJ,EAAK3X,MAAM2X,WADR,CAENyB,UAAWxM,EAAEhG,OAAOC,WAIhCA,MAAO8Q,EAAWyB,aAG1B,yBAAK5R,UAAU,sBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,qCAAhB,kBAIJ,2BACIsF,SAA8B,SAApBpG,KAAKf,MAAMiC,KACrBU,MACwB,SAApB5B,KAAKf,MAAMiC,KACL,CAAEzF,gBAAiB,WACnB,KAEVyF,KAAK,OACLJ,UAAU,yBACVK,YAAY,GACZE,UAAQ,EACRD,SAAU,SAAC8E,GACP,EAAKjG,SAAS,CACVgR,WAAW,MACJ,EAAK3X,MAAM2X,WADR,CAEN0B,SAAUzM,EAAEhG,OAAOC,WAI/BA,MAAO8Q,EAAW0B,YAG1B,yBAAK7R,UAAU,sBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,qCAAhB,iBAIJ,2BACIsF,SAA8B,SAApBpG,KAAKf,MAAMiC,KACrBU,MACwB,SAApB5B,KAAKf,MAAMiC,KACL,CAAEzF,gBAAiB,WACnB,KAEVyF,KAAK,OACLJ,UAAU,yBACVK,YAAY,GACZE,UAAQ,EACRD,SAAU,SAAC8E,GACP,EAAKjG,SAAS,CACVgR,WAAW,MACJ,EAAK3X,MAAM2X,WADR,CAEN2B,WAAY1M,EAAEhG,OAAOC,WAIjCA,MAAO8Q,EAAW2B,cAG1B,yBAAK9R,UAAU,sBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,qCAAhB,kBAIJ,kBAAC+R,GAAD,CACI3C,KAAMe,EAAW6B,UACjBjC,SAA8B,SAApB7Q,KAAKf,MAAMiC,KACrBE,SAAU,SAAA8E,GAAC,OAAI,EAAKjG,SAAS,CACzBgR,WAAW,MACJ,EAAK3X,MAAM2X,WADR,CAEN6B,UAAW5M,UAI3B,yBAAKpF,UAAU,sBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,qCAAhB,aAIJ,2BACIsF,SAA8B,SAApBpG,KAAKf,MAAMiC,KACrBU,MACwB,SAApB5B,KAAKf,MAAMiC,KACL,CAAEzF,gBAAiB,WACnB,KAEVyF,KAAK,OACLJ,UAAU,yBACVK,YAAY,GACZE,UAAQ,EACRD,SAAU,SAAC8E,GACP,EAAKjG,SAAS,CACVgR,WAAW,MACJ,EAAK3X,MAAM2X,WADR,CAENtD,SAAUzH,EAAEhG,OAAOC,WAI/BA,MAAO8Q,EAAWtD,YAG1B,yBAAK7M,UAAU,sBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,qCAAhB,aAIJ,2BACIsF,SAA8B,SAApBpG,KAAKf,MAAMiC,KACrBU,MACwB,SAApB5B,KAAKf,MAAMiC,KACL,CAAEzF,gBAAiB,WACnB,KAEVyF,KAAK,OACLJ,UAAU,yBACVK,YAAY,GACZE,UAAQ,EACRD,SAAU,SAAC8E,GACP,EAAKjG,SAAS,CACVgR,WAAW,MACJ,EAAK3X,MAAM2X,WADR,CAENzR,SAAU0G,EAAEhG,OAAOC,WAI/BA,MAAO8Q,EAAWzR,aAM9B,yBAAKsB,UAAU,SACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,qCAAhB,YAKJ,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,SACf,2BACII,KAAK,OACLJ,UAAU,KACVX,MAAO8Q,EAAWlW,SAASuT,aAC3BlI,UAAQ,KAEZ,4BACIlF,KAAK,SACLJ,UAAU,yCACV+E,QAAS7F,KAAK+Q,uBAAuBnR,KAAKI,OAC1C,uBAAGc,UAAU,2BAK7B,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,qCAAhB,SAIJ,2BACIsF,SAA8B,SAApBpG,KAAKf,MAAMiC,KACrBU,MACwB,SAApB5B,KAAKf,MAAMiC,KACL,CAAEzF,gBAAiB,WACnB,KAEVyF,KAAK,OACLJ,UAAU,yBACVK,YAAY,GACZE,UAAQ,EACRD,SAAU,SAAC8E,GACP,EAAKjG,SAAS,CACVgR,WAAW,MACJ,EAAK3X,MAAM2X,WADR,CAEN8B,KAAM7M,EAAEhG,OAAOC,WAI3BA,MAAO8Q,EAAW8B,QAG1B,yBAAKjS,UAAU,sBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,qCAAhB,WAIJ,2BACIsF,SAA8B,SAApBpG,KAAKf,MAAMiC,KACrBU,MACwB,SAApB5B,KAAKf,MAAMiC,KACL,CAAEzF,gBAAiB,WACnB,KAEVyF,KAAK,OACLJ,UAAU,yBACVK,YAAY,GACZE,UAAQ,EACRD,SAAU,SAAC8E,GACP,EAAKjG,SAAS,CACVgR,WAAW,MACJ,EAAK3X,MAAM2X,WADR,CAEN+B,QAAS9M,EAAEhG,OAAOC,WAI9BA,MAAO8Q,EAAW+B,WAG1B,yBAAKlS,UAAU,sBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,qCAAhB,iBAIJ,2BACIsF,SAA8B,SAApBpG,KAAKf,MAAMiC,KACrBU,MACwB,SAApB5B,KAAKf,MAAMiC,KACL,CAAEzF,gBAAiB,WACnB,KAEVyF,KAAK,OACLJ,UAAU,yBACVK,YAAY,GACZE,UAAQ,EACRD,SAAU,SAAC8E,GACP,EAAKjG,SAAS,CACVgR,WAAW,MACJ,EAAK3X,MAAM2X,WADR,CAENgC,cAAe/M,EAAEhG,OAAOC,WAIpCA,MAAO8Q,EAAWgC,iBAG1B,yBAAKnS,UAAU,sBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,qCAAhB,UAIJ,2BACIsF,SAA8B,SAApBpG,KAAKf,MAAMiC,KACrBU,MACwB,SAApB5B,KAAKf,MAAMiC,KACL,CAAEzF,gBAAiB,WACnB,KAEVyF,KAAK,QACLJ,UAAU,yBACVK,YAAY,GACZE,UAAQ,EACRD,SAAU,SAAC8E,GACP,EAAKjG,SAAS,CACVgR,WAAW,MACJ,EAAK3X,MAAM2X,WADR,CAENtE,MAAOzG,EAAEhG,OAAOC,WAI5BA,MAAO8Q,EAAWtE,SAG1B,yBAAK7L,UAAU,sBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,qCAAhB,QAIJ,2BACIsF,SAA8B,SAApBpG,KAAKf,MAAMiC,KACrBU,MACwB,SAApB5B,KAAKf,MAAMiC,KACL,CAAEzF,gBAAiB,WACnB,KAEVyF,KAAK,SACLJ,UAAU,yBACVK,YAAY,GACZE,UAAQ,EACRD,SAAU,SAAC8E,GACP,EAAKjG,SAAS,CACVgR,WAAW,MACJ,EAAK3X,MAAM2X,WADR,CAENiC,IAAKhN,EAAEhG,OAAOC,WAI1BA,MAAO8Q,EAAWiC,SAyBlC,yBAAKpS,UAAU,gBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,uBACU,SAApBd,KAAKf,MAAMiC,KACR,4BACIU,MAAO,CAAE2E,WAAY,QACrBzF,UAAU,gBACVI,KAAK,UAEL,uCAEJ,KACJ,4BACIU,MAAO,CAAE2E,WAAY,QACrBzF,UAAU,gBACVI,KAAK,SACL2E,QAAS7F,KAAKf,MAAMgH,cAEpB,6CAQxB,yBAAKnF,UAAU,wB,+BAKjB,IACDkQ,EAAwBhR,KAAK1G,MAA7B0X,qBACL,OACI,6BACMhR,KAAK4M,aAEHoE,GACIhR,KAAKmT,sB,GArnBF7R,a,6kBC5B3B,IAAI+G,GAAKC,EAAQ,IA2PF8K,G,YAxPX,aAAe,IAAD,gCACV,+CAuBJ3K,eAAiB,WACb,EAAKxI,SAAS,CAAEwI,gBAAiB,EAAKnP,MAAMmP,kBAzBlC,EA4Ed3I,aA5Ec,uCA4EC,WAAOvG,GAAP,iBAAA4R,EAAA,6DACPvR,EADO,MAEJL,EAFI,CAGPuZ,UAAWO,KAAE9Z,EAAKuZ,WAAW3C,OAAO,gBAExC5P,QAAQoJ,IAAI/P,GALD,SAMU6M,GAAID,OAAO,OAAO8M,QAAQ1Z,GANpC,QAMP2P,EANO,QAOE6B,IAA0B,MAApB7B,EAASC,QACxB,EAAKvJ,SAAS,CAAE+K,eAAe,EAAOE,aAAa,IACnD,EAAK7R,QAAQ,EAAKC,MAAM0T,MAAO,EAAK1T,MAAM2T,SAEtC1D,EAAShQ,MAAQgQ,EAAShQ,KAAK8R,SAASrB,MAAMT,EAAShQ,KAAK8R,SAEpE9K,QAAQoJ,IAAIJ,GAbD,2CA5ED,wDA4Fd+B,aA5Fc,uCA4FC,WAAO/R,GAAP,iBAAA4R,EAAA,6DACPvR,EADO,MAEJL,EAFI,CAGPuZ,UAAWO,KAAE9Z,EAAKuZ,WAAW3C,OAAO,gBAH7B,SAKU1J,GAAID,OAAO,OAAO+M,OAAO3Z,GALnC,QAKP2P,EALO,QAME6B,IAA0B,MAApB7B,EAASC,QACxB,EAAKvJ,SAAS,CAAE+K,eAAe,EAAOE,aAAa,IACnD,EAAK7R,QAAQ,EAAKC,MAAM0T,MAAO,EAAK1T,MAAM2T,SAEtC1D,EAAShQ,MAAQgQ,EAAShQ,KAAK8R,SAASrB,MAAMT,EAAShQ,KAAK8R,SAEpE9K,QAAQoJ,IAAIJ,GAZD,2CA5FD,wDA2GdkC,aA3Gc,uCA2GC,WAAOlS,GAAP,iBAAA4R,EAAA,6DACPvR,EAAU,CACV,GAAM,EAAKN,MAAMuP,QAAQ,EAAKvP,MAAMwR,eAAe/B,IAF5C,SAIUtC,GAAID,OAAO,OAAOgN,UAAU5Z,EAAQmP,IAJ9C,QAIPQ,EAJO,QAKE6B,IAA0B,MAApB7B,EAASC,QACxB,EAAKvJ,SAAS,CAAEoN,oBAAoB,IACpC,EAAKhU,QAAQ,EAAKC,MAAM0T,MAAO,EAAK1T,MAAM2T,SAEtC1D,EAAShQ,MAAQgQ,EAAShQ,KAAK8R,SAASrB,MAAMT,EAAShQ,KAAK8R,SAEpE9K,QAAQoJ,IAAI/P,GAXD,2CA3GD,wDAyHdmR,eAAiB,WACb,EAAK9K,SAAS,CAAE+K,eAAgB,EAAK1R,MAAM0R,iBA1HjC,EA6HdC,aAAe,WAAmB,IAAlBtI,EAAiB,uDAAT,KACpB,EAAK1C,SAAS,CAAEiL,aAAc,EAAK5R,MAAM4R,YAAaJ,cAAenI,KA9H3D,EAiIdyK,gBAAkB,SAACzK,GACf,EAAK1C,SAAS,CAAEoN,oBAAqB,EAAK/T,MAAM+T,mBAAoBvC,cAAenI,KAlIzE,EAqIdsG,YAAc,kBAAMC,YAAeb,GAAG5N,gBArIxB,EAuId0O,QAAUd,GAAGnK,gBAvIC,EAyId0L,QAAU,CACN,KACA,KACA,QACA,QACA,eACA,SACA,SA9IA,EAAKtQ,OAAL,GACIuP,QAAS,GACTY,UAAW,GACX6D,gBAAiB,GACjBC,kBAAmB,GACnBF,oBAAoB,EACpBrC,eAAe,EACfE,aAAa,GAPjB,oCAQwB,GARxB,gCASoB,GATpB,8BAUmB,GAVnB,sBAWW,GAXX,uBAYY,GAZZ,4BAaiB,IAbjB,8BAcmB,GAdnB,GAFU,E,iFAqBVlL,KAAK3G,QAAQ2G,KAAK1G,MAAM0T,MAAOhN,KAAK1G,MAAM2T,U,8JAStC3D,EAAQ,CACR,QAAW,G,SAGM7C,GAAID,OAAO,QAAQwB,gBAAgBsB,G,OAChC,OADpBC,E,QACSC,QACTxJ,KAAKC,SAAS,CACVwN,cAAelE,EAAShQ,KAAKmK,SAIrCnD,QAAQoJ,IAAIJ,G,6KAGFyD,EAAOC,G,kFACjBjN,KAAKyI,iBAEDiF,EAAS,CACT,QAAW,G,SAGMjH,GAAID,OAAO,QAAQwB,gBAAgB0F,G,OAChC,OADpBnE,E,QACSC,QAA2C,MAAzBD,EAAShQ,KAAKiQ,QACrCC,EAAYF,EAAShQ,KAAKA,KAAKyK,KAAI,SAAC7D,EAAOwC,GAAW,IACjDoG,EAAgD5I,EAAhD4I,GAAI+D,EAA4C3M,EAA5C2M,MAAO2G,EAAqCtT,EAArCsT,MAAOC,EAA8BvT,EAA9BuT,aAAcC,EAAgBxT,EAAhBwT,OAAQxa,EAAQgH,EAARhH,KAC7C,MAAO,CACHwJ,GAAS,EACToG,EACA+D,EACA2G,EACAC,EACAC,EAAOtN,MACPlN,EAAKqT,SAGbxM,KAAKC,SAAS,CACV4I,QAASU,EAAShQ,KAClBkQ,cAEJzJ,KAAKyI,mBAEDc,EAAShQ,MAAQgQ,EAAShQ,KAAK8R,SAASrB,MAAMT,EAAShQ,KAAK8R,SAChErL,KAAKyI,kB,wIAoGH,IAAD,SAC8BzI,KAAK1G,MAAnCmU,EADA,EACAA,cAAe7B,EADf,EACeA,YAChBI,EAAY,MACThM,KAAKmJ,QADI,CAEZ8C,YAAY,EACZC,MAAOuB,EACPhR,WAAYmP,EACZO,cAAe,SAACxS,EAAQyS,GACpB,OAAQzS,GACJ,IAAK,aACD,EAAKsG,SAAS,CAAE0L,WAAYS,EAAWC,OACvC,EAAKhT,QAAQ+S,EAAW9N,YAAa8N,EAAWC,MAChD,MACJ,IAAK,oBACD,EAAKpM,SAAS,CAAEyL,YAAaU,EAAW9N,cACxC,EAAKjF,QAAQ+S,EAAW9N,YAAa8N,EAAWC,MAChD,MACJ,IAAK,SACD,IAAI5P,EAAa2P,EAAW3P,WAAa2P,EAAW3P,WAAa,GACjE,EAAKwD,SAAS,CAAE2L,YAAanP,IAAc,WACvC,EAAKpD,QAAQ+S,EAAW9N,YAAa8N,EAAWC,aAQpE,OACI,yBAAKvL,UAAU,gBACX,yBAAKA,UAAU,eACX,kBAAC,IAAD,CAAkBoJ,MAAOlK,KAAKiJ,eAC1B,kBAAC,IAAD,CACIkB,MAAO,YACPxG,IAAK8J,EACLlU,KAAMyG,KAAK1G,MAAMmQ,UACjBG,QAAS5J,KAAK4J,QACdT,QAAS6C,EACT5B,cAAc,EACd3B,eAAgBzI,KAAK1G,MAAMmP,eAC3B4B,SAAUrK,KAAK+K,eAAenL,KAAKI,UAK9CA,KAAK1G,MAAM0R,eACR,kBAAC,GAAD,CACI9J,KAAM,SACNgQ,cAAelR,KAAK1G,MAAMiU,kBAC1BtH,aAAcjG,KAAK+K,eACnB0H,OAAQzS,KAAKF,aAAaF,KAAKI,QAGtCA,KAAK1G,MAAM4R,aACR,kBAAC,GAAD,CACIhK,KAAM,OACNgQ,cAAelR,KAAK1G,MAAMiU,kBAC1B3T,QAASoG,KAAK1G,MAAMuP,QAAQ7I,KAAK1G,MAAMwR,eACvC7E,aAAcjG,KAAKiL,aACnBwH,OAAQzS,KAAKsL,aAAa1L,KAAKI,QAItCA,KAAK1G,MAAM+T,oBACR,kBAAC,GAAD,CACInM,KAAM,SACN4M,MAAO,2BACPG,cAAejO,KAAKyL,aACpB5F,QAAS7F,KAAKoN,uB,GAjPpB9L,a,6kBCRlB,IAAMyE,GAAiB,CACnB,QAAW,EACX,MAAS,GACZ,IAAO,IA4IOC,G,YAxIX,WAAY/G,GAAQ,IAAD,8BACf,4CAAMA,KACD3F,MAAQ,CACTC,KAAM0F,EAAM1F,KAAO0F,EAAM1F,KAAnB,MAECwM,KALI,E,sEAcT,IAAD,OACL,OACI,yBAAKjF,UAAW,4BACZ,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,gDACX,yBAAKA,UAAU,2CACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,wCACU,WAApBd,KAAKf,MAAMiC,KACN,0BACoB,WAApBlB,KAAKf,MAAMiC,KACP,wBACA,0BAGlB,yBAAKJ,UAAU,uBACX,4BACIA,UAAU,0BACV+E,QAAS7F,KAAKf,MAAMgH,cAEpB,uBAAGnF,UAAU,yBAIzB,0BAAMnH,OAAO,IACTsH,SAAU,SAACiF,GACPA,EAAE9F,iBACF,EAAKnB,MAAMkH,YAAY,EAAK7M,MAAMC,QAGtC,yBAAKuH,UAAU,wDACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,qCAAhB,UAIJ,2BACIsF,SAA8B,SAApBpG,KAAKf,MAAMiC,KACrBU,MACwB,SAApB5B,KAAKf,MAAMiC,KACL,CAAEzF,gBAAiB,WACnB,KAEVyF,KAAK,OACLJ,UAAU,yBACVK,YAAY,QACZE,UAAQ,EACRlB,MAAOH,KAAK1G,MAAMC,KAAK8M,MACvBjF,SAAU,SAAC8E,GACP,EAAKjG,SAAS,CACV1G,KAAK,MACE,EAAKD,MAAMC,KADd,CAEA8M,MAAOH,EAAEhG,OAAOC,cAOpC,yBAAKW,UAAU,sBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,qCAAhB,QAIJ,8BACIsF,SAA8B,SAApBpG,KAAKf,MAAMiC,KACrBU,MACwB,SAApB5B,KAAKf,MAAMiC,KACL,CAAEzF,gBAAiB,WACnB,KAEVyF,KAAK,OACLJ,UAAU,mCACVK,YAAY,MACZE,UAAQ,EACRlB,MAAOH,KAAK1G,MAAMC,KAAK+M,IACvBlF,SAAU,SAAC8E,GACP,EAAKjG,SAAS,CACV1G,KAAK,MACE,EAAKD,MAAMC,KADd,CAEA+M,IAAKJ,EAAEhG,OAAOC,eAOtC,yBAAKW,UAAU,gBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,uBACU,SAApBd,KAAKf,MAAMiC,KACR,4BACIU,MAAO,CAAE2E,WAAY,QACrBzF,UAAU,kBACVI,KAAK,UAET,uCAEA,KACJ,4BACIU,MAAO,CAAE2E,WAAY,QACrBzF,UAAU,kBACVI,KAAK,SACL2E,QAAS7F,KAAKf,MAAMgH,cAEpB,6CAOxB,yBAAKnF,UAAU,6B,GAlIRQ,a,+NCDvB,IAAI+G,GAAKC,EAAQ,IACXa,GAAUd,GAAGnK,gBA4QJsM,G,YAzQX,aAAe,IAAD,8BACV,+CAgBJC,WAAa,YACmB,IAAxB,EAAKnR,MAAMoR,SACX,EAAKzK,SAAS,CACV0K,WAAY,YACZD,UAAU,IAGd,EAAKzK,SAAS,CACV0K,WAAY,GACZD,UAAU,KA1BR,EA+BdK,eAAiB,WACb,EAAK9K,SAAS,CAAE+K,eAAgB,EAAK1R,MAAM0R,iBAhCjC,EAmCdC,aAAe,WAAmB,IAAlBtI,EAAiB,uDAAT,KACpB,EAAK1C,SAAS,CAAEiL,aAAc,EAAK5R,MAAM4R,YAAaJ,cAAenI,KApC3D,EAuCdzD,WAAa,WACT,EAAKC,WAAWC,kBAxCN,EA2CdC,cAAgB,WACmB,kBAApB,EAAKF,YAAyB,EAAKA,WAAWG,YA5C/C,EAoDdyP,YAAc,WACV,EAAK1V,UACL,EAAK4G,SAAS,CACV6O,kBAAkB,EAClB9D,eAAe,EACfE,aAAa,KAzDP,EA6DdpL,aA7Dc,uCA6DC,WAAOvG,GAAP,iBAAA4R,EAAA,6DACPvR,EAAUL,EADH,SAEUkN,GAAID,OAAO,QAAQY,aAAaxN,GAF1C,QAEP2P,EAFO,QAGE6B,IAA0B,MAApB7B,EAASC,OACK,MAAzBD,EAAShQ,KAAKiQ,QACdQ,MAAMT,EAAShQ,KAAK8R,SACpB,EAAKN,iBACL,EAAK1R,WAEL2Q,MAAMT,EAAShQ,KAAK8R,SAGrB9B,EAAShQ,MAAQgQ,EAAShQ,KAAK8R,SAASrB,MAAMT,EAAShQ,KAAK8R,SAZxD,2CA7DD,wDA6EdC,aA7Ec,uCA6EC,WAAO/R,GAAP,iBAAA4R,EAAA,0DACHI,OAAOC,QAAQ,kBADZ,uBAGH5R,EAAU,CACV,QAAW,EACX,UAAaL,EAAKwP,GAClB,MAASxP,EAAK8M,MACd,IAAO9M,EAAK+M,KAEhB/F,QAAQC,KAAK,eAAgB5G,GATtB,SAUc6M,GAAID,OAAO,QAAQa,aAAazN,GAV9C,QAUH2P,EAVG,QAWM6B,IAA0B,MAApB7B,EAASC,OACK,MAAzBD,EAAShQ,KAAKiQ,QACdQ,MAAMT,EAAShQ,KAAK8R,SACpB,EAAKJ,eACL,EAAK5R,WAEL2Q,MAAMT,EAAShQ,KAAK8R,SAGrB9B,EAAShQ,MAAQgQ,EAAShQ,KAAK8R,SAASrB,MAAMT,EAAShQ,KAAK8R,SApB5D,2CA7ED,wDAsGdI,aAtGc,uCAsGC,WAAO1C,GAAP,iBAAAoC,EAAA,0DACHI,OAAOC,QAAQ,mBADZ,uBAGH5R,EAAU,CACV,QAAW,EACX,UAAamP,GALV,SAOctC,GAAID,OAAO,QAAQc,aAAa1N,GAP9C,QAOH2P,EAPG,QAQM6B,IAA0B,MAApB7B,EAASC,OACK,MAAzBD,EAAShQ,KAAKiQ,QACdQ,MAAMT,EAAShQ,KAAK8R,SACpB,EAAKhS,WAEL2Q,MAAMT,EAAShQ,KAAK8R,SAGpB9B,EAAShQ,MAAQgQ,EAAShQ,KAAK8R,SAASrB,MAAMT,EAAShQ,KAAK8R,SAhB7D,2CAtGD,wDA2HdpC,YAAc,kBAAMC,YAAeb,GAAG5N,gBA3HxB,EA6Hd0O,QAAUd,GAAGnK,gBA7HC,EAwKd0L,QAAU,CACN,KACA,KACA,QACA,cACA,CACI9H,KAAM,SACNqH,QAAS,CACLU,iBAAkB,SAACpG,EAAKqG,GACpB,OACI,6BACI,4BACIhJ,UAAU,mCACVc,MAAO,CAAElF,YAAa,GACtBmJ,QAAS,kBAAM,EAAKoF,aAAanB,EAAUC,YAE3C,uBAAGjJ,UAAU,4BAEjB,4BACIA,UAAU,mCACV+E,QAAS,kBAAM,EAAK4F,aAAa3B,EAAUG,QAAQ,MACnD,uBAAGnJ,UAAU,gCA3LrC,EAAKxH,MAAQ,CACTqR,WAAY,GACZD,UAAU,EACV7B,QAAS,GACTY,UAAW,GACXuB,eAAe,EACfE,aAAa,EACbQ,YAAa,EACbC,WAAY,EACZC,YAAa,GACbC,WAAY,GAEhB,EAAKJ,aAAe,EAAKA,aAAa7L,KAAlB,gBAdV,E,iFAgDVI,KAAKd,aACLc,KAAK3G,QAAQ2G,KAAK1G,MAAMoS,YAAa1L,KAAK1G,MAAMqS,c,uEA8EtCqB,EAAOC,G,yFACb3D,EAAQ,CACR,QAAW,G,SAGM7C,GAAID,OAAO,QAAQW,mBAAmBmC,G,OACpC,OADnBC,E,QACQC,QAA2C,MAAzBD,EAAShQ,KAAKiQ,QACpCC,EAAYF,EAAShQ,KAAKA,KAAKyK,KAAI,SAAC7D,EAAOwC,GAAW,IAC9CoG,EAA2B5I,EAA3B4I,GAAI1C,EAAuBlG,EAAvBkG,MAAOyF,EAAgB3L,EAAhB2L,YACnB,MAAO,CACHnJ,GAAU,EAAK,EAAKrJ,MAAMqS,WAAa,EAAKrS,MAAMoS,YAClD3C,EACA1C,EACAyF,MAGR9L,KAAKC,SAAS,CACV4I,QAASU,EAAShQ,KAAKA,KACvBkQ,cAEJzJ,KAAKX,iBAELW,KAAKX,gBAGTkB,QAAQoJ,IAAIJ,G,uQAIRD,EAAQ,CACRyC,QAAS,K,SAGQtF,GAAID,OAAO,WAAWO,oBAAoBuC,G,OACvC,OADpBC,E,QACSC,QACTxJ,KAAKC,SAAS,CACV4L,WAAYtC,EAAShQ,KAAKmK,S,qIAmC5B,IAAD,SAE6B1D,KAAK1G,MAAjCuS,EAFD,EAECA,WAAYD,EAFb,EAEaA,YACdI,E,2WAAY,IACT7C,GADS,CAEZ8C,YAAY,EACZC,MAAOL,EACPpP,WAAYmP,EACZO,cAAe,SAACxS,EAAQyS,GACpB,OAAQzS,GACJ,IAAK,aACD,EAAKsG,SAAS,CAAE0L,WAAYS,EAAWC,OACvC,EAAKhT,QAAQ+S,EAAW9N,YAAa8N,EAAWC,MAChD,MACJ,IAAK,oBACD,EAAKpM,SAAS,CAAEyL,YAAaU,EAAW9N,cACxC,EAAKjF,QAAQ+S,EAAW9N,YAAa8N,EAAWC,MAChD,MACJ,IAAK,SACD,IAAI5P,EAAa2P,EAAW3P,WAAa2P,EAAW3P,WAAY,GAChE,EAAKwD,SAAS,CAAE2L,YAAanP,IAAc,WACvC,EAAKpD,QAAQ+S,EAAW9N,YAAa8N,EAAWC,aAUpE,OACI,yBAAKvL,UAAU,gBACX,kBAAC,UAAD,CAAYC,MAAO,SAAAC,GAAG,OAAK,EAAK7B,WAAa6B,KAC7C,yBAAKF,UAAU,eACX,kBAAC,IAAD,CAAkBoJ,MAAOlK,KAAKiJ,eAC1B,kBAAC,IAAD,CACIkB,MAAO,iBACPxG,IAAKkI,EACLtS,KAAMyG,KAAK1G,MAAMmQ,UACjBG,QAAS5J,KAAK4J,QACdT,QAAS6C,EACT5B,cAAc,EACdC,SAAUrK,KAAK+K,eAAenL,KAAKI,UAI9CA,KAAK1G,MAAM0R,eACR,kBAAC,GAAD,CACI9J,KAAM,SACN+E,aAAcjG,KAAK+K,eACnB5E,YAAanG,KAAKF,aAAaF,KAAKI,QAG3CA,KAAK1G,MAAM4R,aACR,kBAAC,GAAD,CACIhK,KAAM,SACN3H,KAAMyG,KAAK1G,MAAMuP,QAAQ7I,KAAK1G,MAAMwR,eACpC7E,aAAcjG,KAAKiL,aACnB9E,YAAanG,KAAKsL,aAAa1L,KAAKI,a,GAlQxCsB,aCIhBsS,GAAQ,0BAGRC,GAAY,0CAEZC,GAAS,OAEPC,G,YAEJ,aAAe,IAAD,8BAEZ,+CAgCFC,cAAgB,SAACpY,EAAM6H,EAAKwQ,GAC1B,OACE,kBAAC,IAAD,CAASvT,GAAIuT,GACX,wBAAInT,UAAU,WACZ,yBAAKA,UAAU,QACX,yBAAKA,UAAU,OAAM,uBAAGA,UAAWlF,KACnC,yBAAKkF,UAAU,OAAO2C,GACtB,yBAAK3C,UAAU,sCAtCzB,EAAKxH,MAAQ,CACX4a,SAAU,MACVC,eAAgB,mBAChBC,YAAaN,GACbO,cAAeR,GACfS,eAAgBV,GAChBW,UAAWT,GACXU,YAAaX,GACbY,aAAcb,GACdc,WAAYZ,GACZa,aAAcd,GACde,cAAehB,GACfiB,cAAef,GACfgB,gBAAiBjB,GACjBkB,iBAAkBnB,GAClBoB,cAAelB,GACfmB,gBAAiBpB,GACjBqB,iBAAkBtB,IApBR,E,uFAyBYuB,GAAY,IAAD,OAChCA,EAAUzV,KAAKqJ,KAAO/I,KAAKf,MAAMS,KAAKqJ,IACvCqM,YAAW,WACP,EAAKnW,MAAMoW,UAAUF,EAAUzV,KAAKqJ,MACrC,O,+BAoBL,OACE,kBAAC,IAAD,CAAYpI,QAASC,IAAOC,gBAE1B,6BAEE,yBAAKC,UAAU,OACb,kBAAC,IAAD,CAAOwU,OAAK,EAACC,KAAK,IAAIC,UAAWxW,KAInC,yBAAK8B,UAAWd,KAAK1G,MAAM4a,UACzB,yBAAKpT,UAAU,aACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,SACb,wBAAIA,UAAU,0EAAd,cAIF,yBAAKA,UAAU,WASjB,yBAAKA,UAAU,wCACb,yBAAKA,UAAU,aAAf,aAGA,wBAAIA,UAAU,YACXd,KAAKgU,cAAc,mBAAoB,YAAa,UAGvD,yBAAKlT,UAAU,aAAf,cAGA,wBAAIA,UAAU,YACXd,KAAKgU,cAAc,sBAAuB,eAAgB,aAC1DhU,KAAKgU,cAAc,mBAAoB,cAAe,UAEtDhU,KAAKgU,cAAc,oBAAqB,aAAc,aACtDhU,KAAKgU,cAAc,wBAAyB,iBAAkB,SAGjE,yBAAKlT,UAAU,aAAf,QAGA,wBAAIA,UAAU,YAEXd,KAAKgU,cAAc,kBAAmB,gBAAiB,QACvDhU,KAAKgU,cAAc,mBAAoB,cAAe,SAGzD,yBAAKlT,UAAU,aAAf,WAGA,wBAAIA,UAAU,YACXd,KAAKgU,cAAc,wBAAyB,SAAU,YAM/D,yBAAKlT,UAAU,YACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,iBAEb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,8BAChB,uBAAGA,UAAU,0BAOnB,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,UAKR,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAOwU,OAAK,EAACC,KAAK,QAAQC,UAAWzQ,IACrC,kBAAC,IAAD,CAAOuQ,OAAK,EAACC,KAAK,SAASC,UAAWhL,KACtC,kBAAC,IAAD,CAAO8K,OAAK,EAACC,KAAK,YAAYC,UAAWzI,KACzC,kBAAC,IAAD,CAAOuI,OAAK,EAACC,KAAK,YAAYC,UAAW9G,KACzC,kBAAC,IAAD,CAAO4G,OAAK,EAACC,KAAK,OAAOC,UAAWpC,KACpC,kBAAC,IAAD,CAAOkC,OAAK,EAACC,KAAK,MAAMC,UAAWC,c,GAhJjCnU,aAiKHC,gBANS,SAAAjI,GACvB,MAAO,CACNoG,KAAMpG,EAAMoG,QAI0B,KAAzB6B,CAA+BwS,IC1K1B2B,QACW,cAA7BnK,OAAOoK,SAASC,UAEe,UAA7BrK,OAAOoK,SAASC,UAEhBrK,OAAOoK,SAASC,SAASC,MACvB,2D,uBCJSC,GAdc,SAAAC,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAArc,GAW1C,OATiBA,EAAOuH,MAEO,iBAAhBvH,EAAOT,OACd8Q,MAAMrQ,EAAOT,OAIR8c,EAAKrc,M,yCCLLsc,I,6kBAAV,SAAUA,GAAQxP,EAAK9M,GAAvB,6EAEc,OADZJ,EAASI,EAATJ,KADF,SAEoB2c,aAAKzP,EAAIyB,SAAU3O,GAFvC,UAEGgQ,EAFH,OAIc,qBAAT4M,MACV5V,QAAQoJ,IAAI,QAASJ,IAGlBA,EAAS6B,KAAM7B,EAAShQ,MAAS6c,aAAQ7M,EAAShQ,KAAK8c,OARrD,iBAwBC,OAdIzc,EAVL,MAWQ2P,EAAShQ,MAGtBgH,QAAQC,KAAK5G,GACb8M,aAAa4P,QAAQ,eAAgB1c,EAAQyc,OACvCE,EAAW,CAChBC,YAAW,EACXzN,GAAGnP,EAAQmP,GACXxJ,KAAK3F,EAAQ2F,KACbkX,OAAO7c,EAAQ6c,OACf7I,UAAUhU,EAAQgU,WAEnBlH,aAAa4P,QAAQ,YAAYI,KAAKC,UAAUJ,IAvB3C,UAwBOK,aAAIC,UAAYte,YAAYqB,IAxBnC,oCA0BD2P,EAAShQ,MAAiC,MAAzBgQ,EAAShQ,KAAKiQ,OA1B9B,iBA2BG,OA3BH,UA2BSoN,aAAIC,UAAYre,YAAY,CACxC+c,KAAM,UACNlK,QAAS9B,EAAShQ,KAAK8R,QAAS9B,cA7B7B,iDAgCL,OAhCK,UAgCCqN,aAAIC,UAAYre,YAAY,+BAhC7B,yC,gBCIkB+C,IAFnBub,GAASC,GAAIvQ,OAAO,YAEX,SAAUjL,KAAV,iEACd,OADc,SACRyb,aAAI,CACHC,aAAWne,YAAUoB,aAAc+b,GAASa,MAFrC,wC,6CCJTI,GAAcC,KAAM,aAMpBC,GAAgBD,KAAOD,IAHT,SAAC5d,GAAD,OAAWA,EAAM+d,UAAU,CAACC,MAAM,OASvC,IACbC,IAAK,SAACje,GAEJ,OANiBke,EAMEle,EANMN,KAAUwe,GAAnB,IAACA,GAQnBC,GAAI,SAACD,GAEH,OAAOJ,GAAcI,K,UCPVE,GAXO,CACrBC,QAAQ,EACRC,eAAgB,MAChBC,YAAa,CACZlU,IAAK,UACLmU,Q,QAASC,EACTC,UAAW,CAAC,QACZC,WAAY,CAACC,MCLFC,GAAWC,aAAgB,CACvC1Y,KAAM4I,EAAQ,IAAetO,U,aAGf,WACd,IAAIqe,EAAgBF,GAEpB,GAAIG,GAAaX,OAAQ,CACxB,IAAMY,EAAgBD,GAAaT,YACnCQ,EAAgBG,aAAeD,EAAeJ,IAL3B,MCNN,SAACM,EAAaC,GACzB,IAAMC,EAAa,GACbC,EAAY,GAElBD,EAAWlY,KAAKoY,IAEhB,IACMC,EAAiBC,aAAqB,CAAEC,YAD1B,OAepB,OAbAL,EAAWlY,KAAKqY,GAEhBF,EAAUnY,KAAKwY,KAAe,WAAf,EAAmBN,IAW3B,CACH5C,MATUmD,aAAYT,EAAaU,KAAO,WAAP,EAAWP,IAU9CQ,aAJeN,EAAeO,IAAIX,GAKlCI,kBDVuCQ,CAAejB,EAAeK,IAAtE3C,EARc,EAQdA,MARc,EAQPqD,aARO,EAQON,eAiB3B,MAAO,CAAE/C,QAAOwD,UAFGC,aAAazD,IEhBJmD,GAArBnD,G,GAAAA,MAAOwD,G,GAAAA,UAEfE,IAASC,OACT,kBAAC,IAAD,CAAU3D,MAAOA,IACb,kBAAC,KAAD,CAAa5E,QAAS,KAAMoI,UAAWA,IACnC,kBAAC,GAAD,QAEKlJ,SAASsJ,eAAe,SRwG/B,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.2e7a11c0.chunk.js","sourcesContent":["import { createReducer, createActions } from 'reduxsauce';\r\nimport Immutable from 'seamless-immutable';\r\n\r\n/* ------------- Types and Action Creators ------------- */\r\n\r\nconst { Types, Creators } = createActions({\r\n\tauthRequest: ['data'],\r\n\tauthSuccess: ['payload'],\r\n\tauthFailure: ['error'],\r\n\tauthLogout: [],\r\n\tauthUserUpdate: ['data'],\r\n\tauthLoginCheck: null\r\n});\r\n\r\nexport const AuthTypes = Types;\r\nexport default Creators;\r\n\r\n/* ------------- Initial State ------------- */\r\n\r\nexport const INITIAL_STATE = Immutable({\r\n\tfetching: null,\r\n\terror: null,\r\n\tuser: null\r\n});\r\n\r\n/* ------------- Selectors ------------- */\r\n\r\nexport const AuthSelectors = {\r\n\tgetData: state => state.data\r\n};\r\n\r\n/* ------------- Reducers ------------- */\r\n\r\n// request the data from an api\r\nexport const request = (state, { data }) => state.merge({ fetching: true, error: null, user: null });\r\n\r\n// successful api lookup\r\nexport const success = (state, action) => {\r\n\tconst { payload } = action;\r\n\treturn state.merge({ fetching: false, error: null, user: payload });\r\n};\r\n\r\n// Something went wrong somewhere.\r\nexport const failure = (state, { error }) => state.merge({ fetching: false, error });\r\n\r\nexport const logout = state => state.merge({ fetching: false, error: null, user: null });\r\n\r\nexport const userUpdate = (state, { data }) => state.merge({ fetching: true, error: null });\r\n\r\nexport const authLoginCheck = state => state.merge({ fetching: false });\r\n\r\n/* ------------- Hookup Reducers To Types ------------- */\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n\t[Types.AUTH_REQUEST]: request,\r\n\t[Types.AUTH_SUCCESS]: success,\r\n\t[Types.AUTH_FAILURE]: failure,\r\n\t[Types.AUTH_LOGOUT]: logout,\r\n\t[Types.AUTH_USER_UPDATE]: userUpdate,\r\n\t[Types.AUTH_LOGIN_CHECK]: authLoginCheck\r\n});","var mainColor = \"#fff\"\r\nvar secondColor = \"#f6f6f6\"\r\n\r\nexports.customTable = function () {\r\n  return {\r\n      typography: {\r\n        useNextVariants: true,\r\n      },\r\n      overrides: {\r\n        MUIDataTable: {\r\n          paper: {\r\n            position: 'relative',\r\n            width: '100% !important',\r\n            boxShadow: \"0 0 0 0 rgba(154,161,171,.15)\",\r\n            border: \"1px rgba(0,0,0,0.1) solid\",\r\n            borderRadius: \"5px\",\r\n            overflow: \"hidden\",\r\n          },\r\n          responsiveScroll: {\r\n            position: 'relative',\r\n            width: '100% !important',\r\n            // height: 'calc(100vh - 195px)',\r\n            // maxHeight: 'calc(100vh - 195px)'\r\n          }\r\n        },\r\n        MuiToolbar: {\r\n          root: {\r\n            position: 'relative',\r\n          }\r\n        },\r\n        MUIDataTableToolbar: {\r\n          root: {\r\n            position: 'relative',\r\n            backgroundColor: mainColor,\r\n          },\r\n          titleText: {\r\n            color: \"#555\"\r\n          },\r\n          icon: {\r\n            color: \"#555 !important\"\r\n          },\r\n          iconActive: {\r\n            color: \"#555 !important\"\r\n          },\r\n          left: {\r\n            flex: \"0 0 auto !important\"\r\n          },\r\n          actions: {\r\n            flex: \"1 0 auto !important\"\r\n          }\r\n        },\r\n        MUIDataTableSearch: {\r\n          main: {\r\n            position: 'relative',\r\n            // top: \"7px\",\r\n            right: \"-95px\",\r\n            width: \"100% !important\",\r\n            backgroundColor: mainColor,\r\n            zIndex: \"10\",\r\n            textAlign: \"right\",\r\n            display: \"block\",\r\n          },\r\n          searchIcon: {\r\n            width: \"50px !important\",\r\n            color: \"#555 !important\",\r\n            display: \"inline-block\",\r\n            textAlign: \"center\",\r\n            verticalAlign: \"top\",\r\n          },\r\n          searchText: {\r\n            width: \"calc(100% - 120px) !important\",\r\n            marginRight: \"10px\",\r\n            color: \"#555 !important\",\r\n            display: \"inline-block\",\r\n            verticalAlign: \"top\",\r\n          },\r\n          clearIcon: {\r\n            width: \"50px !important\",\r\n            color: \"#555 !important\",\r\n            display: \"inline-block\",\r\n            verticalAlign: \"top\",\r\n          },\r\n        },\r\n        MUIDataTableHead: {\r\n          main: {\r\n            position: 'relative',\r\n            backgroundColor: mainColor,\r\n            color: \"#555\"\r\n          }\r\n        },\r\n        MUIDataTableHeadRow: {\r\n          root: {\r\n            position: 'relative',\r\n            backgroundColor: mainColor,\r\n          }\r\n        },\r\n        MUIDataTableHeadCell: {\r\n          root: {\r\n            fontSize: \"10pt\",\r\n            fontWeight: \"500\",\r\n            color: \"#555\",\r\n          },\r\n          fixedHeader: {\r\n            position: \"relative\",\r\n            borderBottom: \"1px rgba(0,0,0,0.1) solid\",\r\n            // backgroundColor: secondColor,\r\n            color: \"#555\",\r\n            padding: \"10px\",\r\n            height: \"auto\"\r\n          },\r\n          toolButton: {\r\n            display: \"flex\",\r\n            height: \"auto\",\r\n          },\r\n          data: {\r\n            display: \"inline-block\",\r\n            verticalAlign: \"top\",\r\n          },\r\n          sortActive: {\r\n            color: \"#555\"\r\n          },\r\n          sortAction: {\r\n            color: \"#555\",\r\n            display: \"inline-block\",\r\n            verticalAlign: \"top\",\r\n            MuiButtonBase: {\r\n              color: \"#555\",\r\n              root: {\r\n                color: \"#555\",\r\n              }\r\n            }\r\n          }\r\n        },\r\n        MUIDataTableBodyCell: {\r\n          root: {\r\n            position: 'relative',\r\n            fontSize: \"8pt\",\r\n            padding: \"10px\"\r\n          }\r\n        },\r\n        MUIDataTableSelectCell: {\r\n          headerCell: {\r\n            backgroundColor: secondColor,\r\n            checkboxRoot: {\r\n              color: \"#555\",\r\n            }\r\n          },\r\n          checkboxRoot: {\r\n            color: \"#555\"\r\n          }\r\n        },\r\n        MuiInput: {\r\n          root: {\r\n            top: \"5px\",\r\n            color: \"#555 !important\",\r\n          },\r\n          underline: {\r\n            borderBottom: \"1px #555 solid !important\",\r\n          }\r\n        },\r\n        MuiSelect: {\r\n          root: {\r\n            top: \"0\",\r\n            color: \"#555 !important\",\r\n          },\r\n        }\r\n        // MuiIconButton: {\r\n        //   root: {\r\n        //     color: \"#fff !important\",\r\n        //   }\r\n        // }\r\n      }\r\n    }\r\n}\r\n\r\nexports.customTable2 = function () {\r\n  return {\r\n      typography: {\r\n        useNextVariants: true,\r\n      },\r\n      overrides: {\r\n        MUIDataTable: {\r\n          root: {\r\n            backgroundColor: secondColor,\r\n          },\r\n          paper: {\r\n            boxShadow: \"0 0 30px 0 rgba(154,161,171,.15)\",\r\n            border: \"1px rgba(0,0,0,0.1) solid\",\r\n            borderRadius: \"5px\",\r\n            overflow: \"hidden\",\r\n          },\r\n        },\r\n        MuiToolbar: {\r\n          root: {\r\n            left: {\r\n              flex: \"0 0 auto !important\"\r\n            },\r\n            actions: {\r\n              flex: \"0 0 auto !important\"\r\n            }\r\n          }\r\n        },\r\n        MUIDataTableToolbar: {\r\n          root: {\r\n            backgroundColor: secondColor,\r\n          },\r\n          titleText: {\r\n            color: \"#555\"\r\n          },\r\n          icon: {\r\n            color: \"#555\"\r\n          },\r\n        },\r\n        MUIDataTableSearch: {\r\n          searchIcon: {\r\n            color: \"#555\"\r\n          },\r\n          searchText: {\r\n            color: \"#555\",\r\n          },\r\n          clearIcon: {\r\n            color: \"#555\"\r\n          },\r\n        },\r\n        MUIDataTableHead: {\r\n          main: {\r\n            backgroundColor: mainColor,\r\n            color: \"#555\"\r\n          }\r\n        },\r\n        MUIDataTableHeadRow: {\r\n          root: {\r\n            backgroundColor: mainColor,\r\n          }\r\n        },\r\n        MUIDataTableHeadCell: {\r\n          root: {\r\n            fontSize: \"10pt\",\r\n            fontWeight: \"500\",\r\n            color: mainColor,\r\n          },\r\n          fixedHeader: {\r\n            position: \"relative\",\r\n            backgroundColor: secondColor,\r\n            color: \"#555\",\r\n            padding: \"10px\",\r\n            height: \"auto\"\r\n          },\r\n          toolButton: {\r\n            display: \"flex\",\r\n            height: \"auto\"\r\n          },\r\n          data: {\r\n            display: \"inline-block\",\r\n            verticalAlign: \"top\",\r\n          },\r\n          sortActive: {\r\n            color: \"#555\"\r\n          },\r\n          sortAction: {\r\n            color: \"#555\",\r\n            display: \"inline-block\",\r\n            verticalAlign: \"top\",\r\n            MuiButtonBase: {\r\n              color: \"#555\",\r\n              root: {\r\n                color: \"#555\",\r\n              }\r\n            }\r\n          }\r\n        },\r\n        MUIDataTableBodyCell: {\r\n          root: {\r\n            fontSize: \"10pt\",\r\n            padding: \"10px\"\r\n          }\r\n        },\r\n        MUIDataTableSelectCell: {\r\n          headerCell: {\r\n            backgroundColor: secondColor,\r\n            checkboxRoot: {\r\n              color: \"#fff\",\r\n            }\r\n          },\r\n          checkboxRoot: {\r\n            color: \"#555\"\r\n          }\r\n        },\r\n      }\r\n    }\r\n}\r\n\r\nexports.customOptions = function () {\r\n  return {\r\n    // selectableRows: false,\r\n    selectableRows: 'none',\r\n    filterType: 'multiselect',\r\n    responsive: 'scroll',\r\n    rowsPerPage: 5,\r\n    rowsPerPageOptions: [5, 10, 20, 50],\r\n    print: false,\r\n    download: false,\r\n    elevation: 5,\r\n    filter: false,\r\n    viewColumns: false\r\n  }\r\n}\r\n\r\nexports.customOptions2 = function () {\r\n  return {\r\n    selectableRows: true,\r\n    filterType: 'dropdown',\r\n    responsive: 'scroll',\r\n    rowsPerPage: 5,\r\n    rowsPerPageOptions: [5, 10, 20, 50],\r\n    print: false,\r\n    download: false,\r\n    elevation: 5,\r\n  }\r\n}\r\n\r\nexports.customOptions3 = function () {\r\n  return {\r\n    selectableRows: true,\r\n    filterType: 'dropdown',\r\n    responsive: 'scroll',\r\n    rowsPerPage: 5,\r\n    rowsPerPageOptions: [5, 10, 20, 50],\r\n    print: false,\r\n    download: false,\r\n    sort: true,\r\n    elevation: 5,\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, HashRouter, Redirect } from \"react-router-dom\";\r\nimport LoadingBar from 'react-top-loading-bar';\r\n// import logo from './../../assets/img/logo.jpg';\r\nimport AuthAction from '../../redux/AuthRedux';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            nisn: '',\r\n            password: '',\r\n            redirect: props.auth.user ? true : false\r\n        }\r\n        this.handleChangenisn = this.handleChangenisn.bind(this)\r\n        this.handleChangePassword = this.handleChangePassword.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleChangenisn(event) {\r\n        this.setState({ nisn: event.target.value })\r\n    }\r\n\r\n    handleChangePassword(event) {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        this.login()\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (!newProps.auth.fetching) {\r\n            if (newProps.auth && !newProps.auth.error) {\r\n                this.setState({ redirect: true });\r\n                this.onFinishFetch()\r\n            } else {\r\n                this.onFinishFetch()\r\n            }\r\n        }\r\n    }\r\n\r\n    login() {\r\n        this.startFetch()\r\n        const { nisn, password } = this.state\r\n        let payload = {\r\n            nisn: nisn,\r\n            password: password\r\n        }\r\n        this.props.authRequest(payload);\r\n    }\r\n\r\n    startFetch = () => {\r\n        this.LoadingBar.continousStart()\r\n    }\r\n\r\n    onFinishFetch = () => {\r\n        if (typeof this.LoadingBar === \"object\") this.LoadingBar.complete()\r\n    }\r\n\r\n    render() {\r\n\r\n        console.info(this.state.redirect)\r\n        if (this.state.redirect) {\r\n            return <Redirect push to=\"/home\"></Redirect>\r\n        }\r\n\r\n        return (\r\n            <HashRouter history={Router.browserHistory}>\r\n                <div className=\"main-content\">\r\n                    <LoadingBar onRef={ref => (this.LoadingBar = ref)} />\r\n                    <div className=\"app-login background-grey\">\r\n                        <div className=\"login-small\">\r\n                            {/* <div className=\"logo-faded\">\r\n                                <div\r\n                                    className=\"image image-circle background-white border-all\"\r\n                                    style={{ margin: \"auto\" }}>\r\n                                    <img src={logo} alt=\"\"></img>\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <div className=\"margin-10px grid grid-2x\">\r\n                                <div className=\"col-1\">\r\n                                    <div className=\"txt-site txt-16 txt-bold txt-main\">\r\n                                        Sign In\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <form onSubmit={this.handleSubmit}>\r\n                                <div className=\"margin-15px\">\r\n                                    <div className=\"margin-bottom-5px txt-site txt-10 txt-main txt-bold\">\r\n                                        NISN\r\n                                    </div>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"txt txt-sekunder-color\"\r\n                                        placeholder='10101010'\r\n                                        value={this.state.nisn}\r\n                                        onChange={this.handleChangenisn}\r\n                                        required></input>\r\n                                </div>\r\n                                <div className=\"margin-15px\">\r\n                                    <div className=\"margin-bottom-5px txt-site txt-10 txt-main txt-bold\">\r\n                                        Password\r\n                                    </div>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        placeholder='password'\r\n                                        className=\"txt txt-sekunder-color\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.handleChangePassword}\r\n                                        required></input>\r\n                                </div>\r\n                                <div className=\"margin-15px\">\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Sign In\"\r\n                                        className=\"btn btn-width-all btn-primary\">\r\n                                    </input>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        authRequest: obj => dispatch(AuthAction.authRequest(obj))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { Component } from 'react'\r\n\r\nclass Percentage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"card df-card\">\r\n                    \r\n        <div className=\"padding-10px background-white border-bottom\">\r\n          <div className=\"txt-site txt-bold text-main txt-12\">Percentage</div>\r\n        </div>\r\n\r\n        <div className=\"card-mid\">\r\n          <div className=\"c100 p25 default green card-center\">\r\n            <span>\r\n                25.5%\r\n            </span>\r\n            <div className=\"slice\" style={{margin: \"auto\"}}>\r\n                <div className=\"bar\"></div>\r\n                <div className=\"fill\"></div>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"card-percentage border-50\">\r\n            <div className=\"percentage-info\">\r\n              <div className=\"percentage-title\">\r\n                  50%\r\n              </div>\r\n              <div className=\"percentage-subtitle\">\r\n                  Percentage\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Percentage","import React, { Component } from 'react'\r\nimport {\r\n  PieChart, Pie, Cell, ResponsiveContainer\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  { name: 'Group Pie A', value: 400 },\r\n  { name: 'Group Pie B', value: 300 },\r\n  { name: 'Group Pie C', value: 300 },\r\n  { name: 'Group Pie D', value: 200 },\r\n];\r\n\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({\r\n  cx, cy, midAngle, innerRadius, outerRadius, percent, index,\r\n}) => {\r\n   const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n  return (\r\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n      {`${(percent * 100).toFixed(0)}%`}\r\n    </text>\r\n  );\r\n};\r\n\r\nclass CardPieChart extends Component {\r\n\t\r\n\tstate = {\r\n    activeIndex: 0,\r\n  };\r\n\r\n  onPieEnter = (data, index) => {\r\n    this.setState({\r\n      activeIndex: index,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n                    \r\n        <div className=\"padding-10px background-white border-bottom\">\r\n          <div className=\"txt-site txt-bold text-main txt-12\">Inbox Date</div>\r\n        </div>\r\n\r\n        <div className=\"padding-bottom-10px txt-site txt-11\">\r\n          <ResponsiveContainer \r\n            width='100%' \r\n            aspect={4.0/2.8}>\r\n\t        \t<PieChart style={{\r\n\t        \t\tmargin: 'auto',\r\n\t        \t\t}}>\r\n\t\t\t        <Pie\r\n\t\t\t          data={data}\r\n\t\t\t          labelLine={false}\r\n\t\t\t          label={renderCustomizedLabel}\r\n\t\t\t          outerRadius={90}\r\n\t\t\t          fill=\"#8884d8\"\r\n\t\t\t          dataKey=\"value\"\r\n\t\t\t        >\r\n\t\t\t          {\r\n\t\t\t            data.map(\r\n\t\t\t            \t(entry, index) => <Cell \r\n\t\t\t            \t\tkey={`cell-${index}`} \r\n\t\t\t            \t\tfill={COLORS[index % COLORS.length]} />\r\n\t\t\t            )\r\n\t\t\t          }\r\n\t\t\t        </Pie>\r\n\t\t\t      </PieChart>\r\n          </ResponsiveContainer>\r\n\r\n          <div className=\"padding-15px\">\r\n            <div>\r\n              { this.PieInfo() }\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  PieInfo = () => {\r\n    let dt = []\r\n    let val = data.length\r\n\r\n    for (let index = 0; index < val; index++) {\r\n      dt.push(\r\n        <div className=\"margin-5px\" key={index}>\r\n          <span className=\"fa fa-lw fa-circle\" style={{color: COLORS[index], marginRight: \"7.5px\"}} /> \r\n          <span className=\"txt-site txt-main txt-thin txt-11\">{ data[index].name }</span>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return dt\r\n  }\r\n\r\n}\r\n\r\nexport default CardPieChart","import React, { Component } from 'react'\r\nimport {\r\n  AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n  },\r\n  {\r\n    name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n  },\r\n  {\r\n    name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\r\n  },\r\n  {\r\n    name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n  },\r\n  {\r\n    name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\r\n  },\r\n  {\r\n    name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n  },\r\n  {\r\n    name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n  },\r\n];\r\n\r\nconst TITLE = ['UV', 'PV', 'AMT'];\r\nconst COLORS = ['#8884d8', '#82ca9d', '#ffc658'];\r\n\r\nclass CardLineChart extends Component {\r\n\t\r\n\tstate = {\r\n    activeIndex: 0,\r\n  };\r\n\r\n  onPieEnter = (data, index) => {\r\n    this.setState({\r\n      activeIndex: index,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"padding-10px background-white border-bottom\">\r\n          <div className=\"txt-site txt-bold text-main txt-12\">Line Chart</div>\r\n        </div>\r\n        <div>\r\n          <div className=\"padding-10px txt-site txt-9\">\r\n          <ResponsiveContainer \r\n            width='100%' \r\n            aspect={4.0/2.8}>\r\n            <AreaChart \r\n              data={data}\r\n              margin={{\r\n                top: 0, right: 0, left: 0, bottom: 0,\r\n              }}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Area \r\n                type=\"monotone\" \r\n                dataKey=\"uv\" \r\n                stackId=\"1\" \r\n                stroke=\"#8884d8\" \r\n                fill=\"#8884d8\" />\r\n              <Area \r\n                type=\"monotone\" \r\n                dataKey=\"pv\" \r\n                stackId=\"1\" \r\n                stroke=\"#82ca9d\" \r\n                fill=\"#82ca9d\" />\r\n              <Area \r\n                type=\"monotone\" \r\n                dataKey=\"amt\" \r\n                stackId=\"1\" \r\n                stroke=\"#ffc658\" \r\n                fill=\"#ffc658\" />\r\n            </AreaChart>\r\n            </ResponsiveContainer>\r\n\r\n            <div className=\"padding-15px\">\r\n              <div className=\"display-flex-normal txt-site txt-center\" style={{margin: 'auto'}}>\r\n                { this.LineInfo() }\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  LineInfo = () => {\r\n    let dt = []\r\n    let val = TITLE.length\r\n\r\n    for (let index = 0; index < val; index++) {\r\n      dt.push(\r\n        <div className=\"padding-5px\" key={index}>\r\n          <span className=\"fa fa-lw fa-circle\" style={{color: COLORS[index]}} /> { TITLE[index] }\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return dt\r\n  }\r\n\r\n}\r\n\r\nexport default CardLineChart","import React, { Component } from 'react'\r\nimport {\r\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\r\n  },\r\n  {\r\n    name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\r\n  },\r\n  {\r\n    name: 'Page C', uv: 2000, pv: 8, amt: 2290,\r\n  },\r\n  {\r\n    name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\r\n  },\r\n  {\r\n    name: 'Page E', uv: 18, pv: 4800, amt: 2181,\r\n  },\r\n  {\r\n    name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\r\n  },\r\n  {\r\n    name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\r\n  },\r\n];\r\n\r\nconst TITLE = ['UV', 'PV', 'AMT'];\r\n\r\nconst COLORS = ['#8884d8', '#82ca9d', '#ffc658'];\r\n\r\nclass CardBartChart extends Component {\r\n\t\r\n\tstate = {\r\n    activeIndex: 0,\r\n  };\r\n\r\n  onPieEnter = (data, index) => {\r\n    this.setState({\r\n      activeIndex: index,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"padding-10px background-white border-bottom\">\r\n          <div className=\"txt-site txt-bold text-main txt-12\">Bar Chart</div>\r\n        </div>\r\n        <div>\r\n          <div className=\"padding-10px txt-site txt-9\">\r\n            <ResponsiveContainer \r\n              width='100%' \r\n              aspect={4.0/2.8}>\r\n              <BarChart\r\n                data={data}\r\n                margin={{\r\n                  top: 0, right: 0, left: 0, bottom: 0,\r\n                }}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                {/*<Legend />*/}\r\n                <Bar dataKey=\"pv\" stackId=\"a\" fill=\"#8884d8\" />\r\n                <Bar dataKey=\"uv\" stackId=\"a\" fill=\"#82ca9d\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n\r\n            <div className=\"padding-15px\">\r\n              <div className=\"display-flex-normal txt-site txt-center\" style={{margin: 'auto'}}>\r\n                { this.BarInfo() }\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  BarInfo = () => {\r\n    let dt = []\r\n    let val = TITLE.length\r\n\r\n    for (let index = 0; index < val; index++) {\r\n      dt.push(\r\n        <div className=\"padding-5px\" key={index}>\r\n          <span className=\"fa fa-lw fa-circle\" style={{color: COLORS[index]}} /> { TITLE[index] }\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return dt\r\n  }\r\n\r\n}\r\n\r\nexport default CardBartChart","import React, { Component } from 'react'\r\n\r\nclass Statistic extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"padding-10px background-white border-bottom\">\r\n          <div className=\"txt-site txt-bold text-main txt-12\">Statistik</div>\r\n        </div>\r\n        <div className=\"padding-15px display-flex-column\">\r\n          <div className=\"margin-10px txt-site txt-primary txt-12\">\r\n              Customers\r\n          </div>\r\n          <div className=\"margin-15px txt-site txt-main txt-40 txt-bold\">\r\n              36,254\r\n          </div>\r\n          <div className=\"margin-top-10px txt-site txt-green txt-11\">\r\n              <i className=\"fa fa-lw fa-arrow-up\"></i>\r\n              5.27%\r\n          </div>\r\n          <div className=\"margin-bottom-10px txt-site txt-primary txt-11\">\r\n              Since last month\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Statistic","import React, { Component } from 'react'\r\nimport CardPercentage from '../../cards/Percentage'\r\nimport CardPiechart from '../../cards/Piechart'\r\nimport CardLinechart from '../../cards/Linechart'\r\nimport CardBarchart from '../../cards/Barchart'\r\nimport CardStatistic from '../../cards/Statistic'\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {}\r\n    }\r\n\r\n    cardPercentage = (val) => {\r\n        let dt = []\r\n\r\n        for (let index = 0; index < val; index++) {\r\n            dt.push(\r\n                <CardPercentage key={index}></CardPercentage>\r\n            )\r\n        }\r\n\r\n        return dt\r\n    }\r\n\r\n    cardLinechart = (val) => {\r\n        let dt = []\r\n\r\n        for (let index = 0; index < val; index++) {\r\n            dt.push(\r\n                <CardLinechart key={index}></CardLinechart>\r\n            )\r\n        }\r\n\r\n        return dt\r\n    }\r\n\r\n    cardBarchart = (val) => {\r\n        let dt = []\r\n\r\n        for (let index = 0; index < val; index++) {\r\n            dt.push(\r\n                <CardBarchart key={index}></CardBarchart>\r\n            )\r\n        }\r\n\r\n        return dt\r\n    }\r\n\r\n    cardPie = (val) => {\r\n        let dt = []\r\n\r\n        for (let index = 0; index < val; index++) {\r\n            dt.push(\r\n                <CardPiechart key={index}></CardPiechart>\r\n            )\r\n        }\r\n\r\n        return dt\r\n    }\r\n\r\n    cardStatistic = (val) => {\r\n        let dt = []\r\n\r\n        for (let index = 0; index < val; index++) {\r\n            dt.push(\r\n                <CardStatistic key={index}></CardStatistic>\r\n            )\r\n        }\r\n\r\n        return dt\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"main-content\">\r\n                <div className=\"display-flex-mobile\">\r\n                    {this.cardStatistic(2)}\r\n                    {this.cardPercentage(2)}\r\n                </div>\r\n                <div className=\"display-flex-mobile\">\r\n                    {this.cardPie(3)}\r\n                </div>\r\n                <div className=\"display-flex-mobile\">\r\n                    {this.cardBarchart(1)}\r\n                    {this.cardLinechart(1)}\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Home","import React, { Component } from 'react'\r\nimport { NavLink } from \"react-router-dom\"\r\nimport AuthAction from '../../redux/AuthRedux'\r\nimport { connect } from 'react-redux'\r\n\r\nvar opActivePopup = 'app-small-profile active'\r\nvar clActivePopup = 'app-small-profile'\r\n\r\nvar opContentPopup = 'app-menu-popup'\r\nvar clContentPopup = 'app-menu-popup app-menu-popup-hide'\r\n\r\nclass Profile extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      profileClass: clContentPopup,\r\n      smallProfileClass: clActivePopup\r\n    }\r\n  }\r\n\r\n  opProfile = () => {\r\n    if (this.state.profileClass === clContentPopup) {\r\n      this.setState({ profileClass: opContentPopup })\r\n      this.setState({ smallProfileClass: opActivePopup })\r\n    } else {\r\n      this.setState({ profileClass: clContentPopup })\r\n      this.setState({ smallProfileClass: clActivePopup })\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.props.authLogout()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div\r\n          onClick={this.opProfile}\r\n          className={this.state.smallProfileClass}\r\n          style={{ float: 'right' }}>\r\n          <div className=\"asp-col-1\">\r\n            <div className=\"image image-30px background-green\">\r\n              <img width=\"100%\" height=\"100%\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"asp-col-2\">\r\n            <div className=\"ttl\">\r\n              <i className=\"fa fa-lw fa-angle-down txt-site txt-primary txt-16\" />\r\n            </div>\r\n            {/*<div className=\"ttl\">\r\n              <div className=\"txt-site txt-main txt-12 txt-cap\">\r\n              \tAdmin\r\n              </div>\r\n            </div>*/}\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          style={{ top: \"45px\", width: \"200px\" }}\r\n          className={this.state.profileClass}>\r\n          <ul>\r\n            <NavLink to=\"/\">\r\n              <li onClick={this.logout.bind(this)}>\r\n                <i className=\"icn fa fa-lw fa-user\"></i>\r\n                Profile\r\n              </li>\r\n            </NavLink>\r\n            <NavLink to=\"/\">\r\n              <li onClick={this.logout.bind(this)}>\r\n                <i className=\"icn fa fa-lw fa-power-off\"></i>\r\n                Logout\r\n              </li>\r\n            </NavLink>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    authLogout: () => dispatch(AuthAction.authLogout())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","import React, { Component } from \"react\";\r\n\r\nconst payloadDefault = {\r\n    \"id_user\": 1,\r\n    \"judul\": \"\",\r\n\t\"isi\": \"\",\r\n}\r\n\r\nclass FormRoom extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: props.data ? props.data :\r\n            {\r\n                ...payloadDefault\r\n            }\r\n        }\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     console.log(this.props.data)\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"app-popup app-popup-show\"}>\r\n                <div className=\"padding-top-20px\" />\r\n                <div className=\"popup-content background-white border-radius\">\r\n                    <div className=\"border-bottom padding-15px grid grid-2x\">\r\n                        <div className=\"col-1\">\r\n                            <div className=\"txt-site txt-12 txt-bold post-center\">\r\n                                {this.props.type === \"create\"\r\n                                    ? \"Tambah - Bacaan\"\r\n                                    : this.props.type === \"update\"\r\n                                        ? \"Edit - Bacaan\"\r\n                                        : \"View - Bacaan\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2 content-right\">\r\n                            <button\r\n                                className=\"btn btn-circle btn-grey\"\r\n                                onClick={this.props.onClickClose}\r\n                            >\r\n                                <i className=\"fa fa-lg fa-times\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <form action=\"#\"\r\n                        onSubmit={(e) => {\r\n                            e.preventDefault()\r\n                            this.props.onClickSave(this.state.data)}\r\n                        }\r\n                    >\r\n                        <div className=\"border-bottom padding-15px grid-mobile-none gap-20px\">\r\n                            <div className=\"margin-bottom-15px\">\r\n                                <div className=\"margin-5px\">\r\n                                    <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                        Judul\r\n                                    </span>\r\n                                </div>\r\n                                <input\r\n                                    readOnly={this.props.type === \"view\" ? true : false}\r\n                                    style={\r\n                                        this.props.type === \"view\"\r\n                                            ? { backgroundColor: \"#E6E6E6\" }\r\n                                            : null\r\n                                    }\r\n                                    type=\"text\"\r\n                                    className=\"txt txt-sekunder-color\"\r\n                                    placeholder=\"Judul\"\r\n                                    required\r\n                                    value={this.state.data.judul}\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            data: {\r\n                                                ...this.state.data,\r\n                                                judul: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"margin-bottom-15px\">\r\n                                <div className=\"margin-5px\">\r\n                                    <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                        isi\r\n                                    </span>\r\n                                </div>\r\n                                <textarea\r\n                                    readOnly={this.props.type === \"view\" ? true : false}\r\n                                    style={\r\n                                        this.props.type === \"view\"\r\n                                            ? { backgroundColor: \"#E6E6E6\" }\r\n                                            : null\r\n                                    }\r\n                                    type=\"text\"\r\n                                    className=\"txt txt-sekunder-color edit-text\"\r\n                                    placeholder=\"Isi\"\r\n                                    required\r\n                                    value={this.state.data.isi}\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            data: {\r\n                                                ...this.state.data,\r\n                                                isi: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"padding-15px\">\r\n                            <div className=\"grid grid-2x\">\r\n                                <div className=\"col-1\" />\r\n                                <div className=\"col-2 content-right\">\r\n                                    {this.props.type !== \"view\" ? (\r\n                                        <button\r\n                                            style={{ marginLeft: \"15px\" }}\r\n                                            className=\"btn btn-primary\"\r\n                                            type=\"submit\"\r\n                                        >\r\n                                        <span>SAVE</span>\r\n                                        </button>\r\n                                    ) : null}\r\n                                    <button\r\n                                        style={{ marginLeft: \"15px\" }}\r\n                                        className=\"btn btn-primary\"\r\n                                        type=\"button\"\r\n                                        onClick={this.props.onClickClose}\r\n                                    >\r\n                                        <span>CLOSE</span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"padding-bottom-20px\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FormRoom;","import apisauce from 'apisauce'\r\n\r\nconst create = (type = '') => {\r\n\r\n    let api\r\n    const access_token = localStorage.getItem(\"access_token\") || \"\"\r\n    \r\n    switch(type) {\r\n        // auth\r\n        case 'USERAUTH':\r\n            api = apisauce.create({\r\n                baseURL: 'https://cors-anywhere.herokuapp.com/http://api-kem.asmilahotel.space',\r\n                timeout: 80000,\r\n            })\r\n            break\r\n\r\n        case 'MAIN':\r\n            api = apisauce.create({\r\n                baseURL: 'https://cors-anywhere.herokuapp.com/http://api-kem.asmilahotel.space',\r\n                timeout: 80000,\r\n            })\r\n            break\r\n        default:\r\n            break\r\n    }\r\n\r\n    const getAllPagingLatihan = body => api.post('/getLatihan', body)\r\n    const getFullBacaan = body => api.post('/getBacaan', body)\r\n\r\n    // bacaan\r\n    const getAllPagingBacaan = body => api.post('/getBacaans', body)\r\n    const createBacaan = body => api.post('/createBacaan', body)\r\n    const updateBacaan = body => api.post('/updateBacaan', body)\r\n    const deleteBacaan = body => api.post('/deleteBacaan', body)\r\n\r\n    // soal\r\n    const getListSoalByBacaanId = body => api.post('/getListSoalByBacaanId', body)\r\n    const createSoal = body => api.post('/createSoal', body)\r\n    const updateSoal = body => api.post('/updateSoal', body)\r\n    const deleteSoal = body => api.post('/deleteSoal', body)\r\n\r\n    // siswa\r\n    const getAllPagingSiswa = body => api.get('/getSiswa', body)\r\n    const createSiswa = body => api.post('/createSiswa', body)\r\n    const updateSiswa = body => api.post('/updateSiswa', body)\r\n    const deleteSiswa = body => api.post('/deleteSiswa', body)\r\n\r\n    // KEM\r\n    const getAllPagingKem = body => api.get('/getAllKem', body)\r\n    const getChartsKem = body => api.post('/getChartsKem', body)\r\n\r\n    // auth\r\n    const userAuth = body => api.post('/login', body)\r\n\r\n    const getUserDetail = body => api.get('/employee/isLogin', {}, {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + body\r\n        }\r\n    })\r\n\r\n    return {\r\n        // bacaan\r\n        getAllPagingBacaan,\r\n        createBacaan,\r\n        updateBacaan,\r\n        deleteBacaan,\r\n\r\n        // soal\r\n        getListSoalByBacaanId,\r\n        createSoal,\r\n        updateSoal,\r\n        deleteSoal,\r\n\r\n        // kem\r\n        getChartsKem,\r\n        getAllPagingKem,\r\n\r\n        getAllPagingLatihan,\r\n        getFullBacaan,\r\n\r\n        // siswa\r\n        getAllPagingSiswa,\r\n        createSiswa,\r\n        updateSiswa,\r\n        deleteSiswa,\r\n\r\n        getUserDetail,\r\n        userAuth,\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default { create }","import React, { Component } from \"react\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport MUIDataTable from \"mui-datatables-bitozen\";\r\nimport api from \"../../services/Api\";\r\n\r\nlet ct = require(\"../../modules/custom/customTable\")\r\n// const options = ct.customOptions();\r\n\r\nlet defaulPayload = {\r\n\t\"id_user\": \"1\",\r\n\t\"id_bacaans\": 0,\r\n\t\"data\": [\r\n\t\t{\r\n\t\t\t\"soal\": \"aku kenapa\",\r\n\t\t\t\"indexJawabanBenar\": 0,\r\n\t\t\t\"jawaban\": [\r\n\t\t\t\t\"Aku gatau\",\r\n\t\t\t\t\"Kamu gatau\",\r\n\t\t\t\t\"Mereka gatau\",\r\n\t\t\t\t\"Kita sama sama gatau\"\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}\r\n\r\nclass PageQA extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id_bacaan: props.idBacaan,\r\n            linearProgress: false,\r\n            visibleJawaban: false,\r\n            data: {\r\n                ...defaulPayload,\r\n                \"id_bacaans\": props.id_bacaan\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    async getData(){\r\n        this.linearProgress()\r\n\r\n        let param = {\r\n            \"id_user\": 1,\r\n            \"id_bacaan\": this.props.id_bacaan\r\n        }\r\n\r\n        let response = await api.create('MAIN').getListSoalByBacaanId(param)\r\n        if(response.status === 200 && response.data.status === 'S'){\r\n            let dataTable = response.data.data.map((value, index) => {\r\n                const { id, soal, id_jawaban_benar } = value;\r\n                return [\r\n                    index += 1,\r\n                    id,\r\n                    soal,\r\n                    id_jawaban_benar\r\n                ]\r\n            })\r\n            this.setState({\r\n                rawData: response.data.data,\r\n                dataTable\r\n            })\r\n            this.linearProgress()\r\n        } else {\r\n            this.linearProgress()\r\n        }\r\n        console.log(response)\r\n    }\r\n\r\n    linearProgress = () => {\r\n        this.setState({ linearProgress: !this.state.linearProgress })\r\n    }\r\n\r\n    openJawaban = (index = null) => {\r\n        let dataTableJawaban = []\r\n        if (index !== null) {\r\n            let soal = this.state.rawData[index]\r\n            let jawaban = soal.jawaban\r\n            dataTableJawaban = jawaban.map((value, index) => {\r\n                const {id, jawaban} = value\r\n                return [\r\n                    index += 1,\r\n                    id,\r\n                    jawaban\r\n                ]\r\n            })\r\n        }\r\n        this.setState({ visibleJawaban: !this.state.visibleJawaban, dataTableJawaban })\r\n    }\r\n\r\n    getMuiTheme = () => createMuiTheme(ct.customTable());\r\n    options = ct.customOptions()\r\n\r\n    renderMain() {\r\n        let columns = [\r\n            \"No\",\r\n            \"ID\",\r\n            \"Soal\",\r\n            \"Jawaban Benar\",\r\n            {\r\n                name: \"Action\",\r\n                options: {\r\n                    customBodyRender: (val, tableMeta) => {\r\n                        return (\r\n                            <div style={{width: '200px'}} className=\"display-flex-number\">\r\n                                <button\r\n                                    className=\"btn btn-small btn-primary btn-radius\"\r\n                                    style={{ marginRight: 5 }}\r\n                                    onClick={() => this.openJawaban(tableMeta.rowIndex)}\r\n                                >\r\n                                    Lihat Jawaban\r\n                                </button>\r\n                                <button\r\n                                    className=\"btn btn-primary btn-small-circle\"\r\n                                    style={{ marginRight: 5 }}\r\n                                    onClick={() => alert(tableMeta.rowIndex)}\r\n                                >\r\n                                    <i className=\"fa fa-lw fa-pencil-alt\" />\r\n                                </button>\r\n                                <button\r\n                                    className=\"btn btn-primary btn-small-circle\"\r\n                                    onClick={() => alert(tableMeta.rowData[1])}>\r\n                                    <i className=\"fa fa-lw fa-trash-alt\" />\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n        return (\r\n            <div className={\"app-popup app-popup-show\"}>\r\n                <div className=\"padding-top-20px\" />\r\n                <div className=\"popup-content background-white border-radius\">\r\n                    <div className=\"border-bottom padding-15px grid grid-2x\">\r\n                        <div className=\"col-1\">\r\n                            <div className=\"txt-site txt-12 txt-bold txt-main post-center\">\r\n                                Daftar Soal\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2 content-right\">\r\n                            <button\r\n                                className=\"btn btn-circle btn-grey\"\r\n                                onClick={this.props.onClickClose}\r\n                            >\r\n                                <i className=\"fa fa-lg fa-times\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"border-bottom padding-15px\">\r\n                        <MuiThemeProvider theme={this.getMuiTheme()}>\r\n                            <MUIDataTable\r\n                                title={\"Daftar Soal\"}\r\n                                data={this.state.dataTable}\r\n                                columns={columns}\r\n                                options={this.options}\r\n                                buttonCreate={true}\r\n                                linearProgress={this.state.linearProgress}\r\n                                onCreate={() => {alert('ahuy')}}\r\n                            />\r\n                        </MuiThemeProvider>\r\n                    </div>\r\n\r\n                    <div className=\"padding-15px\">\r\n                        <div className=\"grid grid-2x\">\r\n                            <div className=\"col-1\" />\r\n                            <div className=\"col-2 content-right\">\r\n                                <button\r\n                                    style={{ marginLeft: \"15px\" }}\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"button\"\r\n                                    onClick={this.props.onClickClose}\r\n                                >\r\n                                    <span>CLOSE</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"padding-bottom-20px\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderJawaban() {\r\n        let columns = [\r\n            \"No\",\r\n            \"ID\",\r\n            \"Jawaban\",\r\n            {\r\n                name: \"Action\",\r\n                options: {\r\n                    customBodyRender: (val, tableMeta) => {\r\n                        return (\r\n                            <div className=\"display-flex-number\">\r\n                                <button\r\n                                    className=\"btn btn-primary btn-small-circle\"\r\n                                    style={{ marginRight: 5 }}\r\n                                    onClick={() => alert(tableMeta.rowIndex)}\r\n                                >\r\n                                    <i className=\"fa fa-lw fa-pencil-alt\" />\r\n                                </button>\r\n                                <button\r\n                                    className=\"btn btn-primary btn-small-circle\"\r\n                                    onClick={() => alert(tableMeta.rowData[1])}>\r\n                                    <i className=\"fa fa-lw fa-trash-alt\" />\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n        return (\r\n            <div className={\"app-popup app-popup-show\"}>\r\n                <div className=\"padding-top-20px\" />\r\n                <div className=\"popup-content background-white border-radius\">\r\n                    <div className=\"border-bottom padding-15px grid grid-2x\">\r\n                        <div className=\"col-1\">\r\n                            <div className=\"txt-site txt-12 txt-bold txt-main post-center\">\r\n                                Daftar Jawaban\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2 content-right\">\r\n                            <button\r\n                                className=\"btn btn-circle btn-grey\"\r\n                                onClick={() => this.openJawaban()}\r\n                            >\r\n                                <i className=\"fa fa-lg fa-times\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"border-bottom padding-15px\">\r\n                        <MuiThemeProvider theme={this.getMuiTheme()}>\r\n                            <MUIDataTable\r\n                                title={\"Daftar Jawaban\"}\r\n                                data={this.state.dataTableJawaban}\r\n                                columns={columns}\r\n                                options={this.options}\r\n                                buttonCreate={true}\r\n                                linearProgress={this.state.linearProgress}\r\n                                onCreate={() => {alert('ahuy')}}\r\n                            />\r\n                        </MuiThemeProvider>\r\n                    </div>\r\n\r\n                    <div className=\"padding-15px\">\r\n                        <div className=\"grid grid-2x\">\r\n                            <div className=\"col-1\" />\r\n                            <div className=\"col-2 content-right\">\r\n                                <button\r\n                                    style={{ marginLeft: \"15px\" }}\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"button\"\r\n                                    onClick={() => this.openJawaban()}\r\n                                >\r\n                                    <span>CLOSE</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"padding-bottom-20px\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                { this.renderMain() }\r\n\r\n                { this.state.visibleJawaban && (\r\n                    this.renderJawaban()\r\n                ) }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default PageQA;","import React, { Component } from \"react\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport MUIDataTable from \"mui-datatables-bitozen\";\r\nimport FormTexts from \"./formTexts\";\r\nimport FormQa from \"./formQa\";\r\nimport api from \"../../services/Api\";\r\n\r\nlet ct = require(\"../../modules/custom/customTable\")\r\nconst options = ct.customOptions();\r\n\r\nclass Texts extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            clEditAble: '',\r\n            editAble: false,\r\n            rawData: [],\r\n            dataTable: [],\r\n            createVisible: false,\r\n            editVisible: false,\r\n            formQaVisible: false,\r\n            linearProgress: false,\r\n            table_limit: 5,\r\n            table_page: 0,\r\n            table_query: \"\",\r\n            textsCount: 0,\r\n        }\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    opEditAble = () => {\r\n        if (this.state.editAble === false) {\r\n            this.setState({\r\n                clEditAble: 'edit-able',\r\n                editAble: true,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                clEditAble: '',\r\n                editAble: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    openFormQa = (index = null) => {\r\n        this.setState({ formQaVisible: !this.state.formQaVisible, selectedIndex: index })\r\n    }\r\n\r\n    openCreateForm = () => {\r\n        this.setState({ createVisible: !this.state.createVisible })\r\n    }\r\n\r\n    openEditForm = (index = null) => {\r\n        this.setState({ editVisible: !this.state.editVisible, selectedIndex: index })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    linearProgress = () => {\r\n        this.setState({ linearProgress: !this.state.linearProgress })\r\n    }\r\n\r\n    handleSubmit = async (data) => {\r\n        let payload = data\r\n        let response = await api.create('MAIN').createBacaan(payload)\r\n        if (response.ok && response.status === 200) {\r\n            if (response.data.status === 'S') {\r\n                alert(response.data.message)\r\n                this.openCreateForm()\r\n                this.getData()\r\n            } else {\r\n                alert(response.data.message)\r\n            }\r\n        } else {\r\n            if(response.data && response.data.message) alert(response.data.message)\r\n        }\r\n    }\r\n\r\n    handleUpdate = async (data) => {\r\n        var a = window.confirm('ubah data ini?')\r\n        if (a) {\r\n            let payload = {\r\n                \"id_user\": 1,\r\n                \"id_bacaan\": data.id,\r\n                \"judul\": data.judul,\r\n                \"isi\": data.isi\r\n            }\r\n            console.info('payload ==> ', payload)\r\n            let response = await api.create('MAIN').updateBacaan(payload)\r\n            if (response.ok && response.status === 200) {\r\n                if (response.data.status === 'S') {\r\n                    alert(response.data.message)\r\n                    this.openEditForm()\r\n                    this.getData()\r\n                } else {\r\n                    alert(response.data.message)\r\n                }\r\n            } else {\r\n                if(response.data && response.data.message) alert(response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    handleDelete = async (id) => {\r\n        var a = window.confirm('hapus data ini?')\r\n        if (a) {\r\n            let payload = {\r\n                \"id_user\": 1,\r\n                \"id_bacaan\": id\r\n            }\r\n            let response = await api.create('MAIN').deleteBacaan(payload)\r\n            if (response.ok && response.status === 200) {\r\n                if (response.data.status === 'S') {\r\n                    alert(response.data.message)\r\n                    this.getData()\r\n                } else {\r\n                    alert(response.data.message)\r\n                }\r\n            } else {\r\n                if (response.data && response.data.message) alert(response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    getMuiTheme = () => createMuiTheme(ct.customTable());\r\n\r\n    options = ct.customOptions()\r\n\r\n    async getData(){\r\n        this.linearProgress()\r\n\r\n        let param = {\r\n            \"id_user\": 1\r\n        }\r\n\r\n        let response = await api.create('MAIN').getAllPagingBacaan(param)\r\n        if(response.status === 200 && response.data.status === 'S'){\r\n            let dataTable = response.data.data.map((value, index) => {\r\n                const { id, judul, jumlah_kata } = value;\r\n                return [\r\n                    index += (1 + (this.state.table_page * this.state.table_limit)),\r\n                    id,\r\n                    judul,\r\n                    jumlah_kata\r\n                ]\r\n            })\r\n            this.setState({\r\n                rawData: response.data.data,\r\n                dataTable\r\n            })\r\n            this.linearProgress()\r\n        } else {\r\n            this.linearProgress()\r\n        }\r\n        // this.getCountData()\r\n        // console.log(response)\r\n    }\r\n\r\n    async getCountData() {\r\n        let param = {\r\n            id_user: '1'\r\n        }\r\n\r\n        let response = await api.create('LATIHAN').getAllPagingLatihan(param)\r\n        if (response.status === 200) {\r\n            this.setState({\r\n                textsCount: response.data.length\r\n            })\r\n        }\r\n    }\r\n\r\n    columns = [\r\n        \"No\",\r\n        \"ID\",\r\n        \"Judul\",\r\n        \"Jumlah Kata\",\r\n        {\r\n            name: \"Action\",\r\n            options: {\r\n                customBodyRender: (val, tableMeta) => {\r\n                    return (\r\n                        <div style={{width: '240px'}} className=\"display-flex-number\">\r\n                            <button\r\n                                className=\"btn btn-small btn-primary btn-radius\"\r\n                                style={{ marginRight: 5 }}\r\n                                onClick={() => {\r\n                                    this.openFormQa(tableMeta.rowData[1])\r\n                                }}\r\n                            >\r\n                                Lihat Soal & Jawaban\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-primary btn-small-circle\"\r\n                                style={{ marginRight: 5 }}\r\n                                onClick={() => this.openEditForm(tableMeta.rowIndex)}\r\n                            >\r\n                                <i className=\"fa fa-lw fa-pencil-alt\" />\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-primary btn-small-circle\"\r\n                                onClick={() => this.handleDelete(tableMeta.rowData[1])}>\r\n                                <i className=\"fa fa-lw fa-trash-alt\" />\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    ]\r\n\r\n    render() {\r\n\r\n        let { textsCount, table_query } = this.state\r\n        let tableOptions = {\r\n            ...options,\r\n            serverSide: true,\r\n            count: textsCount,\r\n            searchText: table_query,\r\n            onTableChange: (action, tableState) => {\r\n                switch (action) {\r\n                    case 'changePage':\r\n                        this.setState({ table_page: tableState.page })\r\n                        this.getData(tableState.rowsPerPage, tableState.page)\r\n                        break;\r\n                    case 'changeRowsPerPage':\r\n                        this.setState({ table_limit: tableState.rowsPerPage })\r\n                        this.getData(tableState.rowsPerPage, tableState.page)\r\n                        break;\r\n                    case 'search':\r\n                        let searchText = tableState.searchText ? tableState.searchText: \"\"\r\n                        this.setState({ table_query: searchText }, () => {\r\n                            this.getData(tableState.rowsPerPage, tableState.page)\r\n                        })\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"main-content\">\r\n                <div className=\"padding-5px\">\r\n                    <MuiThemeProvider theme={this.getMuiTheme()}>\r\n                        <MUIDataTable\r\n                            title={\"Daftar Bacaan\"}\r\n                            key={textsCount}\r\n                            data={this.state.dataTable}\r\n                            columns={this.columns}\r\n                            options={tableOptions}\r\n                            buttonCreate={true}\r\n                            linearProgress={this.state.linearProgress}\r\n                            onCreate={this.openCreateForm.bind(this)}\r\n                        />\r\n                    </MuiThemeProvider>\r\n                </div>\r\n                {this.state.createVisible && (\r\n                    <FormTexts\r\n                        type={\"create\"}\r\n                        onClickClose={this.openCreateForm}\r\n                        onClickSave={this.handleSubmit.bind(this)}\r\n                    />\r\n                )}\r\n                {this.state.editVisible && (\r\n                    <FormTexts\r\n                        type={\"update\"}\r\n                        data={this.state.rawData[this.state.selectedIndex]}\r\n                        onClickClose={this.openEditForm}\r\n                        onClickSave={this.handleUpdate.bind(this)}\r\n                    />\r\n                )}\r\n                {this.state.formQaVisible && (\r\n                    <FormQa\r\n                        id_bacaan={this.state.selectedIndex}\r\n                        onClickClose={this.openFormQa} />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Texts","import React, { Component } from \"react\"\r\n// import CalendarPicker from '../../modules/popup/Calendar'\r\n// import Dropzone from 'react-dropzone'\r\n// import Loader from 'react-loader-spinner'\r\n// import { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\"\r\n// import MUIDataTable from \"mui-datatables-bitozen\"\r\n// import api from \"../../services/Api\"\r\n// import M from 'moment'\r\n\r\nlet ct = require(\"../../modules/custom/customTable\")\r\n\r\nlet defaultPayload = {\r\n\t\"nisn\": 0,\r\n\t\"password\": \"\",\r\n\t\"nama\": \"\",\r\n\t\"kelas\": \"\",\r\n\t\"email\": \"\",\r\n\t\"sekolah\": \"\"\r\n}\r\n\r\nclass FormEmployee extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: props.payload \r\n                ? {\r\n                    ...props.payload,\r\n                }\r\n                : defaultPayload,\r\n        }\r\n    }\r\n\r\n    renderForm() {\r\n        return (\r\n            <div className={\"app-popup app-popup-show\"}>\r\n                <div className=\"padding-top-20px\" />\r\n                <div className=\"popup-content-small background-white border-radius\">\r\n                    <div className=\"border-bottom padding-15px grid grid-2x\">\r\n                        <div className=\"col-1\">\r\n                            <div className=\"txt-site txt-12 txt-bold post-center\">\r\n                                {this.props.type === \"create\"\r\n                                    ? \"Tambah - Siswa\"\r\n                                    : this.props.type === \"update\"\r\n                                        ? \"Edit - Siswa\"\r\n                                        : \"View - Siswa\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2 content-right\">\r\n                            <button\r\n                                className=\"btn btn-circle btn-grey\"\r\n                                onClick={this.props.onClickClose}\r\n                            >\r\n                                <i className=\"fa fa-lg fa-times\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <form action=\"#\"\r\n                        onSubmit={(e) => {\r\n                            e.preventDefault()\r\n                            this.props.onClickSave(this.state.data)}\r\n                        }\r\n                    >\r\n                        <div className=\"border-bottom padding-15px grid-mobile-none gap-20px\">\r\n                            <div className=\"margin-bottom-15px\">\r\n                                <div className=\"margin-5px\">\r\n                                    <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                        NISN\r\n                                    </span>\r\n                                </div>\r\n                                <input\r\n                                    readOnly={this.props.type === \"view\" ? true : false}\r\n                                    style={\r\n                                        this.props.type === \"view\"\r\n                                            ? { backgroundColor: \"#E6E6E6\" }\r\n                                            : null\r\n                                    }\r\n                                    type=\"text\"\r\n                                    className=\"txt txt-sekunder-color\"\r\n                                    placeholder=\"NISN\"\r\n                                    required\r\n                                    value={this.state.data.nisn}\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            data: {\r\n                                                ...this.state.data,\r\n                                                nisn: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"margin-bottom-15px\">\r\n                                <div className=\"margin-5px\">\r\n                                    <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                        Nama Lengkap\r\n                                    </span>\r\n                                </div>\r\n                                <input\r\n                                    readOnly={this.props.type === \"view\" ? true : false}\r\n                                    style={\r\n                                        this.props.type === \"view\"\r\n                                            ? { backgroundColor: \"#E6E6E6\" }\r\n                                            : null\r\n                                    }\r\n                                    type=\"text\"\r\n                                    className=\"txt txt-sekunder-color\"\r\n                                    placeholder=\"Nama Lengkap\"\r\n                                    required\r\n                                    value={this.state.data.nama}\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            data: {\r\n                                                ...this.state.data,\r\n                                                nama: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"margin-bottom-15px\">\r\n                                <div className=\"margin-5px\">\r\n                                    <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                        Kelas\r\n                                    </span>\r\n                                </div>\r\n                                <input\r\n                                    readOnly={this.props.type === \"view\" ? true : false}\r\n                                    style={\r\n                                        this.props.type === \"view\"\r\n                                            ? { backgroundColor: \"#E6E6E6\" }\r\n                                            : null\r\n                                    }\r\n                                    type=\"text\"\r\n                                    className=\"txt txt-sekunder-color\"\r\n                                    placeholder=\"Kelas\"\r\n                                    required\r\n                                    value={this.state.data.kelas}\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            data: {\r\n                                                ...this.state.data,\r\n                                                kelas: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"margin-bottom-15px\">\r\n                                <div className=\"margin-5px\">\r\n                                    <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                        sekolah\r\n                                    </span>\r\n                                </div>\r\n                                <input\r\n                                    readOnly={this.props.type === \"view\" ? true : false}\r\n                                    style={\r\n                                        this.props.type === \"view\"\r\n                                            ? { backgroundColor: \"#E6E6E6\" }\r\n                                            : null\r\n                                    }\r\n                                    type=\"text\"\r\n                                    className=\"txt txt-sekunder-color\"\r\n                                    placeholder=\"sekolah\"\r\n                                    required\r\n                                    value={this.state.data.sekolah}\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            data: {\r\n                                                ...this.state.data,\r\n                                                sekolah: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"margin-bottom-15px\">\r\n                                <div className=\"margin-5px\">\r\n                                    <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                        Email\r\n                                    </span>\r\n                                </div>\r\n                                <input\r\n                                    readOnly={this.props.type === \"view\" ? true : false}\r\n                                    style={\r\n                                        this.props.type === \"view\"\r\n                                            ? { backgroundColor: \"#E6E6E6\" }\r\n                                            : null\r\n                                    }\r\n                                    type=\"email\"\r\n                                    className=\"txt txt-sekunder-color\"\r\n                                    placeholder=\"Email\"\r\n                                    required\r\n                                    value={this.state.data.email}\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            data: {\r\n                                                ...this.state.data,\r\n                                                email: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"margin-bottom-15px\">\r\n                                <div className=\"margin-5px\">\r\n                                    <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                        Password\r\n                                    </span>\r\n                                </div>\r\n                                <input\r\n                                    readOnly={this.props.type === \"view\" ? true : false}\r\n                                    style={\r\n                                        this.props.type === \"view\"\r\n                                            ? { backgroundColor: \"#E6E6E6\" }\r\n                                            : null\r\n                                    }\r\n                                    type=\"password\"\r\n                                    className=\"txt txt-sekunder-color\"\r\n                                    placeholder=\"Password\"\r\n                                    required\r\n                                    value={this.state.data.password}\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            data: {\r\n                                                ...this.state.data,\r\n                                                password: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"padding-15px\">\r\n                            <div className=\"grid grid-2x\">\r\n                                <div className=\"col-1\" />\r\n                                <div className=\"col-2 content-right\">\r\n                                    {this.props.type !== \"view\" ? (\r\n                                        <button\r\n                                            style={{ marginLeft: \"15px\" }}\r\n                                            className=\"btn btn-primary\"\r\n                                            type=\"submit\"\r\n                                        >\r\n                                        <span>SAVE</span>\r\n                                        </button>\r\n                                    ) : null}\r\n                                    <button\r\n                                        style={{ marginLeft: \"15px\" }}\r\n                                        className=\"btn btn-primary\"\r\n                                        type=\"button\"\r\n                                        onClick={this.props.onClickClose}\r\n                                    >\r\n                                        <span>CLOSE</span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"padding-bottom-20px\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                { this.renderForm() }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormEmployee","import React, { Component } from \"react\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport MUIDataTable from \"mui-datatables-bitozen\";\r\nimport api from \"../../services/Api\";\r\n\r\nlet ct = require(\"../../modules/custom/customTable\")\r\n// const options = ct.customOptions();\r\n\r\nclass PageKem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id_bacaan: props.idBacaan,\r\n            linearProgress: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    async getData(){\r\n        this.linearProgress()\r\n\r\n        let param = {\r\n            \"id_user\": 1,\r\n            \"id_user\": this.props.id_user\r\n        }\r\n\r\n        let response = await api.create('MAIN').getChartsKem(param)\r\n        if(response.status === 200 && response.data.status === 'S'){\r\n            let dataTable = response.data.data.map((value, index) => {\r\n                const { nilai, judul } = value;\r\n                return [\r\n                    index += 1,\r\n                    nilai,\r\n                    judul,\r\n                ]\r\n            })\r\n            this.setState({\r\n                rawData: response.data.data,\r\n                dataTable\r\n            })\r\n            this.linearProgress()\r\n        } else {\r\n            this.linearProgress()\r\n        }\r\n        console.log(response)\r\n    }\r\n\r\n    linearProgress = () => {\r\n        this.setState({ linearProgress: !this.state.linearProgress })\r\n    }\r\n\r\n    getMuiTheme = () => createMuiTheme(ct.customTable());\r\n\r\n    options = ct.customOptions()\r\n\r\n    columns = [\r\n        \"No\",\r\n        \"Nilai\",\r\n        \"Judul\"\r\n    ]\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"app-popup app-popup-show\"}>\r\n                <div className=\"padding-top-20px\" />\r\n                <div className=\"popup-content background-white border-radius\">\r\n                    <div className=\"border-bottom padding-15px grid grid-2x\">\r\n                        <div className=\"col-1\">\r\n                            <div className=\"txt-site txt-12 txt-bold txt-main post-center\">\r\n                                Hasil Kem Per-siswa\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2 content-right\">\r\n                            <button\r\n                                className=\"btn btn-circle btn-grey\"\r\n                                onClick={this.props.onClickClose}\r\n                            >\r\n                                <i className=\"fa fa-lg fa-times\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"border-bottom padding-15px\">\r\n                        <MuiThemeProvider theme={this.getMuiTheme()}>\r\n                            <MUIDataTable\r\n                                title={\"Hasil Kem\"}\r\n                                data={this.state.dataTable}\r\n                                columns={this.columns}\r\n                                options={this.options}\r\n                                linearProgress={this.state.linearProgress}\r\n                                // buttonCreate={true}\r\n                                // onCreate={() => {alert('ahuy')}}\r\n                            />\r\n                        </MuiThemeProvider>\r\n                    </div>\r\n\r\n                    <div className=\"padding-15px\">\r\n                        <div className=\"grid grid-2x\">\r\n                            <div className=\"col-1\" />\r\n                            <div className=\"col-2 content-right\">\r\n                                <button\r\n                                    style={{ marginLeft: \"15px\" }}\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"button\"\r\n                                    onClick={this.props.onClickClose}\r\n                                >\r\n                                    <span>CLOSE</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"padding-bottom-20px\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default PageKem;","import React, { Component } from \"react\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport MUIDataTable from \"mui-datatables-bitozen\";\r\n// import PopUp from \"../../pages/PopUpAlert\";\r\nimport api from \"../../services/Api\";\r\nimport FormStudents from \"./formStudents\";\r\nimport FormKem from \"./formKem\";\r\n// import M from 'moment';\r\n\r\nlet ct = require(\"../../modules/custom/customTable\")\r\n\r\nclass Students extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            rawData: [],\r\n            dataTable: [],\r\n            rawDataPosition: [],\r\n            dataTablePosition: [],\r\n            deletePopUpVisible: false,\r\n            createVisible: false,\r\n            editVisible: false,\r\n            deletePopUpVisible: false,\r\n            linearProgress: false,\r\n            formKemVisible: false,\r\n            selectedIndex: 0,\r\n            limit: 5,\r\n            number: 0,\r\n            table_query: \"\",\r\n            positionCount: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(this.state.limit, this.state.number)\r\n    }\r\n\r\n    linearProgress = () => {\r\n        this.setState({ linearProgress: !this.state.linearProgress })\r\n    }\r\n\r\n    async getCountData() {\r\n\r\n        let param = {\r\n            \"id_user\": 1\r\n        }\r\n\r\n        let response = await api.create('MAIN').getAllPagingStudents(param)\r\n        if (response.status === 200) {\r\n            this.setState({\r\n                positionCount: response.data.length\r\n            })\r\n        }\r\n\r\n        console.log(response)\r\n    }\r\n\r\n    async getData(limit, number) {\r\n        this.linearProgress()\r\n\r\n        let params = {\r\n            \"id_user\": 1\r\n        }\r\n\r\n        let response = await api.create('MAIN').getAllPagingSiswa(params)\r\n        if (response.status === 200 && response.data.status === 'S') {\r\n            let dataTable = response.data.data.map((value, index) => {\r\n                let {id, nisn, username, nama, kelas, email, sekolah, id_avatar} = value\r\n                return [\r\n                    index += 1,\r\n                    id, \r\n                    nisn,\r\n                    username,\r\n                    nama,\r\n                    kelas,\r\n                    email,\r\n                    sekolah, \r\n                    id_avatar\r\n                ]\r\n            })\r\n            this.setState({\r\n                rawData: response.data.data,\r\n                dataTable\r\n            })\r\n            this.linearProgress()\r\n        } else {\r\n            if (response.data && response.data.message) alert(response.data.message)\r\n            this.linearProgress()\r\n        }\r\n    }\r\n\r\n    handleSubmit = async (data) => {\r\n        let payload = {\r\n            ...data\r\n        }\r\n        let response = await api.create('MAIN').createSiswa(payload)\r\n        if (response.ok && response.status === 200) {\r\n            this.openCreateForm()\r\n            this.getData(this.state.limit, this.state.number)\r\n        } else {\r\n            if (response.data && response.data.message) alert(response.data.message)\r\n        }\r\n        console.log(response)\r\n    }\r\n\r\n    handleUpdate = async (data) => {\r\n        var a = window.confirm('ubah data ini?')\r\n        if (a) {\r\n            let payload = {\r\n                ...data,\r\n                \"id_user\": 1,\r\n                \"id_siswa\": this.state.rawData[this.state.selectedIndex].id\r\n            }\r\n            let response = await api.create('MAIN').updateSiswa(payload)\r\n            if (response.ok && response.status === 200) {\r\n                this.openEditForm()\r\n                this.getData(this.state.limit, this.state.number)\r\n            } else {\r\n                if (response.data && response.data.message) alert(response.data.message)\r\n            }\r\n            console.log(response)\r\n        }\r\n    }\r\n\r\n    handleDelete = async (index) => {\r\n        var a = window.confirm('hapus data ini?')\r\n        if (a) {\r\n            let payload = {\r\n                \"id_user\": 1,\r\n                \"nisn\": index,\r\n            }\r\n            let response = await api.create('MAIN').deleteSiswa(payload)\r\n            if (response.ok && response.status === 200) {\r\n                this.getData(this.state.limit, this.state.number)\r\n            } else {\r\n                if (response.data && response.data.message) alert(response.data.message)\r\n            }\r\n            console.log(response)\r\n        }\r\n    }\r\n\r\n    openFormKem = (index = null) => {\r\n        this.setState({ formKemVisible: !this.state.formKemVisible, selectedIndex: index })\r\n    }\r\n\r\n    openCreateForm = () => {\r\n        this.setState({ createVisible: !this.state.createVisible })\r\n    };\r\n\r\n    openEditForm = (index = null) => {\r\n        this.setState({ editVisible: !this.state.editVisible, selectedIndex: index })\r\n        console.log(this.state.rawData[index])\r\n    };\r\n \r\n    openDeletePopup = (index) => {\r\n        this.setState({ deletePopUpVisible: !this.state.deletePopUpVisible, selectedIndex: index })\r\n    };\r\n\r\n    getMuiTheme = () => createMuiTheme(ct.customTable());\r\n\r\n    options = ct.customOptions()\r\n\r\n    columns = [\r\n        \"No\",\r\n        \"ID\",\r\n        \"NISN\",\r\n        \"Username\",\r\n        \"Nama\",\r\n        \"Kelas\",\r\n        \"Email\",\r\n        \"Sekolah\",\r\n        \"Avatar\",\r\n        {\r\n            name: \"Action\",\r\n            options: {\r\n                customBodyRender: (val, tableMeta) => {\r\n                    return (\r\n                        <div style={{width: '160px'}} className=\"display-flex-normal\">\r\n                            <button\r\n                                className=\"btn btn-small btn-primary btn-radius\"\r\n                                style={{ marginRight: 5 }}\r\n                                onClick={() => {\r\n                                    this.openFormKem(tableMeta.rowData[1])\r\n                                }}\r\n                            >\r\n                                Hasil Kem\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-primary btn-small-circle\"\r\n                                style={{ marginRight: 5 }}\r\n                                onClick={() => this.openEditForm(tableMeta.rowIndex)}\r\n                            >\r\n                                <i className=\"fa fa-lw fa-pencil-alt\" />\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-primary btn-small-circle\"\r\n                                onClick={() => this.handleDelete(tableMeta.rowData[2])}>\r\n                                <i className=\"fa fa-lw fa-trash-alt\" />\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    ]\r\n\r\n    render() {\r\n        let {positionCount, table_query} = this.state\r\n        let tableOptions = {\r\n            ...this.options,\r\n            serverSide: true,\r\n            count: positionCount,\r\n            searchText: table_query,\r\n            onTableChange: (action, tableState) => {\r\n                switch (action) {\r\n                    case 'changePage':\r\n                        this.setState({ table_page: tableState.page })\r\n                        this.getData(tableState.rowsPerPage, tableState.page);\r\n                        break;\r\n                    case 'changeRowsPerPage':\r\n                        this.setState({ table_limit: tableState.rowsPerPage })\r\n                        this.getData(tableState.rowsPerPage, tableState.page);\r\n                        break;\r\n                    case 'search':\r\n                        let searchText = tableState.searchText ? tableState.searchText : \"\"\r\n                        this.setState({ table_query: searchText }, () => {\r\n                            this.getData(tableState.rowsPerPage, tableState.page)\r\n                        })\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"main-content\">\r\n                <div className=\"padding-5px\">\r\n                    <MuiThemeProvider theme={this.getMuiTheme()}>\r\n                        <MUIDataTable\r\n                            title={\"Siswa\"}\r\n                            key={positionCount}\r\n                            data={this.state.dataTable}\r\n                            columns={this.columns}\r\n                            options={tableOptions}\r\n                            buttonCreate={true}\r\n                            linearProgress={this.state.linearProgress}\r\n                            onCreate={this.openCreateForm.bind(this)}\r\n                        />\r\n                    </MuiThemeProvider>\r\n                </div>\r\n\r\n                {this.state.createVisible && (\r\n                    <FormStudents\r\n                        type={\"create\"}\r\n                        onClickClose={this.openCreateForm}\r\n                        onClickSave={this.handleSubmit.bind(this)}\r\n                    />\r\n                )}\r\n\r\n                {this.state.editVisible && (\r\n                    <FormStudents\r\n                        type={\"edit\"}\r\n                        payload={this.state.rawData[this.state.selectedIndex]}\r\n                        onClickClose={this.openEditForm}\r\n                        onClickSave={this.handleUpdate.bind(this)}\r\n                    />\r\n                )}\r\n\r\n                {this.state.formKemVisible && (\r\n                    <FormKem\r\n                        id_user={this.state.rawData[this.state.selectedIndex].id}\r\n                        onClickClose={this.openFormKem}\r\n                    />\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Students","import React, { Component } from 'react'\r\n\r\nclass PopUp extends Component {\r\n   render() {\r\n        return (\r\n        this.props.type === 'save' ?\r\n        <div className={this.props.class}>\r\n            <div className=\"padding-top-20px\"></div>\r\n            <div className=\"popup-content background-white border-radius\" style={{width: '20%'}}>\r\n              <div className=\"padding-15px background-white grid grid-2x\">\r\n                <div className=\"col-1\">\r\n                  <div className=\"txt-site txt-12 txt-bold post-center\">\r\n                    Information\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-2 content-right\">\r\n                  <button className=\"btn btn-circle background-white\" onClick={ this.props.onClick }>\r\n                    <i className=\"fa fa-lg fa-times\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n                        \r\n              <div style={{textAlign: 'center', marginTop:10, color:'green', fontSize:44}}>\r\n                <i className=\"fa fa-lw fa-check-circle\"/>\r\n              </div>                        \r\n              <div className=\"padding-20px\" style={{textAlign: 'center', fontWeight:'bold'}}>\r\n                  PROCESS SUCCESSFULL!\r\n              </div>\r\n              <div className=\"padding-15px\" style={{textAlign: 'center'}}>\r\n                <button \r\n                    className=\"btn padding-5px\" \r\n                    type=\"button\"\r\n                    style={{width:'50%', backgroundColor:'#6495ED', color:'white'}}\r\n                    onClick={ this.props.onClick }>\r\n                    <span>OK, GOT IT!</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"padding-bottom-20px\"></div>\r\n        </div> :\r\n\r\n        this.props.type === 'delete' ?\r\n        <div className={this.props.class}>\r\n            <div className=\"padding-top-20px\"></div>\r\n                <div className=\"popup-content border-radius\" style={{width: '30%', backgroundColor:'#FF7F50'}}>\r\n                <div className=\"grid grid-2x padding-15px\">\r\n                    <div className=\"col-1\" style={{textAlign: 'center', backgroundColor:'#FF7F50', color:'white'}}>\r\n                    <div className=\"txt-site txt-12 txt-bold post-center\">\r\n                        Your Attention is Required\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"col-2 content-right\">\r\n                    <button className=\"btn btn-circle\" style={{backgroundColor:'#FF7F50', color:'white'}} onClick={ this.props.onClick }>\r\n                        <i className=\"fa fa-lg fa-times\"></i>\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n                <div style={{textAlign: 'center', marginTop:10, color:'white', fontSize:44}}>\r\n                    <i className=\"fa fa-lw fa-bell\"/>\r\n                </div>                        \r\n                <div className=\"padding-20px\" style={{textAlign: 'center', fontWeight:'bold', color:'white'}}>\r\n                    Apakah Anda Yakin Menghapus Data Ini ?\r\n                </div>\r\n                <div className=\"padding-15px grid grid-2x\" style={{alignContent: 'center'}}>\r\n                    <div className=\"col-1\">\r\n                    <button \r\n                        className=\"btn padding-5px\"\r\n                        type=\"button\"\r\n                        onClick={ this.props.onClickDelete }>\r\n                        <span>OK, GOT IT!</span>\r\n                    </button>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                    <button \r\n                        className=\"btn padding-5px\" \r\n                        type=\"button\"\r\n                        onClick={ this.props.onClick }>\r\n                        <span>CLOSE</span>\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"padding-bottom-20px\"></div>\r\n        </div> :\r\n\r\n        <div className={this.props.class}>\r\n          <div className=\"popup-content-mikro background-white border-radius post-center\">\r\n            \r\n            <div className=\"padding-15px background-white border-bottom grid grid-2x\">\r\n              <div className=\"col-1\">\r\n                  <div className=\"txt-site txt-12 txt-bold post-center\">\r\n                    {this.props.title}\r\n                  </div>\r\n              </div>\r\n              <div className=\"col-2 content-right\">\r\n                  <button \r\n                    className=\"btn btn-circle btn-grey\" \r\n                    onClick={ this.props.onClick }>\r\n                      <i className=\"fa fa-lg fa-times\"></i>\r\n                  </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"padding-15px background-grey\">\r\n\r\n              <input \r\n                type=\"file\" \r\n                id=\"upload-image\" \r\n                style={{'display': 'none'}}\r\n                onChange={this.props.onChange} />\r\n\r\n              <input \r\n                type=\"file\" \r\n                id=\"upload-image\" \r\n                style={{'display': 'none'}}\r\n                onChange={this.props.onChange} />\r\n\r\n              \r\n                <div className=\"upload-image\">\r\n\r\n                  <div className=\"u-i-info\">\r\n                    <div className=\"u-i-icon\">\r\n                      <i className=\"fa fa-lg fa-images\" />\r\n                    </div>\r\n                    <div className=\"u-i-label\">\r\n                      Upload a file\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div \r\n                    className=\"u-i-image image image-all\"\r\n                    style={{'backgroundImage': 'url('+this.props.file+')'}}>\r\n\r\n                      <div className=\"u-i-btn\">\r\n                        <label htmlFor=\"upload-image\">\r\n                          <div className=\"btn btn-circle-div btn-green border-all\">\r\n                            <i className=\"fa fa-lg fa-plus\" />\r\n                          </div>\r\n                        </label>\r\n                        <button \r\n                          onClick={this.props.removeChange}\r\n                          type=\"button\"\r\n                          className=\"btn btn-circle btn-red border-all\">\r\n                          <i className=\"fa fa-lg fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n\r\n                  </div>\r\n                </div>\r\n              \r\n              \r\n              <div className=\"grid margin-top-15px\">\r\n                <div className=\"content-right\">\r\n                  <button className=\"btn background-blue\"\r\n                    onClick={ this.props.onClick }>\r\n                    Close\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PopUp\r\n\r\n\r\n","import React, { Component } from \"react\";\r\n\r\n\r\nconst payloadDefault = {\r\n    \"positionName\": ''\r\n}\r\n\r\n\r\nclass FormPosition extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: props.data ? props.data : \r\n            {\r\n                payloadDefault\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        console.info(this.state.data)\r\n        return (\r\n            <div className={\"app-popup app-popup-show\"}>\r\n                <div className=\"padding-top-20px\" />\r\n                <div className=\"popup-content background-white border-radius\">\r\n                    <div className=\"border-bottom padding-15px grid grid-2x\">\r\n                        <div className=\"col-1\">\r\n                            <div className=\"txt-site txt-12 txt-bold post-center\">\r\n                                {this.props.type === \"create\"\r\n                                    ? \"Tambah - Jabatan\"\r\n                                    : this.props.type === \"update\"\r\n                                        ? \"Edit - Jabatan\"\r\n                                        : \"View - Jabatan\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2 content-right\">\r\n                            <button\r\n                                className=\"btn btn-circle btn-grey\"\r\n                                onClick={this.props.onClickClose}\r\n                            >\r\n                                <i className=\"fa fa-lg fa-times\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <form action=\"#\" \r\n                        onSubmit={(e) => { e.preventDefault() \r\n                            this.props.onClickSave(this.state.data.positionName) }\r\n                        }\r\n                    >\r\n                        <div className=\"border-bottom padding-15px grid-mobile-none gap-20px\">\r\n                            <div className=\"margin-bottom-15px\">\r\n                                <div className=\"margin-5px\">\r\n                                    <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                        Nama Jabatan\r\n                                    </span>\r\n                                </div>\r\n                                <input\r\n                                    readOnly={this.props.type === \"view\" ? true : false}\r\n                                    style={\r\n                                        this.props.type === \"view\"\r\n                                            ? { backgroundColor: \"#E6E6E6\" }\r\n                                            : null\r\n                                    }\r\n                                    type=\"text\"\r\n                                    className=\"txt txt-sekunder-color\"\r\n                                    placeholder=\"Nama Jabatan\"\r\n                                    required\r\n                                    value={this.state.data.positionName}\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            data: {\r\n                                                positionName: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"padding-15px\">\r\n                            <div className=\"grid grid-2x\">\r\n                                <div className=\"col-1\" />\r\n                                <div className=\"col-2 content-right\">\r\n                                    {this.props.type !== \"view\" ? (\r\n                                        <button\r\n                                            style={{ marginLeft: \"15px\" }}\r\n                                            className=\"btn btn-primary\"\r\n                                            type=\"submit\"\r\n                                        >\r\n                                        <span>SAVE</span>\r\n                                        </button>\r\n                                    ) : null}\r\n                                    <button\r\n                                        style={{ marginLeft: \"15px\" }}\r\n                                        className=\"btn btn-primary\"\r\n                                        type=\"button\"\r\n                                        onClick={this.props.onClickClose}\r\n                                    >\r\n                                        <span>CLOSE</span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"padding-bottom-20px\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FormPosition;","import React, { Component } from \"react\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport MUIDataTable from \"mui-datatables-bitozen\";\r\nimport api from \"../../services/Api\";\r\n\r\nlet ct = require(\"../../modules/custom/customTable\")\r\n\r\nclass PageReads extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id_bacaan: props.idBacaan,\r\n            linearProgress: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    async getData(){\r\n        this.linearProgress()\r\n\r\n        let param = {\r\n            \"id_user\": 1,\r\n            \"id_bacaan\": this.props.id_bacaan\r\n        }\r\n\r\n        let response = await api.create('MAIN').getFullBacaan(param)\r\n        if(response.status === 200 && response.data.status === 'S'){\r\n            let data = response.data.data\r\n            this.setState({\r\n                judul: data.judul,\r\n                isi: data.isi,\r\n                soal: data.soal\r\n            })\r\n            this.linearProgress()\r\n        } else {\r\n            this.linearProgress()\r\n        }\r\n        console.log(response)\r\n    }\r\n\r\n    linearProgress = () => {\r\n        this.setState({ linearProgress: !this.state.linearProgress })\r\n    }\r\n\r\n    // getMuiTheme = () => createMuiTheme(ct.customTable());\r\n\r\n    // options = ct.customOptions()\r\n\r\n    // columns = [\r\n    //     \"No\",\r\n    //     \"Nilai\",\r\n    //     \"Judul\"\r\n    // ]\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"app-popup app-popup-show\"}>\r\n                <div className=\"padding-top-20px\" />\r\n                <div className=\"popup-content background-white border-radius\">\r\n                    <div className=\"border-bottom padding-15px grid grid-2x\">\r\n                        <div className=\"col-1\">\r\n                            <div className=\"txt-site txt-12 txt-bold txt-main post-center\">\r\n                                Bacaan\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2 content-right\">\r\n                            <button\r\n                                className=\"btn btn-circle btn-grey\"\r\n                                onClick={this.props.onClickClose}\r\n                            >\r\n                                <i className=\"fa fa-lg fa-times\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"border-bottom padding-15px\">\r\n                        <div className=\"padding-15px border-bottom\">\r\n                            <div className=\"margin-bottom-20px\">\r\n                                <h1>\r\n                                    {this.state.judul}\r\n                                </h1>\r\n                            </div>\r\n                            <div>\r\n                                <p>\r\n                                    {this.state.isi}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"padding-15px\">\r\n                            <ol className=\"padding-left-15px\">\r\n                                {this.state.soal && this.state.soal.map((value, index) => {\r\n                                    return (\r\n                                        <li className=\"margin-bottom-10px\">\r\n                                            <div className=\"txt-site txt-11 txt-bold txt-main\">\r\n                                                {value.soal}\r\n                                            </div>\r\n                                            <ol type=\"a\" className=\"padding-left-15px\">\r\n                                                {value.jawaban && value.jawaban.map((value2, index2) => {\r\n                                                    return(\r\n                                                        <li>\r\n                                                            <div className=\"txt-site txt-11 txt-thin txt-main\">\r\n                                                                {value2.jawaban}\r\n                                                            </div>\r\n                                                        </li>\r\n                                                    ) \r\n                                                })}\r\n                                            </ol>\r\n                                        </li>\r\n                                    )\r\n                                })}\r\n                            </ol>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"padding-15px\">\r\n                        <div className=\"grid grid-2x\">\r\n                            <div className=\"col-1\" />\r\n                            <div className=\"col-2 content-right\">\r\n                                <button\r\n                                    style={{ marginLeft: \"15px\" }}\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"button\"\r\n                                    onClick={this.props.onClickClose}\r\n                                >\r\n                                    <span>CLOSE</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"padding-bottom-20px\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default PageReads;","import React, { Component } from \"react\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport MUIDataTable from \"mui-datatables-bitozen\";\r\nimport PopUp from \"../../pages/PopUpAlert\";\r\nimport FormTraining from \"./formTraining\";\r\nimport FormReads from \"./reads\";\r\nimport api from \"../../services/Api\";\r\n\r\nlet ct = require(\"../../modules/custom/customTable\")\r\nconst options = ct.customOptions();\r\n\r\nclass Training extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            clEditAble: '',\r\n            editAble: false,\r\n            rawData: [],\r\n            dataTable: [],\r\n            createVisible: false,\r\n            editVisible: false,\r\n            savePopUpVisible: false,\r\n            readsPopUpVisible: false,\r\n            linearProgress: false,\r\n            table_limit: 5,\r\n            table_page: 0,\r\n            table_query: \"\",\r\n            trainingCount: 0,\r\n            id_bacaan: 0\r\n        }\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    opEditAble = () => {\r\n        if (this.state.editAble === false) {\r\n            this.setState({\r\n                clEditAble: 'edit-able',\r\n                editAble: true,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                clEditAble: '',\r\n                editAble: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    openReadsForm = () => {\r\n        this.setState({ readsPopUpVisible: !this.state.readsPopUpVisible })\r\n    }\r\n\r\n    openCreateForm = () => {\r\n        this.setState({ createVisible: !this.state.createVisible })\r\n    };\r\n\r\n    openEditForm = (index = null) => {\r\n        this.setState({ editVisible: !this.state.editVisible, selectedIndex: index })\r\n    };\r\n\r\n    openDeletePopup = (index) => {\r\n        this.setState({ deletePopUpVisible: !this.state.deletePopUpVisible, selectedIndex: index })\r\n    };\r\n\r\n    openSavePopUp = () => {\r\n        this.setState({ savePopUpVisible: !this.state.savePopUpVisible })\r\n    };\r\n\r\n    linearProgress = () => {\r\n        this.setState({ linearProgress: !this.state.linearProgress })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(this.state.table_limit, this.state.table_page);\r\n    }\r\n\r\n    handlePopUp = () => {\r\n        this.getData()\r\n        this.setState({\r\n            savePopUpVisible: false,\r\n            createVisible: false,\r\n            editVisible: false\r\n        })\r\n    }\r\n\r\n    handleSubmit = async (data) => {\r\n        let payload = {\r\n            \"TrainingName\": data\r\n        }\r\n        console.info('payload ==> ', payload)\r\n        let response = await api.create('Training').postTraining(payload)\r\n        if (response.ok && response.status === 200) {\r\n            this.openSavePopUp()\r\n            this.getData(this.state.table_limit, this.state.table_page)\r\n        } else {\r\n            if(response.data && response.data.message) alert(response.data.message)\r\n        }\r\n    }\r\n\r\n    handleUpdate = async (data) => {\r\n        let payload = {\r\n            \"id\": this.state.rawData[this.state.selectedIndex].id,\r\n            \"TrainingName\": data\r\n        }\r\n        console.info('payload ==> ', payload)\r\n        let response = await api.create('Training').postTraining(payload)\r\n        if (response.ok && response.status === 200) {\r\n            this.openSavePopUp()\r\n            this.getData(this.state.table_limit, this.state.table_page)\r\n        } else {\r\n            if (response.data && response.data.message) alert(response.data.messagae)\r\n        }\r\n    }\r\n\r\n    handleDelete = async (data) => {\r\n        let payload = {\r\n            \"id\": this.state.rawData[this.state.selectedIndex].id,\r\n            \"TrainingName\": data\r\n        }\r\n        console.info('payload ==> ', payload)\r\n        let response = await api.create('Training').deleteTraining(payload.id)\r\n        if (response.ok && response.status === 200) {\r\n            this.setState({ deletePopUpVisible: false })\r\n            this.getData(this.state.table_limit, this.state.table_page)\r\n        } else {\r\n            if (response.data && response.data.message) alert(response.data.message)\r\n        }\r\n    }\r\n\r\n    getMuiTheme = () => createMuiTheme(ct.customTable());\r\n\r\n    options = ct.customOptions()\r\n\r\n    async getData(limit, number){\r\n        this.linearProgress()\r\n\r\n        let param = {\r\n            \"id_user\": 1\r\n        }\r\n\r\n        let response = await api.create('MAIN').getAllPagingLatihan(param)\r\n        if(response.status === 200 && response.data.status === 'S'){\r\n            let dataTable = response.data.data.map((value, index) => {\r\n                const { id, judul, jumlah_kata, done } = value;\r\n                return [\r\n                    index += (1 + (this.state.table_page * this.state.table_limit)),\r\n                    id,\r\n                    judul,\r\n                    jumlah_kata,\r\n                    done\r\n                ]\r\n            })\r\n            this.setState({\r\n                rawData: response.data,\r\n                dataTable\r\n            })\r\n            this.linearProgress()\r\n        } else {\r\n            this.linearProgress()\r\n        }\r\n    }\r\n\r\n    async getCountData() {\r\n        let param = {\r\n            id_user: '1'\r\n        }\r\n\r\n        let response = await api.create('MAIN').getAllPagingLatihan(param)\r\n        if (response.status === 200) {\r\n            this.setState({\r\n                trainingCount: response.data.length\r\n            })\r\n        }\r\n    }\r\n\r\n    columns = [\r\n        \"No\",\r\n        \"ID\",\r\n        \"Judul\",\r\n        \"Jumlah Kata\",\r\n        \"Status\",\r\n        {\r\n            name: \"Action\",\r\n            options: {\r\n                customBodyRender: (val, tableMeta) => {\r\n                    return (\r\n                        <div className=\"display-flex-normal\">\r\n                            <button\r\n                                className=\"btn btn-small btn-primary btn-radius\"\r\n                                style={{ marginRight: 5 }}\r\n                                onClick={() => {\r\n                                    this.openReadsForm()\r\n                                    this.setState({\r\n                                        id_bacaan: tableMeta.rowData[1]\r\n                                    })\r\n                                    console.log(tableMeta.rowData[1])\r\n                                }}\r\n                            >\r\n                                Lihat Bacaan\r\n                            </button>\r\n                            {/* <button\r\n                                className=\"btn btn-primary btn-small-circle\"\r\n                                style={{ marginRight: 5 }}\r\n                                onClick={() =>\r\n                                    this.openEditForm(tableMeta.rowIndex)\r\n                                }\r\n                            >\r\n                                <i className=\"fa fa-lw fa-pencil-alt\" />\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-primary btn-small-circle\"\r\n                                onClick={() => this.openDeletePopup(tableMeta.rowIndex)}>\r\n                                <i className=\"fa fa-lw fa-trash-alt\" />\r\n                            </button> */}\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    ]\r\n\r\n    render() {\r\n\r\n        let { trainingCount, table_query } = this.state\r\n        let tableOptions = {\r\n            ...options,\r\n            serverSide: true,\r\n            count: trainingCount,\r\n            searchText: table_query,\r\n            onTableChange: (action, tableState) => {\r\n                switch (action) {\r\n                    case 'changePage':\r\n                        this.setState({ table_page: tableState.page })\r\n                        this.getData(tableState.rowsPerPage, tableState.page)\r\n                        break;\r\n                    case 'changeRowsPerPage':\r\n                        this.setState({ table_limit: tableState.rowsPerPage })\r\n                        this.getData(tableState.rowsPerPage, tableState.page)\r\n                        break;\r\n                    case 'search':\r\n                        let searchText = tableState.searchText ? tableState.searchText: \"\"\r\n                        this.setState({ table_query: searchText }, () => {\r\n                            this.getData(tableState.rowsPerPage, tableState.page)\r\n                        })\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"main-content\">\r\n                <div className=\"padding-5px\">\r\n                    <MuiThemeProvider theme={this.getMuiTheme()}>\r\n                        <MUIDataTable\r\n                            title={\"Latihan\"}\r\n                            key={trainingCount}\r\n                            data={this.state.dataTable}\r\n                            columns={this.columns}\r\n                            options={tableOptions}\r\n                            buttonCreate={true}\r\n                            linearProgress={this.state.linearProgress}\r\n                            onCreate={this.openCreateForm.bind(this)}\r\n                        />\r\n                    </MuiThemeProvider>\r\n                </div>\r\n                {this.state.readsPopUpVisible && (\r\n                    <FormReads\r\n                        id_bacaan={this.state.id_bacaan}\r\n                        onClickClose={this.openReadsForm}\r\n                    />\r\n                )}\r\n                {this.state.createVisible && (\r\n                    <FormTraining\r\n                        type={\"create\"}\r\n                        onClickClose={this.openCreateForm}\r\n                        onClickSave={this.handleSubmit.bind(this)}\r\n                    />\r\n                )}\r\n                {this.state.editVisible && (\r\n                    <FormTraining\r\n                        type={\"update\"}\r\n                        data={this.state.rawData[this.state.selectedIndex]}\r\n                        onClickClose={this.openEditForm}\r\n                        onClickSave={this.handleUpdate.bind(this)}\r\n                    />\r\n                )}\r\n                {this.state.savePopUpVisible && (\r\n                    <PopUp\r\n                        type={\"save\"}\r\n                        class={\"app-popup app-popup-show\"}\r\n                        onClick={this.handlePopUp.bind(this)}\r\n                    />\r\n                )}\r\n                {this.state.deletePopUpVisible && (\r\n                    <PopUp\r\n                        type={\"delete\"}\r\n                        class={\"app-popup app-popup-show\"}\r\n                        onClickDelete={this.handleDelete}\r\n                        onClick={this.openDeletePopup}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Training","import React, { Component } from 'react'\r\nimport { Calendar } from 'react-date-range'\r\nimport moment from 'moment'\r\n\r\nclass Pages extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      datePicker: this.props.date,\r\n      dateField: this.props.date ? moment(this.props.date).format(\"DD-MM-YYYY\") : \"DD-MM-YYYY\",\r\n      dateContent: 'content',\r\n      calendarVisible: false\r\n    }\r\n  }\r\n\r\n  handleClickOutside(target) {\r\n    // // console.log(element)\r\n    // const outsideclickListener = event => {\r\n    //   if (!element.contains(event.target)) {\r\n    //     console.log('target', event.target)\r\n    //     this.setState({calendarVisible: !this.state.calendarVisible})\r\n    //     removeClickListener()\r\n    //   }\r\n    // }\r\n\r\n    // const removeClickListener = () => {\r\n    //   // this.setState({smallProfileClass: clActivePopup})\r\n    //   document.removeEventListener('click', outsideclickListener)\r\n    // }\r\n\r\n    // document.addEventListener('click', outsideclickListener)\r\n\r\n    var element = document.querySelector(target)\r\n\r\n    const outsideclickListener = (event) => {\r\n      if (!element.contains(event)) {\r\n        this.setState({calendarVisible: false}) \r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"click\", function (event) {\r\n      if (event.target.closest(target)) return\r\n      outsideclickListener()\r\n    })\r\n  }\r\n\r\n  clPlaceDate = () => {\r\n    // var element = document.getElementById('card-date-picker')\r\n    this.setState({dateContent: 'content'})\r\n  }\r\n\r\n  opPlaceDate = () => {\r\n    // var element = document.getElementsByClassName('card-date-picker')\r\n    // element.style.display = 'block'\r\n    this.setState({calendarVisible: !this.state.calendarVisible })\r\n    this.handleClickOutside('.card-date-picker')\r\n  }\r\n\r\n  handleChange = moment => {\r\n    console.log(moment)\r\n  }\r\n\r\n  handleSave = () => {\r\n    console.log('saved', this.state.datePicker)\r\n  }\r\n\r\n  handleSelectDate = (e) => {\r\n    this.props.onChange(e)\r\n    this.setState({\r\n      datePicker: e\r\n    })\r\n  }\r\n\r\n  clearDateField = () => {\r\n    this.setState({\r\n      // calendarVisible: false,\r\n      datePicker: false,\r\n      dateField: 'DD-MM-YYYY'\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.date !== prevProps.date) {\r\n      // const dt = (this.state.dateField !== undefined && this.state.dateField !== null && this.state.dateField !== \"\") ? moment(this.state.dateField).format(\"DD-MM-YYYY\") : \"DD-MM-YYYY\"\r\n      const dt = (this.state.datePicker !== undefined && this.state.datePicker !== null && this.state.datePicker !== \"\") ? moment(this.state.datePicker).format(\"DD-MM-YYYY\") : \"DD-MM-YYYY\"\r\n      this.setState({\r\n        datePicker: this.props.date,\r\n        dateField: dt\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"card-date-picker\" key={this.props.key}>\r\n        <div className=\"card-date-picker\" >\r\n          <div className=\"double\">\r\n            <div className=\"input\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"ip\"\r\n                readOnly\r\n                style={{ backgroundColor: this.props.disabled ? \"#E6E6E6\" : null }}\r\n                value={(this.state.datePicker !== undefined && this.state.datePicker !== null && this.state.datePicker !== \"\") ? moment(this.state.datePicker).format(\"DD-MM-YYYY\") : \"DD-MM-YYYY\"} />\r\n              {/*!this.props.disabled \r\n                ? <button \r\n                    type=\"button\"\r\n                    className=\"cl\" \r\n                    onClick={!this.props.disabled ? this.clearDateField : null}>\r\n                    <i className=\"fa fa-1x fa-times\" />\r\n                  </button>\r\n              : null*/}\r\n            </div>\r\n            {!this.props.disabled \r\n              ? <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-grey border-left btn-no-radius\"\r\n                  onClick={!this.props.disabled ? this.opPlaceDate : null}>\r\n                  <i className=\"fa fa-lg fa-calendar-alt\" />\r\n                </button> \r\n              : null}\r\n          </div>\r\n          {this.state.calendarVisible && \r\n          <div className={\"content active\"}>\r\n              <Calendar\r\n                date={this.state.datePicker}\r\n                onChange={this.handleSelectDate}\r\n                color=\"#004c97\" /> \r\n          </div>}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Pages","import React, { Component } from \"react\"\r\nimport CalendarPicker from '../../modules/popup/Calendar'\r\n// import UploadFile from '../../modules/upload/upload'\r\nimport Dropzone from 'react-dropzone'\r\nimport Loader from 'react-loader-spinner'\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\"\r\nimport MUIDataTable from \"mui-datatables-bitozen\"\r\nimport api from \"../../services/Api\"\r\n// import M from 'moment'\r\n\r\nlet ct = require(\"../../modules/custom/customTable\")\r\n\r\nlet defaultPayload = {\r\n    \"accountNonExpired\": true,\r\n    \"accountNonLocked\": true,\r\n    \"address\": \"\",\r\n    \"birthDate\": \"\",\r\n    \"birthPlace\": \"\",\r\n    \"contactNumber\": \"\",\r\n    \"credentialsNonExpired\": true,\r\n    \"email\": \"\",\r\n    \"employeePhotoURL\": \"\",\r\n    \"enabled\": true,\r\n    \"firstName\": \"\",\r\n    \"id\": \"\",\r\n    \"lastName\": \"\",\r\n    \"nik\": \"\",\r\n    \"password\": \"\",\r\n    \"position\": {\r\n        \"id\": \"\",\r\n        \"positionName\": \"\"\r\n    },\r\n    \"role\": \"ROLE_USER\",\r\n    \"username\": \"\"\r\n}\r\n\r\nclass FormEmployee extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            dataDetail: props.payload \r\n                ? {\r\n                    ...props.payload,\r\n                    // birthDate: props.payload.birthDate ? M(props.payload.birthDate, \"DD-MM-YYYY\").format(\"YYYY-MM-DD\") : null,\r\n                }\r\n                : defaultPayload,\r\n            dataTablePosition: props.tablePosition ? props.tablePosition : [],\r\n            visiblePopupPosition: false,\r\n            loading: false,\r\n            imageUrl: ''\r\n        }\r\n    }\r\n\r\n    getMuiTheme = () => createMuiTheme(ct.customTable())\r\n    options = ct.customOptions()\r\n\r\n    columns = [\r\n        \"No\",\r\n        \"ID\",\r\n        \"Nama Jabatan\",\r\n        {\r\n            name: \"Action\",\r\n            options: {\r\n                customBodyRender: (val, tableMeta) => {\r\n                    return (\r\n                        <div>\r\n                            <button\r\n                                className=\"btn btn-green btn-small\"\r\n                                style={{ marginRight: 5 }}\r\n                                onClick={() =>\r\n                                    this.openChoosePosition(tableMeta.rowData)\r\n                                }>\r\n                                PILIH\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    ]\r\n\r\n    componentDidMount() {\r\n        console.log('mount', this.state.dataDetail)\r\n        this.getImageBlob(this.state.dataDetail.id, this.state.dataDetail.employeePhotoURL)\r\n    }\r\n\r\n    async getImageBlob(id, fileName) {\r\n        let payload = id+'/'+fileName\r\n        let res = await api.create(\"EMPLOYEE\").downloadFotoEmployee(payload)\r\n        if (res && res.status === 200) {\r\n            return this.setState({ \r\n                imageUrl: res.config.url\r\n            })\r\n        }\r\n        console.log(res)\r\n    }\r\n\r\n    async onDrop(acceptedFiles) {\r\n        const formData = new FormData()\r\n        formData.append('file', acceptedFiles[0])\r\n        formData.append('id', this.state.dataDetail.id)\r\n        let response = await api.create('EMPLOYEE').uploadFotoEmployee(formData)\r\n        if (response && response.status === 200) {\r\n            this.setState({\r\n                dataDetail: {\r\n                    ...this.state.dataDetail,\r\n                    employeePhotoURL: response.data.fileName\r\n                }\r\n            })\r\n            this.getImageBlob(this.state.dataDetail.id, response.data.fileName)\r\n        } else {\r\n            alert(response.data.message)\r\n        }\r\n    }\r\n\r\n    onClickVisiblePosition = () => {\r\n        this.setState({\r\n            visiblePopupPosition: !this.state.visiblePopupPosition\r\n        })\r\n    }\r\n\r\n    openChoosePosition = (val) => {\r\n        let payload = {\r\n            \"id\": val[1],\r\n            \"positionName\": val[2]\r\n        }\r\n        this.setState({\r\n            dataDetail: {\r\n                ...this.state.dataDetail,\r\n                position: payload\r\n            }\r\n        })\r\n        this.onClickVisiblePosition()\r\n    }\r\n\r\n    renderPosition() {\r\n        return (\r\n            <div className={\"app-popup app-popup-show\"}>\r\n                <div className=\"padding-top-20px\" />\r\n                <div className=\"popup-content-small background-white border-radius\">\r\n                    <div className=\"padding-15px background-green grid grid-2x\">\r\n                        <div className=\"col-1\">\r\n                            <div className=\"txt-site txt-12 txt-bold post-center\">\r\n                                Jabatan Pegawai\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2 content-right\">\r\n                            <button\r\n                                className=\"btn btn-circle background-green\"\r\n                                onClick={this.onClickVisiblePosition.bind(this)}\r\n                            >\r\n                                <i className=\"fa fa-lg fa-times\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"padding-5px\">\r\n                        <MuiThemeProvider theme={this.getMuiTheme()}>\r\n                            <MUIDataTable\r\n                                title={\"Jabatan Pegawai\"}\r\n                                data={this.state.dataTablePosition}\r\n                                columns={this.columns}\r\n                                options={this.options}\r\n                            />\r\n                        </MuiThemeProvider>\r\n                    </div>\r\n\r\n                    <div className=\"padding-15px\">\r\n                        <div className=\"grid grid-2x\">\r\n                            <div className=\"col-1\" />\r\n                            <div className=\"col-2 content-right\">\r\n                                <button\r\n                                    style={{ marginLeft: \"15px\" }}\r\n                                    className=\"btn btn-white\"\r\n                                    type=\"button\"\r\n                                    onClick={this.onClickVisiblePosition.bind(this)}\r\n                                >\r\n                                    <span>CLOSE</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"padding-top-20px\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderForm() {\r\n        let {dataDetail} = this.state\r\n        return (\r\n            <div className={\"app-popup app-popup-show\"}>\r\n                <div className=\"padding-top-20px\" />\r\n                <div className=\"popup-content background-white border-radius\">\r\n                    <div className=\"padding-15px background-green grid grid-2x\">\r\n                        <div className=\"col-1\">\r\n                            <div className=\"txt-site txt-12 txt-bold post-center\">\r\n                                {this.props.type === \"create\"\r\n                                    ? \"Tambah - Pegawai\"\r\n                                    : this.props.type === \"update\"\r\n                                        ? \"Edit - Pegawai\"\r\n                                        : \"View - Pegawai\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2 content-right\">\r\n                            <button\r\n                                className=\"btn btn-circle background-green\"\r\n                                onClick={this.props.onClickClose}\r\n                            >\r\n                                <i className=\"fa fa-lg fa-times\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {this.props.type === \"edit\" ? (\r\n                        <div className=\"margin-30px\">\r\n                            <div className=\"width width-160px width-center\">\r\n                                <div\r\n                                    className=\"image image-160px image-circle margin-bottom-20px\"\r\n                                    style={{\r\n                                        margin: \"auto\",\r\n                                        backgroundColor: \"#f8f8f8\",\r\n                                    }}>\r\n                                    {this.state.loading && (\r\n                                        <Loader\r\n                                            type=\"ThreeDots\"\r\n                                            style={{display:'flex', justifyContent:'center',marginTop:45}}\r\n                                            color={\"#somecolor\"}\r\n                                            height={80}\r\n                                            width={80}\r\n                                            loading={this.state.loading}\r\n                                    />\r\n                                    )}\r\n                                    {(this.state.imageUrl === \"\")\r\n                                        ? this.state.loading === true ? <i />\r\n                                        : (<i className=\"icn far fa-user fa-3x\" />)\r\n                                        : (<img src={this.state.imageUrl} alt=\"img\" />)\r\n                                    }\r\n                                </div>\r\n                                <div>\r\n                                    {this.props.type !== 'view'\r\n                                        ?\r\n                                        <button\r\n                                        className=\"btn btn-red btn-small-circle\"\r\n                                        type=\"button\"\r\n                                        align=\"center\"\r\n                                        style={{\r\n                                            position: \"absolute\",\r\n                                            bottom: \"30px\",\r\n                                            right: \"0\"\r\n                                        }}\r\n                                        >\r\n                                        <Dropzone onDrop={this.onDrop.bind(this)}>\r\n                                            {({ getRootProps, getInputProps }) => (\r\n                                            <div {...getRootProps()}>\r\n                                                <input {...getInputProps()} />\r\n                                                <i className=\"fa fa-lw fa-pencil-alt\"></i>\r\n                                            </div>\r\n                                            )}\r\n                                        </Dropzone>\r\n                                        </button>\r\n                                        : null}\r\n                                </div>\r\n                                <div style={{ textAlign: \"center\" }}>\r\n                                    <span style={{ color: \"red\", fontSize: 11, marginBottom: 5 }}>*Image max 1Mb</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : null}\r\n\r\n                    <form \r\n                        action=\"#\" \r\n                        onSubmit={(e) => { \r\n                            e.preventDefault() \r\n                            this.props.onSave(this.state.dataDetail) \r\n                        }}>\r\n                            \r\n                        <div className=\"border-bottom padding-15px grid grid-2x grid-mobile-none gap-20px\">\r\n                            <div className=\"col-1\">\r\n                                <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            Name Depan\r\n                                        </span>\r\n                                    </div>\r\n                                    <input\r\n                                        readOnly={this.props.type === \"view\" ? true : false}\r\n                                        style={\r\n                                            this.props.type === \"view\"\r\n                                                ? { backgroundColor: \"#E6E6E6\" }\r\n                                                : null\r\n                                        }\r\n                                        type=\"text\"\r\n                                        className=\"txt txt-sekunder-color\"\r\n                                        placeholder=\"\"\r\n                                        required\r\n                                        onChange={(e) => {\r\n                                            this.setState({\r\n                                                dataDetail: {\r\n                                                    ...this.state.dataDetail,\r\n                                                    firstName: e.target.value\r\n                                                }\r\n                                            })\r\n                                        }}\r\n                                        value={dataDetail.firstName}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            Name Belakang\r\n                                        </span>\r\n                                    </div>\r\n                                    <input\r\n                                        readOnly={this.props.type === \"view\" ? true : false}\r\n                                        style={\r\n                                            this.props.type === \"view\"\r\n                                                ? { backgroundColor: \"#E6E6E6\" }\r\n                                                : null\r\n                                        }\r\n                                        type=\"text\"\r\n                                        className=\"txt txt-sekunder-color\"\r\n                                        placeholder=\"\"\r\n                                        required\r\n                                        onChange={(e) => {\r\n                                            this.setState({\r\n                                                dataDetail: {\r\n                                                    ...this.state.dataDetail,\r\n                                                    lastName: e.target.value\r\n                                                }\r\n                                            })\r\n                                        }}\r\n                                        value={dataDetail.lastName}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            Tempat Lahir\r\n                                        </span>\r\n                                    </div>\r\n                                    <input\r\n                                        readOnly={this.props.type === \"view\" ? true : false}\r\n                                        style={\r\n                                            this.props.type === \"view\"\r\n                                                ? { backgroundColor: \"#E6E6E6\" }\r\n                                                : null\r\n                                        }\r\n                                        type=\"text\"\r\n                                        className=\"txt txt-sekunder-color\"\r\n                                        placeholder=\"\"\r\n                                        required\r\n                                        onChange={(e) => {\r\n                                            this.setState({\r\n                                                dataDetail: {\r\n                                                    ...this.state.dataDetail,\r\n                                                    birthPlace: e.target.value\r\n                                                }\r\n                                            })\r\n                                        }}\r\n                                        value={dataDetail.birthPlace}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            Tanggal Lahir\r\n                                        </span>\r\n                                    </div>\r\n                                    <CalendarPicker\r\n                                        date={dataDetail.birthDate}\r\n                                        disabled={this.props.type === 'view' ? true : false}\r\n                                        onChange={e => this.setState({\r\n                                            dataDetail: {\r\n                                                ...this.state.dataDetail,\r\n                                                birthDate: e\r\n                                            }\r\n                                        })} />\r\n                                </div>\r\n                                <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            Username\r\n                                        </span>\r\n                                    </div>\r\n                                    <input\r\n                                        readOnly={this.props.type === \"view\" ? true : false}\r\n                                        style={\r\n                                            this.props.type === \"view\"\r\n                                                ? { backgroundColor: \"#E6E6E6\" }\r\n                                                : null\r\n                                        }\r\n                                        type=\"text\"\r\n                                        className=\"txt txt-sekunder-color\"\r\n                                        placeholder=\"\"\r\n                                        required\r\n                                        onChange={(e) => {\r\n                                            this.setState({\r\n                                                dataDetail: {\r\n                                                    ...this.state.dataDetail,\r\n                                                    username: e.target.value\r\n                                                }\r\n                                            })\r\n                                        }}\r\n                                        value={dataDetail.username}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            Password\r\n                                        </span>\r\n                                    </div>\r\n                                    <input\r\n                                        readOnly={this.props.type === \"view\" ? true : false}\r\n                                        style={\r\n                                            this.props.type === \"view\"\r\n                                                ? { backgroundColor: \"#E6E6E6\" }\r\n                                                : null\r\n                                        }\r\n                                        type=\"text\"\r\n                                        className=\"txt txt-sekunder-color\"\r\n                                        placeholder=\"\"\r\n                                        required\r\n                                        onChange={(e) => {\r\n                                            this.setState({\r\n                                                dataDetail: {\r\n                                                    ...this.state.dataDetail,\r\n                                                    password: e.target.value\r\n                                                }\r\n                                            })\r\n                                        }}\r\n                                        value={dataDetail.password}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"col-2\">\r\n                                <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            Jabatan\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"card-date-picker\" >\r\n                                        <div className=\"double\">\r\n                                            <div className=\"input\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"ip\"\r\n                                                value={dataDetail.position.positionName}\r\n                                                readOnly />\r\n                                            </div>\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                className=\"btn btn-grey border-left btn-no-radius\"\r\n                                                onClick={this.onClickVisiblePosition.bind(this)}>\r\n                                                <i className=\"fa fa-lg fa-search\" />\r\n                                            </button> \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            Role\r\n                                        </span>\r\n                                    </div>\r\n                                    <input\r\n                                        readOnly={this.props.type === \"view\" ? true : false}\r\n                                        style={\r\n                                            this.props.type === \"view\"\r\n                                                ? { backgroundColor: \"#E6E6E6\" }\r\n                                                : null\r\n                                        }\r\n                                        type=\"text\"\r\n                                        className=\"txt txt-sekunder-color\"\r\n                                        placeholder=\"\"\r\n                                        required\r\n                                        onChange={(e) => {\r\n                                            this.setState({\r\n                                                dataDetail: {\r\n                                                    ...this.state.dataDetail,\r\n                                                    role: e.target.value\r\n                                                }\r\n                                            })\r\n                                        }}\r\n                                        value={dataDetail.role}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            Alamat\r\n                                        </span>\r\n                                    </div>\r\n                                    <input\r\n                                        readOnly={this.props.type === \"view\" ? true : false}\r\n                                        style={\r\n                                            this.props.type === \"view\"\r\n                                                ? { backgroundColor: \"#E6E6E6\" }\r\n                                                : null\r\n                                        }\r\n                                        type=\"text\"\r\n                                        className=\"txt txt-sekunder-color\"\r\n                                        placeholder=\"\"\r\n                                        required\r\n                                        onChange={(e) => {\r\n                                            this.setState({\r\n                                                dataDetail: {\r\n                                                    ...this.state.dataDetail,\r\n                                                    address: e.target.value\r\n                                                }\r\n                                            })\r\n                                        }}\r\n                                        value={dataDetail.address}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            Nomor Telpon\r\n                                        </span>\r\n                                    </div>\r\n                                    <input\r\n                                        readOnly={this.props.type === \"view\" ? true : false}\r\n                                        style={\r\n                                            this.props.type === \"view\"\r\n                                                ? { backgroundColor: \"#E6E6E6\" }\r\n                                                : null\r\n                                        }\r\n                                        type=\"text\"\r\n                                        className=\"txt txt-sekunder-color\"\r\n                                        placeholder=\"\"\r\n                                        required\r\n                                        onChange={(e) => {\r\n                                            this.setState({\r\n                                                dataDetail: {\r\n                                                    ...this.state.dataDetail,\r\n                                                    contactNumber: e.target.value\r\n                                                }\r\n                                            })\r\n                                        }}\r\n                                        value={dataDetail.contactNumber}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            Email\r\n                                        </span>\r\n                                    </div>\r\n                                    <input\r\n                                        readOnly={this.props.type === \"view\" ? true : false}\r\n                                        style={\r\n                                            this.props.type === \"view\"\r\n                                                ? { backgroundColor: \"#E6E6E6\" }\r\n                                                : null\r\n                                        }\r\n                                        type=\"email\"\r\n                                        className=\"txt txt-sekunder-color\"\r\n                                        placeholder=\"\"\r\n                                        required\r\n                                        onChange={(e) => {\r\n                                            this.setState({\r\n                                                dataDetail: {\r\n                                                    ...this.state.dataDetail,\r\n                                                    email: e.target.value\r\n                                                }\r\n                                            })\r\n                                        }}\r\n                                        value={dataDetail.email}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            NIK\r\n                                        </span>\r\n                                    </div>\r\n                                    <input\r\n                                        readOnly={this.props.type === \"view\" ? true : false}\r\n                                        style={\r\n                                            this.props.type === \"view\"\r\n                                                ? { backgroundColor: \"#E6E6E6\" }\r\n                                                : null\r\n                                        }\r\n                                        type=\"number\"\r\n                                        className=\"txt txt-sekunder-color\"\r\n                                        placeholder=\"\"\r\n                                        required\r\n                                        onChange={(e) => {\r\n                                            this.setState({\r\n                                                dataDetail: {\r\n                                                    ...this.state.dataDetail,\r\n                                                    nik: e.target.value\r\n                                                }\r\n                                            })\r\n                                        }}\r\n                                        value={dataDetail.nik}\r\n                                    />\r\n                                </div>\r\n                                {/* {this.props.type === \"edit\" ? <div className=\"margin-bottom-15px\">\r\n                                    <div className=\"margin-5px\">\r\n                                        <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                            Upload foto\r\n                                        </span>\r\n                                    </div>\r\n                                    <UploadFile\r\n                                        type={this.state.uploadStatus}\r\n                                        percentage={this.state.percentage} \r\n                                        result={false}\r\n                                        acceptedFiles={['png','jpg','jpeg']}\r\n                                        onHandle={(dt) => {\r\n                                            this.handleChange(dt)\r\n                                        }}\r\n                                        onUpload={() => {\r\n                                          this.uploadDocument()  \r\n                                        }}\r\n                                    />\r\n                                </div> : null} */}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"padding-15px\">\r\n                            <div className=\"grid grid-2x\">\r\n                                <div className=\"col-1\" />\r\n                                <div className=\"col-2 content-right\">\r\n                                    {this.props.type !== \"view\" ? (\r\n                                        <button\r\n                                            style={{ marginLeft: \"15px\" }}\r\n                                            className=\"btn btn-green\"\r\n                                            type=\"submit\"\r\n                                        >\r\n                                            <span>SAVE</span>\r\n                                        </button>\r\n                                    ) : null}\r\n                                    <button\r\n                                        style={{ marginLeft: \"15px\" }}\r\n                                        className=\"btn btn-white\"\r\n                                        type=\"button\"\r\n                                        onClick={this.props.onClickClose}\r\n                                    >\r\n                                        <span>CLOSE</span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n                <div className=\"padding-top-20px\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let {visiblePopupPosition} = this.state\r\n        return (\r\n            <div>\r\n                { this.renderForm() }\r\n                {\r\n                    visiblePopupPosition && (\r\n                        this.renderPosition()\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormEmployee","import React, { Component } from \"react\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport MUIDataTable from \"mui-datatables-bitozen\";\r\nimport PopUp from \"../../pages/PopUpAlert\";\r\nimport api from \"../../services/Api\";\r\nimport FormKem from \"./formKem\";\r\nimport M from 'moment';\r\n\r\nlet ct = require(\"../../modules/custom/customTable\")\r\n\r\nclass Kem extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            rawData: [],\r\n            dataTable: [],\r\n            rawDataPosition: [],\r\n            dataTablePosition: [],\r\n            deletePopUpVisible: false,\r\n            createVisible: false,\r\n            editVisible: false,\r\n            deletePopUpVisible: false,\r\n            linearProgress: false,\r\n            selectedIndex: 0,\r\n            limit: 5,\r\n            number: 0,\r\n            table_query: \"\",\r\n            positionCount: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(this.state.limit, this.state.number)\r\n    }\r\n\r\n    linearProgress = () => {\r\n        this.setState({ linearProgress: !this.state.linearProgress })\r\n    }\r\n\r\n    async getCountData() {\r\n\r\n        let param = {\r\n            \"id_user\": 1\r\n        }\r\n\r\n        let response = await api.create('MAIN').getAllPagingKem(param)\r\n        if (response.status === 200) {\r\n            this.setState({\r\n                positionCount: response.data.length\r\n            })\r\n        }\r\n\r\n        console.log(response)\r\n    }\r\n\r\n    async getData(limit, number) {\r\n        this.linearProgress()\r\n\r\n        let params = {\r\n            \"id_user\": 1\r\n        }\r\n\r\n        let response = await api.create('MAIN').getAllPagingKem(params)\r\n        if (response.status === 200 && response.data.status === 'S') {\r\n            let dataTable = response.data.data.map((value, index) => {\r\n                let {id, nilai, waktu, jumlah_benar, bacaan, user} = value\r\n                return [\r\n                    index += 1,\r\n                    id, \r\n                    nilai,\r\n                    waktu,\r\n                    jumlah_benar,\r\n                    bacaan.judul,\r\n                    user.nama,\r\n                ]\r\n            })\r\n            this.setState({\r\n                rawData: response.data,\r\n                dataTable\r\n            })\r\n            this.linearProgress()\r\n        } else {\r\n            if (response.data && response.data.message) alert(response.data.message)\r\n            this.linearProgress()\r\n        }\r\n    }\r\n\r\n    handleSubmit = async (data) => {\r\n        let payload = {\r\n            ...data,\r\n            birthDate: M(data.birthDate).format(\"YYYY-MM-DD\")\r\n        }\r\n        console.log(payload)\r\n        let response = await api.create('Kem').postKem(payload)\r\n        if (response.ok && response.status === 200) {\r\n            this.setState({ createVisible: false, editVisible: false })\r\n            this.getData(this.state.limit, this.state.number)\r\n        } else {\r\n            if (response.data && response.data.message) alert(response.data.message)\r\n        }\r\n        console.log(response)\r\n    }\r\n\r\n    handleUpdate = async (data) => {\r\n        let payload = {\r\n            ...data,\r\n            birthDate: M(data.birthDate).format(\"YYYY-MM-DD\")\r\n        }\r\n        let response = await api.create('Kem').putKem(payload)\r\n        if (response.ok && response.status === 200) {\r\n            this.setState({ createVisible: false, editVisible: false })\r\n            this.getData(this.state.limit, this.state.number)\r\n        } else {\r\n            if (response.data && response.data.message) alert(response.data.message)\r\n        }\r\n        console.log(response)\r\n    }\r\n\r\n    handleDelete = async (data) => {\r\n        let payload = {\r\n            \"id\": this.state.rawData[this.state.selectedIndex].id,\r\n        }\r\n        let response = await api.create('Kem').deleteKem(payload.id)\r\n        if (response.ok && response.status === 200) {\r\n            this.setState({ deletePopUpVisible: false })\r\n            this.getData(this.state.limit, this.state.number)\r\n        } else {\r\n            if (response.data && response.data.message) alert(response.data.message)\r\n        }\r\n        console.log(payload)\r\n    }\r\n\r\n    openCreateForm = () => {\r\n        this.setState({ createVisible: !this.state.createVisible })\r\n    };\r\n\r\n    openEditForm = (index = null) => {\r\n        this.setState({ editVisible: !this.state.editVisible, selectedIndex: index })\r\n    };\r\n \r\n    openDeletePopup = (index) => {\r\n        this.setState({ deletePopUpVisible: !this.state.deletePopUpVisible, selectedIndex: index })\r\n    };\r\n\r\n    getMuiTheme = () => createMuiTheme(ct.customTable());\r\n\r\n    options = ct.customOptions()\r\n\r\n    columns = [\r\n        \"No\",\r\n        \"ID\",\r\n        \"Nilai\",\r\n        \"Waktu\",\r\n        \"Jumlah Benar\",\r\n        \"Bacaan\",\r\n        \"Siswa\",\r\n    //     {\r\n    //         name: \"Action\",\r\n    //         options: {\r\n    //             customBodyRender: (val, tableMeta) => {\r\n    //                 return (\r\n    //                     <div className=\"display-flex-normal\">\r\n    //                         <button\r\n    //                             className=\"btn btn-primary btn-small-circle\"\r\n    //                             style={{ marginRight: 5 }}\r\n    //                             onClick={() =>\r\n    //                                 this.openEditForm(tableMeta.rowIndex)\r\n    //                             }\r\n    //                         >\r\n    //                             <i className=\"fa fa-lw fa-pencil-alt\" />\r\n    //                         </button>\r\n    //                         <button\r\n    //                             className=\"btn btn-primary btn-small-circle\"\r\n    //                             onClick={() => this.openDeletePopup(tableMeta.rowIndex)}>\r\n    //                             <i className=\"fa fa-lw fa-trash-alt\" />\r\n    //                         </button>\r\n    //                     </div>\r\n    //                 )\r\n    //             }\r\n    //         }\r\n    //     }\r\n    ]\r\n\r\n    render() {\r\n        let {positionCount, table_query} = this.state\r\n        let tableOptions = {\r\n            ...this.options,\r\n            serverSide: true,\r\n            count: positionCount,\r\n            searchText: table_query,\r\n            onTableChange: (action, tableState) => {\r\n                switch (action) {\r\n                    case 'changePage':\r\n                        this.setState({ table_page: tableState.page })\r\n                        this.getData(tableState.rowsPerPage, tableState.page);\r\n                        break;\r\n                    case 'changeRowsPerPage':\r\n                        this.setState({ table_limit: tableState.rowsPerPage })\r\n                        this.getData(tableState.rowsPerPage, tableState.page);\r\n                        break;\r\n                    case 'search':\r\n                        let searchText = tableState.searchText ? tableState.searchText : \"\"\r\n                        this.setState({ table_query: searchText }, () => {\r\n                            this.getData(tableState.rowsPerPage, tableState.page)\r\n                        })\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"main-content\">\r\n                <div className=\"padding-5px\">\r\n                    <MuiThemeProvider theme={this.getMuiTheme()}>\r\n                        <MUIDataTable\r\n                            title={\"Hasil KEM\"}\r\n                            key={positionCount}\r\n                            data={this.state.dataTable}\r\n                            columns={this.columns}\r\n                            options={tableOptions}\r\n                            buttonCreate={true}\r\n                            linearProgress={this.state.linearProgress}\r\n                            onCreate={this.openCreateForm.bind(this)}\r\n                        />\r\n                    </MuiThemeProvider>\r\n                </div>\r\n\r\n                {this.state.createVisible && (\r\n                    <FormKem\r\n                        type={\"create\"}\r\n                        tablePosition={this.state.dataTablePosition}\r\n                        onClickClose={this.openCreateForm}\r\n                        onSave={this.handleSubmit.bind(this)}\r\n                    />\r\n                )}\r\n                {this.state.editVisible && (\r\n                    <FormKem\r\n                        type={\"edit\"}\r\n                        tablePosition={this.state.dataTablePosition}\r\n                        payload={this.state.rawData[this.state.selectedIndex]}\r\n                        onClickClose={this.openEditForm}\r\n                        onSave={this.handleUpdate.bind(this)}\r\n                    />\r\n                )}\r\n\r\n                {this.state.deletePopUpVisible && (\r\n                    <PopUp\r\n                        type={\"delete\"}\r\n                        class={\"app-popup app-popup-show\"}\r\n                        onClickDelete={this.handleDelete}\r\n                        onClick={this.openDeletePopup}\r\n                    />\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Kem","import React, { Component } from \"react\";\r\n\r\nconst payloadDefault = {\r\n    \"id_user\": 1,\r\n    \"judul\": \"\",\r\n\t\"isi\": \"\",\r\n}\r\n\r\nclass FormRoom extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: props.data ? props.data :\r\n            {\r\n                ...payloadDefault\r\n            }\r\n        }\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     console.log(this.props.data)\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"app-popup app-popup-show\"}>\r\n                <div className=\"padding-top-20px\" />\r\n                <div className=\"popup-content background-white border-radius\">\r\n                    <div className=\"border-bottom padding-15px grid grid-2x\">\r\n                        <div className=\"col-1\">\r\n                            <div className=\"txt-site txt-12 txt-bold post-center\">\r\n                                {this.props.type === \"create\"\r\n                                    ? \"Tambah - Soal & Jawaban\"\r\n                                    : this.props.type === \"update\"\r\n                                        ? \"Edit - Soal & Jawaban\"\r\n                                        : \"View - Soal & Jawaban\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2 content-right\">\r\n                            <button\r\n                                className=\"btn btn-circle btn-grey\"\r\n                                onClick={this.props.onClickClose}\r\n                            >\r\n                                <i className=\"fa fa-lg fa-times\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <form action=\"#\"\r\n                        onSubmit={(e) => {\r\n                            e.preventDefault()\r\n                            this.props.onClickSave(this.state.data)}\r\n                        }\r\n                    >\r\n                        <div className=\"border-bottom padding-15px grid-mobile-none gap-20px\">\r\n                            <div className=\"margin-bottom-15px\">\r\n                                <div className=\"margin-5px\">\r\n                                    <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                        Judul\r\n                                    </span>\r\n                                </div>\r\n                                <input\r\n                                    readOnly={this.props.type === \"view\" ? true : false}\r\n                                    style={\r\n                                        this.props.type === \"view\"\r\n                                            ? { backgroundColor: \"#E6E6E6\" }\r\n                                            : null\r\n                                    }\r\n                                    type=\"text\"\r\n                                    className=\"txt txt-sekunder-color\"\r\n                                    placeholder=\"Judul\"\r\n                                    required\r\n                                    value={this.state.data.judul}\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            data: {\r\n                                                ...this.state.data,\r\n                                                judul: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"margin-bottom-15px\">\r\n                                <div className=\"margin-5px\">\r\n                                    <span className=\"txt-site txt-11 txt-main txt-bold\">\r\n                                        isi\r\n                                    </span>\r\n                                </div>\r\n                                <textarea\r\n                                    readOnly={this.props.type === \"view\" ? true : false}\r\n                                    style={\r\n                                        this.props.type === \"view\"\r\n                                            ? { backgroundColor: \"#E6E6E6\" }\r\n                                            : null\r\n                                    }\r\n                                    type=\"text\"\r\n                                    className=\"txt txt-sekunder-color edit-text\"\r\n                                    placeholder=\"Isi\"\r\n                                    required\r\n                                    value={this.state.data.isi}\r\n                                    onChange={(e) => {\r\n                                        this.setState({\r\n                                            data: {\r\n                                                ...this.state.data,\r\n                                                isi: e.target.value\r\n                                            }\r\n                                        })\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"padding-15px\">\r\n                            <div className=\"grid grid-2x\">\r\n                                <div className=\"col-1\" />\r\n                                <div className=\"col-2 content-right\">\r\n                                    {this.props.type !== \"view\" ? (\r\n                                        <button\r\n                                            style={{ marginLeft: \"15px\" }}\r\n                                            className=\"btn btn-primary\"\r\n                                            type=\"submit\"\r\n                                        >\r\n                                        <span>SAVE</span>\r\n                                        </button>\r\n                                    ) : null}\r\n                                    <button\r\n                                        style={{ marginLeft: \"15px\" }}\r\n                                        className=\"btn btn-primary\"\r\n                                        type=\"button\"\r\n                                        onClick={this.props.onClickClose}\r\n                                    >\r\n                                        <span>CLOSE</span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"padding-bottom-20px\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FormRoom;","import React, { Component } from \"react\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport MUIDataTable from \"mui-datatables-bitozen\";\r\nimport LoadingBar from \"react-top-loading-bar\";\r\nimport FormQA from \"./formQa\";\r\nimport api from \"../../services/Api\";\r\n\r\nlet ct = require(\"../../modules/custom/customTable\")\r\nconst options = ct.customOptions();\r\n\r\nclass Texts extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            clEditAble: '',\r\n            editAble: false,\r\n            rawData: [],\r\n            dataTable: [],\r\n            createVisible: false,\r\n            editVisible: false,\r\n            table_limit: 5,\r\n            table_page: 0,\r\n            table_query: \"\",\r\n            textsCount: 0,\r\n        }\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    opEditAble = () => {\r\n        if (this.state.editAble === false) {\r\n            this.setState({\r\n                clEditAble: 'edit-able',\r\n                editAble: true,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                clEditAble: '',\r\n                editAble: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    openCreateForm = () => {\r\n        this.setState({ createVisible: !this.state.createVisible })\r\n    };\r\n\r\n    openEditForm = (index = null) => {\r\n        this.setState({ editVisible: !this.state.editVisible, selectedIndex: index })\r\n    };\r\n\r\n    startFetch = () => {\r\n        this.LoadingBar.continousStart()\r\n    }\r\n\r\n    onFinishFetch = () => {\r\n        if (typeof this.LoadingBar === \"object\") this.LoadingBar.complete()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.startFetch();\r\n        this.getData(this.state.table_limit, this.state.table_page);\r\n    }\r\n\r\n    handlePopUp = () => {\r\n        this.getData()\r\n        this.setState({\r\n            savePopUpVisible: false,\r\n            createVisible: false,\r\n            editVisible: false\r\n        })\r\n    }\r\n\r\n    handleSubmit = async (data) => {\r\n        let payload = data\r\n        let response = await api.create('MAIN').createBacaan(payload)\r\n        if (response.ok && response.status === 200) {\r\n            if (response.data.status === 'S') {\r\n                alert(response.data.message)\r\n                this.openCreateForm()\r\n                this.getData()\r\n            } else {\r\n                alert(response.data.message)\r\n            }\r\n        } else {\r\n            if(response.data && response.data.message) alert(response.data.message)\r\n        }\r\n    }\r\n\r\n    handleUpdate = async (data) => {\r\n        var a = window.confirm('ubah data ini?')\r\n        if (a) {\r\n            let payload = {\r\n                \"id_user\": 1,\r\n                \"id_bacaan\": data.id,\r\n                \"judul\": data.judul,\r\n                \"isi\": data.isi\r\n            }\r\n            console.info('payload ==> ', payload)\r\n            let response = await api.create('MAIN').updateBacaan(payload)\r\n            if (response.ok && response.status === 200) {\r\n                if (response.data.status === 'S') {\r\n                    alert(response.data.message)\r\n                    this.openEditForm()\r\n                    this.getData()\r\n                } else {\r\n                    alert(response.data.message)\r\n                }\r\n            } else {\r\n                if(response.data && response.data.message) alert(response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    handleDelete = async (id) => {\r\n        var a = window.confirm('hapus data ini?')\r\n        if (a) {\r\n            let payload = {\r\n                \"id_user\": 1,\r\n                \"id_bacaan\": id\r\n            }\r\n            let response = await api.create('MAIN').deleteBacaan(payload)\r\n            if (response.ok && response.status === 200) {\r\n                if (response.data.status === 'S') {\r\n                    alert(response.data.message)\r\n                    this.getData()\r\n                } else {\r\n                    alert(response.data.message)\r\n                }\r\n            } else {\r\n                if (response.data && response.data.message) alert(response.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    getMuiTheme = () => createMuiTheme(ct.customTable());\r\n\r\n    options = ct.customOptions()\r\n\r\n    async getData(limit, number){\r\n        let param = {\r\n            \"id_user\": 1\r\n        }\r\n\r\n        let response = await api.create('MAIN').getAllPagingBacaan(param)\r\n        if(response.status === 200 && response.data.status === 'S'){\r\n            let dataTable = response.data.data.map((value, index) => {\r\n                const { id, judul, jumlah_kata } = value;\r\n                return [\r\n                    index += (1 + (this.state.table_page * this.state.table_limit)),\r\n                    id,\r\n                    judul,\r\n                    jumlah_kata\r\n                ]\r\n            })\r\n            this.setState({\r\n                rawData: response.data.data,\r\n                dataTable\r\n            })\r\n            this.onFinishFetch()\r\n        } else {\r\n            this.onFinishFetch()\r\n        }\r\n        // this.getCountData()\r\n        console.log(response)\r\n    }\r\n\r\n    async getCountData() {\r\n        let param = {\r\n            id_user: '1'\r\n        }\r\n\r\n        let response = await api.create('LATIHAN').getAllPagingLatihan(param)\r\n        if (response.status === 200) {\r\n            this.setState({\r\n                textsCount: response.data.length\r\n            })\r\n        }\r\n    }\r\n\r\n    columns = [\r\n        \"No\",\r\n        \"ID\",\r\n        \"Judul\",\r\n        \"Jumlah Kata\",\r\n        {\r\n            name: \"Action\",\r\n            options: {\r\n                customBodyRender: (val, tableMeta) => {\r\n                    return (\r\n                        <div>\r\n                            <button\r\n                                className=\"btn btn-primary btn-small-circle\"\r\n                                style={{ marginRight: 5 }}\r\n                                onClick={() => this.openEditForm(tableMeta.rowIndex)}\r\n                            >\r\n                                <i className=\"fa fa-lw fa-pencil-alt\" />\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-primary btn-small-circle\"\r\n                                onClick={() => this.handleDelete(tableMeta.rowData[1])}>\r\n                                <i className=\"fa fa-lw fa-trash-alt\" />\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    ]\r\n\r\n    render() {\r\n\r\n        let { textsCount, table_query } = this.state\r\n        let tableOptions = {\r\n            ...options,\r\n            serverSide: true,\r\n            count: textsCount,\r\n            searchText: table_query,\r\n            onTableChange: (action, tableState) => {\r\n                switch (action) {\r\n                    case 'changePage':\r\n                        this.setState({ table_page: tableState.page })\r\n                        this.getData(tableState.rowsPerPage, tableState.page)\r\n                        break;\r\n                    case 'changeRowsPerPage':\r\n                        this.setState({ table_limit: tableState.rowsPerPage })\r\n                        this.getData(tableState.rowsPerPage, tableState.page)\r\n                        break;\r\n                    case 'search':\r\n                        let searchText = tableState.searchText ? tableState.searchText: \"\"\r\n                        this.setState({ table_query: searchText }, () => {\r\n                            this.getData(tableState.rowsPerPage, tableState.page)\r\n                        })\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"main-content\">\r\n                <LoadingBar onRef={ref => (this.LoadingBar = ref)} />\r\n                <div className=\"padding-5px\">\r\n                    <MuiThemeProvider theme={this.getMuiTheme()}>\r\n                        <MUIDataTable\r\n                            title={\"Soal & Jawaban\"}\r\n                            key={textsCount}\r\n                            data={this.state.dataTable}\r\n                            columns={this.columns}\r\n                            options={tableOptions}\r\n                            buttonCreate={true}\r\n                            onCreate={this.openCreateForm.bind(this)}\r\n                        />\r\n                    </MuiThemeProvider>\r\n                </div>\r\n                {this.state.createVisible && (\r\n                    <FormQA\r\n                        type={\"create\"}\r\n                        onClickClose={this.openCreateForm}\r\n                        onClickSave={this.handleSubmit.bind(this)}\r\n                    />\r\n                )}\r\n                {this.state.editVisible && (\r\n                    <FormQA\r\n                        type={\"update\"}\r\n                        data={this.state.rawData[this.state.selectedIndex]}\r\n                        onClickClose={this.openEditForm}\r\n                        onClickSave={this.handleUpdate.bind(this)}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Texts","import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Route, NavLink, HashRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport Login from './components/login/login'\r\nimport Home from './components/dashboard/home'\r\nimport ProfilePopup from './modules/popup/Profile'\r\nimport './App.css';\r\nimport Texts from './components/texts/texts'\r\nimport Students from './components/students/students'\r\nimport Training from './components/training/training'\r\nimport Kem from './components/kem/kem'\r\nimport Qa from './components/qa/qa'\r\n\r\n// icon\r\nlet angle = 'fa fa-lg fa-angle-right'\r\n\r\n// sub menu\r\nlet opSubMenu = 'app-menu app-submenu-themes app-submenu'\r\n\r\nlet opMenu = 'list'\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n\r\n    super()\r\n    this.state = {\r\n      appClass: 'app', //app-side-big-icon\r\n      appButtonClass: 'fa fa-lg fa-bars',\r\n      travelClass: opMenu,\r\n      travelSubmenu: opSubMenu,\r\n      travelMoreIcon: angle,\r\n      timeClass: opMenu,\r\n      timeSubmenu: opSubMenu,\r\n      timeMoreIcon: angle,\r\n      leaveClass: opMenu,\r\n      leaveSubmenu: opSubMenu,\r\n      leaveMoreIcon: angle,\r\n      overtimeClass: opMenu,\r\n      overtimeSubmenu: opSubMenu,\r\n      overtimeMoreIcon: angle,\r\n      employeeClass: opMenu,\r\n      employeeSubmenu: opSubMenu,\r\n      employeeMoreIcon: angle,\r\n    }\r\n\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if(nextProps.auth.id !== this.props.auth.id) {\r\n      setTimeout(() => {\r\n          this.props.onLogoOut(nextProps.auth.id) \r\n      }, 60000) //one minute \r\n  \r\n    }\r\n  }\r\n\r\n  createSubMenu = (icon, val, link) => {\r\n    return (\r\n      <NavLink to={link}>\r\n        <li className=\"content\">\r\n          <div className=\"list\">\r\n              <div className=\"icn\"><i className={icon}></i></div>\r\n              <div className=\"ttl\">{val}</div>\r\n              <div className=\"icn txt-site txt-right txt-12\"></div>\r\n          </div>\r\n        </li>\r\n      </NavLink>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <HashRouter history={Router.browserHistory}>\r\n         \r\n        <div>\r\n          {/* Single Page */}\r\n          <div className=\"app\">\r\n            <Route exact path=\"/\" component={Login} />\r\n          </div>\r\n\r\n          {/* Multiple Page */}\r\n          <div className={this.state.appClass}>\r\n            <div className=\"app-slide\">\r\n              <div className=\"slide-content background-white\">\r\n                <div className=\"app-title\">\r\n                  <div className=\"col-1\">\r\n                    <h1 className=\"txt-site txt-main txt-upp txt-18 txt-bold post-center margin-left-10px\">\r\n                      ADMIN KEM\r\n                    </h1>\r\n                  </div>\r\n                  <div className=\"col-2\">\r\n                    {/* <button\r\n                      className=\"btn btn-grey btn-circle\"\r\n                      onClick={this.opSlide}>\r\n                      <i className={this.state.appButtonClass} />\r\n                    </button> */}\r\n                  </div>\r\n                </div>\r\n                {/* menu */}\r\n                <div className=\"slide-content-place change-scrollbar\">\r\n                  <div className=\"app-space\">\r\n                    DASHBOARD\r\n                  </div>\r\n                  <ul className=\"app-menu\">\r\n                    {this.createSubMenu('fa fa-lg fa-home', 'Dashboard', '/home')}\r\n                  </ul>\r\n\r\n                  <div className=\"app-space\">\r\n                    MASTERDATA\r\n                  </div>\r\n                  <ul className=\"app-menu\">\r\n                    {this.createSubMenu('fa fa-lg fa-running', 'Data Latihan', '/training')}\r\n                    {this.createSubMenu('fa fa-lg fa-book', 'Data Bacaan', '/texts')}\r\n                    {/* {this.createSubMenu('fa fa-lg fa-question', 'Data Soal & Jawaban', '/qa')} */}\r\n                    {this.createSubMenu('fa fa-lg fa-users', 'Data Murid', '/students')}\r\n                    {this.createSubMenu('fa fa-lg fa-chart-pie', 'Data Hasil KEM', '/kem')}\r\n                  </ul>\r\n\r\n                  <div className=\"app-space\">\r\n                    AKUN\r\n                  </div>\r\n                  <ul className=\"app-menu\">\r\n                    {/* {this.createSubMenu('fa fa-lg fa-cogs', 'Pengaturan Akun', '/404')} */}\r\n                    {this.createSubMenu('fa fa-lg fa-key', 'Ubah Password', '/404')}\r\n                    {this.createSubMenu('fa fa-lg fa-mask', 'Ubah Avatar', '/404')}\r\n                  </ul>\r\n\r\n                  <div className=\"app-space\">\r\n                    LAINNYA\r\n                  </div>\r\n                  <ul className=\"app-menu\">\r\n                    {this.createSubMenu('fa fa-lg fa-power-off', 'Logout', '/404')}\r\n                  </ul>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"app-main\">\r\n              <div className=\"app-panel\">\r\n                <div className=\"panel-content\">\r\n\r\n                  <div className=\"col-1\">\r\n                    <div className=\"app-mobile\">\r\n                      <button className=\"btn btn-circle btn-primary\">\r\n                        <i className=\"fa fa-lg fa-search\" />\r\n                      </button>\r\n                    </div>\r\n                    {/* <div className=\"app-desktop\">\r\n                      <SearchPopup />\r\n                    </div> */}\r\n                  </div>\r\n                  <div className=\"col-2 content-right\">\r\n                    <div className=\"panel-button\">\r\n                      <ProfilePopup />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"app-place\">\r\n                <Route exact path=\"/home\" component={Home} />\r\n                <Route exact path=\"/texts\" component={Texts} />\r\n                <Route exact path=\"/students\" component={Students} />\r\n                <Route exact path=\"/training\" component={Training} />\r\n                <Route exact path=\"/kem\" component={Kem} />\r\n                <Route exact path=\"/qa\" component={Qa} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tauth: state.auth\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(App)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const eventTrackMiddleware = store => next => action => {\r\n    // console.warn('dispatching', action)\r\n    let actionType = action.type;\r\n    if(actionType) {   \r\n        if (typeof action.error == \"string\") {\r\n            alert(action.error);\r\n        }\r\n    }\r\n\r\n    let result = next(action);\r\n    // console.warn('next state', store.getState())\r\n    return result;\r\n}\r\n\r\nexport default eventTrackMiddleware;","import { call, put } from 'redux-saga/effects';\r\nimport AuthActions from '../redux/AuthRedux';\r\nimport { isEmpty } from 'ramda';\r\n\r\nexport function* getAuth(api, action) {\r\n\tconst { data } = action;\r\n    const response = yield call(api.userAuth, data);\r\n\r\n\tif (typeof atob !== 'undefined') {\r\n\t\tconsole.log('===> ', response);\r\n\t}\r\n    \r\n\tif (response.ok && response.data && !isEmpty(response.data.token)) {\r\n        // const response_detail = yield call(api.getUserDetail, response.data.token);\r\n        let payload = {\r\n            ...response.data,\r\n            // ...response_detail.data\r\n\t\t};\r\n\t\tconsole.info(payload);\r\n\t\tlocalStorage.setItem(\"access_token\", payload.token);\r\n\t\tconst userInfo = {\r\n\t\t\tisLoggedIn:true,\r\n\t\t\tid:payload.id,\r\n\t\t\tnisn:payload.nisn,\r\n\t\t\tusname:payload.usname,\r\n\t\t\tid_avatar:payload.id_avatar,\r\n\t\t};\r\n\t\tlocalStorage.setItem(\"user_info\",JSON.stringify(userInfo));\r\n        yield put(AuthActions.authSuccess(payload));\r\n\t} else {\r\n\t\tif (response.data && response.data.status === 500) {\r\n\t\t\treturn yield put(AuthActions.authFailure({\r\n\t\t\t\tpath: 'Sign In',\r\n\t\t\t\tmessage: response.data.message, response\r\n\t\t\t}));\r\n\t\t}\r\n\t\tyield put(AuthActions.authFailure('NISN atau Password Salah !'));\r\n\t}\r\n}","import { takeLatest, all } from 'redux-saga/effects';\r\nimport API from '../services/Api';\r\n\r\nimport { AuthTypes } from '../redux/AuthRedux';\r\nimport { getAuth } from './AuthSagas';\r\n\r\nconst empApi = API.create('USERAUTH');\r\n\r\nexport default function* root() {\r\n\tyield all([\r\n        takeLatest(AuthTypes.AUTH_REQUEST, getAuth, empApi),\r\n\r\n    ]);\r\n}","import * as R from 'ramda'\r\nimport Immutable from 'seamless-immutable'\r\n\r\n// is this object already Immutable?\r\nconst isImmutable = R.has('asMutable')\r\n\r\n// change this Immutable object into a JS object\r\nconst convertToJs = (state) => state.asMutable({deep: true})\r\n\r\n// optionally convert this object into a JS object if it is Immutable\r\nconst fromImmutable = R.when(isImmutable, convertToJs)\r\n\r\n// convert this JS object into an Immutable object\r\nconst toImmutable = (raw) => Immutable(raw)\r\n\r\n// the transform interface that redux-persist is expecting\r\nexport default {\r\n  out: (state) => {\r\n    // console.log({ retrieving: state })\r\n    return toImmutable(state)\r\n  },\r\n  in: (raw) => {\r\n    // console.log({ storing: raw })\r\n    return fromImmutable(raw)\r\n  }\r\n}","import immutablePersistenceTransform from '../services/ImmutablePersistenceTransform'\r\n// import { AsyncStorage } from 'AsyncStorage';\r\nimport storageSession from 'redux-persist/lib/storage/session'\r\n\r\n// More info here:  https://shift.infinite.red/shipping-persistant-reducers-7341691232b1\r\nconst REDUX_PERSIST = {\r\n\tactive: true,\r\n\treducerVersion: '1.0',\r\n\tstoreConfig: {\r\n\t\tkey: 'primary',\r\n\t\tstorage: storageSession,\r\n\t\twhitelist: ['auth'],\r\n\t\ttransforms: [immutablePersistenceTransform]\r\n\t}\r\n};\r\n\r\nexport default REDUX_PERSIST ;\r\n","import { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport configureStore from './createstore';\r\nimport rootSaga from '../sagas';\r\nimport ReduxPersist from '../config/reduxpersist';\r\nimport { persistStore } from 'redux-persist'\r\n\r\nexport const reducers = combineReducers({\r\n\tauth: require('./AuthRedux').reducer\r\n});\r\n\r\nexport default () => {\r\n\tlet finalReducers = reducers;\r\n\t// If rehydration is on use persistReducer otherwise default combineReducers\r\n\tif (ReduxPersist.active) {\r\n\t\tconst persistConfig = ReduxPersist.storeConfig;\r\n\t\tfinalReducers = persistReducer(persistConfig, reducers);\r\n\t}\r\n\r\n\tlet { store, sagasManager, sagaMiddleware } = configureStore(finalReducers, rootSaga);\r\n\r\n\tif (module.hot) {\r\n\t\tmodule.hot.accept(() => {\r\n\t\t\tconst nextRootReducer = require('.').reducers;\r\n\t\t\tstore.replaceReducer(nextRootReducer);\r\n\r\n\t\t\tconst newYieldedSagas = require('../sagas').default;\r\n\t\t\tsagasManager.cancel();\r\n\t\t\tsagasManager.done.then(() => {\r\n\t\t\t\tsagasManager = sagaMiddleware.run(newYieldedSagas);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n    let persistor = persistStore(store);\r\n\r\n\treturn { store, persistor };\r\n};","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport EventTrackMiddleware from './eventtrackmiddleware';\r\nimport createSagaMiddleware from 'redux-saga';\r\n// import { loadState, saveState } from './sessionStorage';\r\n\r\nexport default (rootReducer, rootSaga) => {\r\n    const middleware = [];\r\n    const enhancers = [];\r\n\r\n    middleware.push(EventTrackMiddleware);\r\n\r\n    const sagaMonitor = null;\r\n    const sagaMiddleware = createSagaMiddleware({ sagaMonitor });\r\n    middleware.push(sagaMiddleware);\r\n\r\n    enhancers.push(applyMiddleware(...middleware));\r\n\r\n    // const persistedState = loadState();\r\n    const store = createStore(rootReducer, compose(...enhancers));\r\n\r\n    // store.subscribe(() => {\r\n    //     saveState(store.getState());\r\n    // });\r\n\r\n    let sagasManager = sagaMiddleware.run(rootSaga);\r\n\r\n    return {\r\n        store,\r\n        sagasManager,\r\n        sagaMiddleware\r\n    };\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/icons/fontawesome/css/all.min.css'\r\nimport './assets/sass/app.css'\r\nimport './assets/css/circle.css'\r\nimport 'input-moment/dist/input-moment.css'\r\nimport 'react-times/css/material/default.css'\r\nimport 'react-times/css/classic/default.css'\r\nimport 'react-date-range/dist/styles.css'\r\nimport 'react-date-range/dist/theme/default.css'\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux'\r\nimport createStore from './redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nconst { store, persistor } = createStore()\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n    </PersistGate>\r\n</Provider>, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}